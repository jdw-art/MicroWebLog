2024-07-24 19:24:59.567 [http-nio-8088-exec-4] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ## HeaderUserId2ContextFilter，用户 ID：1
2024-07-24 19:24:59.567 [http-nio-8088-exec-4] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 1
2024-07-24 19:24:59.568 [http-nio-8088-exec-4] INFO  c.j.w.f.b.o.aspect.ApiOperationLogAspect - ====== 请求开始: [前台获取博客详情], 入参: , 请求类: BlogSettingsController, 请求方法: findDetail =================================== 
2024-07-24 19:24:59.580 [http-nio-8088-exec-4] INFO  c.j.w.f.b.o.aspect.ApiOperationLogAspect - ====== 请求结束: [前台获取博客详情], 耗时: 12ms, 出参: {"success":true,"message":null,"errorCode":null,"data":{"logo":"http://110.41.141.141:9000/weblog/weblog/9853f8be13cb4f7fae00e3f5233dd688.png","name":"WebLog","author":"Jacob","introduction":"求知若饥，虚心若愚","avatar":"https://webook-aliyun.oss-cn-hangzhou.aliyuncs.com/f5df2d94010149deb1da9c2a2096a9dc.jpg","githubHomepage":"https://github.com/jdw-art","csdnHomepage":"https://www.csdn.net/?spm=1010.2135.3001.4476","giteeHomepage":"","zhihuHomepage":"https://www.zhihu.com/people/54-10-50-93"}} =================================== 
2024-07-24 19:24:59.582 [http-nio-8088-exec-4] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 1
2024-07-24 19:24:59.661 [http-nio-8088-exec-9] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ## HeaderUserId2ContextFilter，用户 ID：1
2024-07-24 19:24:59.662 [http-nio-8088-exec-9] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 1
2024-07-24 19:24:59.665 [http-nio-8088-exec-5] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ## HeaderUserId2ContextFilter，用户 ID：1
2024-07-24 19:24:59.665 [http-nio-8088-exec-5] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 1
2024-07-24 19:24:59.666 [http-nio-8088-exec-5] INFO  c.j.w.f.b.o.aspect.ApiOperationLogAspect - ====== 请求开始: [前台获取统计信息], 入参: , 请求类: StatisticsController, 请求方法: findInfo =================================== 
2024-07-24 19:24:59.667 [http-nio-8088-exec-9] INFO  c.j.w.f.b.o.aspect.ApiOperationLogAspect - ====== 请求开始: [获取首页文章分页数据], 入参: {"current":1,"size":10}, 请求类: ArticleController, 请求方法: findArticlePageList =================================== 
2024-07-24 19:24:59.698 [http-nio-8088-exec-5] INFO  c.j.w.f.b.o.aspect.ApiOperationLogAspect - ====== 请求结束: [前台获取统计信息], 耗时: 32ms, 出参: {"success":true,"message":null,"errorCode":null,"data":{"articleTotalCount":28,"categoryTotalCount":15,"tagTotalCount":24,"pvTotalCount":769}} =================================== 
2024-07-24 19:24:59.700 [http-nio-8088-exec-5] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 1
2024-07-24 19:24:59.719 [http-nio-8088-exec-6] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ## HeaderUserId2ContextFilter，用户 ID：1
2024-07-24 19:24:59.719 [http-nio-8088-exec-8] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ## HeaderUserId2ContextFilter，用户 ID：1
2024-07-24 19:24:59.719 [http-nio-8088-exec-6] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 1
2024-07-24 19:24:59.719 [http-nio-8088-exec-8] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 1
2024-07-24 19:24:59.720 [http-nio-8088-exec-8] INFO  c.j.w.f.b.o.aspect.ApiOperationLogAspect - ====== 请求开始: [前台获取标签列表], 入参: , 请求类: TagController, 请求方法: findTagList =================================== 
2024-07-24 19:24:59.724 [http-nio-8088-exec-6] INFO  c.j.w.f.b.o.aspect.ApiOperationLogAspect - ====== 请求开始: [前台获取分类列表], 入参: {"size":10}, 请求类: CategoryController, 请求方法: findCategoryList =================================== 
2024-07-24 19:24:59.725 [http-nio-8088-exec-8] INFO  c.j.w.f.b.o.aspect.ApiOperationLogAspect - ====== 请求结束: [前台获取标签列表], 耗时: 4ms, 出参: {"success":true,"message":null,"errorCode":null,"data":[{"id":47,"name":"java","articlesTotal":13},{"id":48,"name":"脉冲神经网络","articlesTotal":6},{"id":49,"name":"snn","articlesTotal":6},{"id":54,"name":"联想记忆模型","articlesTotal":1},{"id":55,"name":"集合","articlesTotal":1},{"id":56,"name":"并发","articlesTotal":1},{"id":57,"name":"RabbitMQ","articlesTotal":2},{"id":58,"name":"spring","articlesTotal":4},{"id":59,"name":"springboot","articlesTotal":4},{"id":60,"name":"mongodb","articlesTotal":2},{"id":61,"name":"nosql","articlesTotal":1},{"id":62,"name":"redis","articlesTotal":2},{"id":63,"name":"mysql","articlesTotal":1},{"id":64,"name":"jvm","articlesTotal":1},{"id":65,"name":"elasticSearch","articlesTotal":1},{"id":66,"name":"SpringMVC","articlesTotal":1},{"id":67,"name":"计算机网络","articlesTotal":1},{"id":68,"name":"操作系统","articlesTotal":1},{"id":69,"name":"设计模式","articlesTotal":1},{"id":70,"name":"SpringCloud","articlesTotal":2},{"id":71,"name":"微服务","articlesTotal":3},{"id":72,"name":"jmm","articlesTotal":1},{"id":73,"name":"高可用","articlesTotal":2},{"id":74,"name":"系统设计","articlesTotal":2}]} =================================== 
2024-07-24 19:24:59.730 [http-nio-8088-exec-8] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 1
2024-07-24 19:24:59.736 [http-nio-8088-exec-6] INFO  c.j.w.f.b.o.aspect.ApiOperationLogAspect - ====== 请求结束: [前台获取分类列表], 耗时: 12ms, 出参: {"success":true,"message":null,"errorCode":null,"data":[{"id":29,"name":"Java","articlesTotal":6},{"id":31,"name":"SNN","articlesTotal":6},{"id":33,"name":"SpringBoot","articlesTotal":3},{"id":30,"name":"工具","articlesTotal":2},{"id":34,"name":"Redis","articlesTotal":2},{"id":32,"name":"Spring","articlesTotal":1},{"id":35,"name":"RabbitMQ","articlesTotal":1},{"id":36,"name":"MySQL","articlesTotal":1},{"id":37,"name":"MongoDB","articlesTotal":1},{"id":38,"name":"ElasticSearch","articlesTotal":1}]} =================================== 
2024-07-24 19:24:59.739 [http-nio-8088-exec-6] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 1
2024-07-24 19:24:59.773 [http-nio-8088-exec-9] INFO  c.j.w.f.b.o.aspect.ApiOperationLogAspect - ====== 请求结束: [获取首页文章分页数据], 耗时: 105ms, 出参: {"success":true,"message":null,"errorCode":null,"data":[{"id":43,"cover":"http://110.41.141.141:9000/weblog/weblog/05192a6167704ae8851dbcab6d4ebb7a.jpg","title":"E-Commerce","createDate":"2024-04-27","summary":"E-Commerce项目摘要","category":{"id":33,"name":"SpringBoot","articlesTotal":null},"tags":[{"id":47,"name":"java","articlesTotal":null},{"id":58,"name":"spring","articlesTotal":null},{"id":59,"name":"springboot","articlesTotal":null},{"id":57,"name":"RabbitMQ","articlesTotal":null},{"id":60,"name":"mongodb","articlesTotal":null}],"isTop":true},{"id":44,"cover":"http://110.41.141.141:9000/weblog/weblog/21bfecab22f14cef9536fc55c5ac3d11.png","title":"WebLog","createDate":"2024-04-27","summary":"WebLog项目摘要","category":{"id":33,"name":"SpringBoot","articlesTotal":null},"tags":[{"id":47,"name":"java","articlesTotal":null},{"id":58,"name":"spring","articlesTotal":null},{"id":59,"name":"springboot","articlesTotal":null}],"isTop":true},{"id":59,"cover":"http://110.41.141.141:9000/weblog/245940328a974c3aa35a4fab259c2f93.jpg","title":"负载均衡","createDate":"2024-07-19","summary":"负载均衡","category":{"id":41,"name":"高可用","articlesTotal":null},"tags":[{"id":73,"name":"高可用","articlesTotal":null},{"id":74,"name":"系统设计","articlesTotal":null},{"id":71,"name":"微服务","articlesTotal":null}],"isTop":false},{"id":58,"cover":"http://110.41.141.141:9000/weblog/90cd980f59014947af531833d3d32666.jpg","title":"JMM","createDate":"2024-07-19","summary":"Java内存模型","category":{"id":29,"name":"Java","articlesTotal":null},"tags":[{"id":72,"name":"jmm","articlesTotal":null}],"isTop":false},{"id":57,"cover":"http://110.41.141.141:9000/weblog/14b767a52a0548a29129a64ec9c31b92.png","title":"微服务","createDate":"2024-07-19","summary":"微服务","category":{"id":43,"name":"系统设计","articlesTotal":null},"tags":[{"id":71,"name":"微服务","articlesTotal":null},{"id":70,"name":"SpringCloud","articlesTotal":null},{"id":74,"name":"系统设计","articlesTotal":null},{"id":73,"name":"高可用","articlesTotal":null}],"isTop":false},{"id":56,"cover":"http://110.41.141.141:9000/weblog/065adf0970a84db291e85a56d9927905.jpg","title":"SpringCloud","createDate":"2024-07-19","summary":"Spring Cloud 八股","category":{"id":40,"name":"SpringCloud","articlesTotal":null},"tags":[{"id":70,"name":"SpringCloud","articlesTotal":null},{"id":71,"name":"微服务","articlesTotal":null}],"isTop":false},{"id":55,"cover":"http://110.41.141.141:9000/weblog/031b75962ad54f2f8e6cde5799dbd0f5.jpg","title":"DesignPattern","createDate":"2024-07-19","summary":"设计模式","category":{"id":29,"name":"Java","articlesTotal":null},"tags":[{"id":69,"name":"设计模式","articlesTotal":null}],"isTop":false},{"id":54,"cover":"http://110.41.141.141:9000/weblog/weblog/630032da446240d190e66871b6433f42.jpg","title":"操作系统","createDate":"2024-05-22","summary":"操作系统八股","category":{"id":30,"name":"工具","articlesTotal":null},"tags":[{"id":68,"name":"操作系统","articlesTotal":null}],"isTop":false},{"id":53,"cover":"http://110.41.141.141:9000/weblog/weblog/b483ce35c9e44b9db5df361e2cd1e2af.jpg","title":"计算机网络","createDate":"2024-05-22","summary":"计算机网络八股","category":{"id":30,"name":"工具","articlesTotal":null},"tags":[{"id":67,"name":"计算机网络","articlesTotal":null}],"isTop":false},{"id":51,"cover":"http://110.41.141.141:9000/weblog/weblog/20802574f640434eb207bf01a74b4c0c.jpg","title":"RedisIncrement","createDate":"2024-05-17","summary":"redis图文补充","category":{"id":34,"name":"Redis","articlesTotal":null},"tags":[{"id":62,"name":"redis","articlesTotal":null},{"id":47,"name":"java","articlesTotal":null}],"isTop":false}],"total":28,"size":10,"current":1,"pages":3} =================================== 
2024-07-24 19:24:59.783 [http-nio-8088-exec-9] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 1
2024-07-24 19:31:53.397 [http-nio-8088-exec-3] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ## HeaderUserId2ContextFilter，用户 ID：1
2024-07-24 19:31:53.398 [http-nio-8088-exec-3] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 1
2024-07-24 19:31:53.399 [http-nio-8088-exec-3] INFO  c.j.w.f.b.o.aspect.ApiOperationLogAspect - ====== 请求开始: [前台获取博客详情], 入参: , 请求类: BlogSettingsController, 请求方法: findDetail =================================== 
2024-07-24 19:31:53.410 [http-nio-8088-exec-3] INFO  c.j.w.f.b.o.aspect.ApiOperationLogAspect - ====== 请求结束: [前台获取博客详情], 耗时: 10ms, 出参: {"success":true,"message":null,"errorCode":null,"data":{"logo":"http://110.41.141.141:9000/weblog/weblog/9853f8be13cb4f7fae00e3f5233dd688.png","name":"WebLog","author":"Jacob","introduction":"求知若饥，虚心若愚","avatar":"https://webook-aliyun.oss-cn-hangzhou.aliyuncs.com/f5df2d94010149deb1da9c2a2096a9dc.jpg","githubHomepage":"https://github.com/jdw-art","csdnHomepage":"https://www.csdn.net/?spm=1010.2135.3001.4476","giteeHomepage":"","zhihuHomepage":"https://www.zhihu.com/people/54-10-50-93"}} =================================== 
2024-07-24 19:31:53.412 [http-nio-8088-exec-3] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 1
2024-07-24 19:31:53.475 [http-nio-8088-exec-4] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ## HeaderUserId2ContextFilter，用户 ID：1
2024-07-24 19:31:53.475 [http-nio-8088-exec-1] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ## HeaderUserId2ContextFilter，用户 ID：1
2024-07-24 19:31:53.475 [http-nio-8088-exec-4] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 1
2024-07-24 19:31:53.475 [http-nio-8088-exec-1] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 1
2024-07-24 19:31:53.475 [http-nio-8088-exec-5] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ## HeaderUserId2ContextFilter，用户 ID：1
2024-07-24 19:31:53.475 [http-nio-8088-exec-5] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 1
2024-07-24 19:31:53.475 [http-nio-8088-exec-8] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ## HeaderUserId2ContextFilter，用户 ID：1
2024-07-24 19:31:53.475 [http-nio-8088-exec-8] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 1
2024-07-24 19:31:53.476 [http-nio-8088-exec-5] INFO  c.j.w.f.b.o.aspect.ApiOperationLogAspect - ====== 请求开始: [前台获取统计信息], 入参: , 请求类: StatisticsController, 请求方法: findInfo =================================== 
2024-07-24 19:31:53.476 [http-nio-8088-exec-8] INFO  c.j.w.f.b.o.aspect.ApiOperationLogAspect - ====== 请求开始: [前台获取标签列表], 入参: , 请求类: TagController, 请求方法: findTagList =================================== 
2024-07-24 19:31:53.477 [http-nio-8088-exec-4] INFO  c.j.w.f.b.o.aspect.ApiOperationLogAspect - ====== 请求开始: [前台获取分类列表], 入参: {"size":10}, 请求类: CategoryController, 请求方法: findCategoryList =================================== 
2024-07-24 19:31:53.478 [http-nio-8088-exec-1] INFO  c.j.w.f.b.o.aspect.ApiOperationLogAspect - ====== 请求开始: [获取文章详情], 入参: {"articleId":44}, 请求类: ArticleController, 请求方法: findArticleDetail =================================== 
2024-07-24 19:31:53.482 [http-nio-8088-exec-8] INFO  c.j.w.f.b.o.aspect.ApiOperationLogAspect - ====== 请求结束: [前台获取标签列表], 耗时: 6ms, 出参: {"success":true,"message":null,"errorCode":null,"data":[{"id":47,"name":"java","articlesTotal":13},{"id":48,"name":"脉冲神经网络","articlesTotal":6},{"id":49,"name":"snn","articlesTotal":6},{"id":54,"name":"联想记忆模型","articlesTotal":1},{"id":55,"name":"集合","articlesTotal":1},{"id":56,"name":"并发","articlesTotal":1},{"id":57,"name":"RabbitMQ","articlesTotal":2},{"id":58,"name":"spring","articlesTotal":4},{"id":59,"name":"springboot","articlesTotal":4},{"id":60,"name":"mongodb","articlesTotal":2},{"id":61,"name":"nosql","articlesTotal":1},{"id":62,"name":"redis","articlesTotal":2},{"id":63,"name":"mysql","articlesTotal":1},{"id":64,"name":"jvm","articlesTotal":1},{"id":65,"name":"elasticSearch","articlesTotal":1},{"id":66,"name":"SpringMVC","articlesTotal":1},{"id":67,"name":"计算机网络","articlesTotal":1},{"id":68,"name":"操作系统","articlesTotal":1},{"id":69,"name":"设计模式","articlesTotal":1},{"id":70,"name":"SpringCloud","articlesTotal":2},{"id":71,"name":"微服务","articlesTotal":3},{"id":72,"name":"jmm","articlesTotal":1},{"id":73,"name":"高可用","articlesTotal":2},{"id":74,"name":"系统设计","articlesTotal":2}]} =================================== 
2024-07-24 19:31:53.484 [http-nio-8088-exec-8] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 1
2024-07-24 19:31:53.493 [http-nio-8088-exec-4] INFO  c.j.w.f.b.o.aspect.ApiOperationLogAspect - ====== 请求结束: [前台获取分类列表], 耗时: 15ms, 出参: {"success":true,"message":null,"errorCode":null,"data":[{"id":29,"name":"Java","articlesTotal":6},{"id":31,"name":"SNN","articlesTotal":6},{"id":33,"name":"SpringBoot","articlesTotal":3},{"id":30,"name":"工具","articlesTotal":2},{"id":34,"name":"Redis","articlesTotal":2},{"id":32,"name":"Spring","articlesTotal":1},{"id":35,"name":"RabbitMQ","articlesTotal":1},{"id":36,"name":"MySQL","articlesTotal":1},{"id":37,"name":"MongoDB","articlesTotal":1},{"id":38,"name":"ElasticSearch","articlesTotal":1}]} =================================== 
2024-07-24 19:31:53.494 [http-nio-8088-exec-4] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 1
2024-07-24 19:31:53.502 [http-nio-8088-exec-5] INFO  c.j.w.f.b.o.aspect.ApiOperationLogAspect - ====== 请求结束: [前台获取统计信息], 耗时: 26ms, 出参: {"success":true,"message":null,"errorCode":null,"data":{"articleTotalCount":28,"categoryTotalCount":15,"tagTotalCount":24,"pvTotalCount":769}} =================================== 
2024-07-24 19:31:53.504 [http-nio-8088-exec-5] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 1
2024-07-24 19:31:53.548 [http-nio-8088-exec-1] INFO  c.j.weblog.event.subscriber.ReadArticleSubscriber - ==> threadName: http-nio-8088-exec-1
2024-07-24 19:31:53.548 [http-nio-8088-exec-1] INFO  c.j.weblog.event.subscriber.ReadArticleSubscriber - ==> 文章阅读事件消费成功，articleId: 44
2024-07-24 19:31:53.580 [http-nio-8088-exec-1] INFO  c.j.weblog.event.subscriber.ReadArticleSubscriber - ==> 文章阅读量 +1 操作成功，articleId: 44
2024-07-24 19:31:53.586 [http-nio-8088-exec-1] INFO  c.j.weblog.event.subscriber.ReadArticleSubscriber - ==> 当日文章 PV 访问量 +1 操作成功，date: 2024-07-24
2024-07-24 19:31:53.587 [http-nio-8088-exec-1] INFO  c.j.w.f.b.o.aspect.ApiOperationLogAspect - ====== 请求结束: [获取文章详情], 耗时: 108ms, 出参: {"success":true,"message":null,"errorCode":null,"data":{"title":"WebLog","content":"<blockquote>\n<p><strong>项目简介</strong>：WebLog博客系统，不仅为用户提供了优质的阅读体验，还为博主提供了便捷的文章管理和博客设置功能。无论是在前台浏览博客、查找感兴趣的文章，还是在后台管理系统中编辑和管理博客内容，用户都能够享受到简洁高效的操作界面和流畅的使用体验。</p>\n<p><strong>核心技术</strong>：SpringBoot、MyBatisPlus、SpringSecurity、Guava、Elasticsearch、MinIO</p>\n<p><strong>业务描述</strong>：</p>\n<ul>\n<li>文章管理：整合MarkDown编辑器实现文章发布和更新，用户可以发布、编辑和删除文章，并且可以对文章进行分类和标签。</li>\n<li>分类与标签：文章可以根据内容进行分类和打标签，便于用户快速查找文章。管理员负责对现有的分类和标签进行编辑和删除。</li>\n<li>知识库：除了普通的文章，网站还提供了知识库模块，用户可以在这里分享知识、技巧、经验等内容，形成一个共享的学习资源池。</li>\n<li>评论功能：用户可以对文章提出自己的看法和观点并进行讨论。评论功能可以促进用户之间的交流和互动，增强网站的社区氛围。</li>\n</ul>\n</blockquote>\n<blockquote>\n<p>WebLog博客系统项目，为用户提供了优质的阅读体验，同时为博主提供了便捷的文章管理和博客设置功能。项目采用SpringBoot、MyBatisPlus等核心技术。前台用户可以通过简洁高效的界面浏览博客和查找感兴趣的文章，后台博主可以进行文章的发布、编辑、删除和分类标签管理。此外，还实现了知识库和评论功能，方便用户分享知识和技巧。项目同样也支持搜索和文件存储功能，并通过Guava优化系统性能。这两个项目让我在前后端开发和系统性能提升方面积累了丰富经验。</p>\n</blockquote>\n<h2 id=\"1模块组成\">1、模块组成</h2>\n<ul>\n<li>\n<p>前台博客系统：首页文章展示、文章分类、文章标签、文章归档、系统知识库</p>\n</li>\n<li>\n<p>后台管理系统：</p>\n<ul>\n<li>系统仪表盘：文章数、分类数、标签数、总浏览量、近半年文章发布热点图、一周PV访问量</li>\n<li>文章管理：文章查询、文章编辑、文章删除、文章发布</li>\n<li>分类管理：分类查询、分类新增、分类删除</li>\n<li>标签管理：标签查询、标签新增、标签删除</li>\n<li>知识库管理：知识库查询、知识库编辑、知识库删除、知识库发布</li>\n<li>评论管理：评论查询、评论删除</li>\n<li>博客设置：基础信息设置</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"2数据表分析\">2、数据表分析</h2>\n<p>共13张数据表。</p>\n<ul>\n<li>t_article：文章表</li>\n<li>t_article_category_rel：文章所属分类关联表</li>\n<li>t_article_content：文章内容表</li>\n<li>t_article_tag_rel：文章对应标签关联表</li>\n<li>t_blog_settings：博客设置表</li>\n<li>t_category：文章分类表</li>\n<li>t_comment：评论表</li>\n<li>t_statistics_article_pv：统计表：文章PV访问量</li>\n<li>t_tag：文章标签表</li>\n<li>t_user：用户表</li>\n<li>t_user_role：用户角色表</li>\n<li>t_wiki：知识库表</li>\n<li>t_wiki_catalog：知识库目录表</li>\n</ul>\n<h2 id=\"3业务分析\">3、业务分析</h2>\n<h2 id=\"4技术要点分析\">4、技术要点分析</h2>\n<h3 id=\"41springsecurity整合jwt\">4.1、SpringSecurity整合JWT</h3>\n<h4 id=\"411springsecurity\">4.1.1、SpringSecurity</h4>\n<blockquote>\n<p>Spring Security 是一个广泛应用于 Java 应用程序的安全框架，旨在保护应用程序免受潜在的安全威胁和攻击。作为 Spring 框架的一部分，Spring Security 提供了强大的功能，帮助开发人员实现身份认证、授权、会话管理以及其他与安全相关的任务。</p>\n</blockquote>\n<p><strong>为什么要使用 Spring Security？</strong></p>\n<ul>\n<li><strong>应用程序保护：</strong> 在当今互联网时代，应用程序安全性至关重要。Spring Security 提供了一系列的安全特性，帮助您保护应用程序免受恶意攻击，确保数据和功能不会被未经授权的用户访问。</li>\n<li><strong>一站式解决方案：</strong> Spring Security 提供了一个集中的框架来处理各种安全性问题。从用户认证、授权到会话管理，Spring Security 提供了一个一站式的解决方案，使开发人员能够更容易地处理安全问题。</li>\n<li><strong>多样的认证和授权方式：</strong> Spring Security 允许您以多种方式进行用户认证，包括基本认证、表单认证、OAuth 等。此外，您还可以定义精细的授权规则，确保只有经过授权的用户才能访问特定资源。</li>\n<li><strong>与 Spring 集成：</strong> Spring Security 可与其他 Spring 项目无缝集成，如 Spring Boot、Spring MVC 等。这使得您可以轻松地将安全性集成到现有的 Spring 应用程序中。</li>\n<li><strong>高度可定制：</strong> Spring Security 允许您根据应用程序的特定需求进行定制。您可以创建自定义的认证提供者、访问决策器、过滤器等，以适应不同的安全性要求。</li>\n<li><strong>丰富的社区和文档：</strong> Spring Security 拥有活跃的社区和丰富的文档。您可以在社区中找到许多教程、示例代码和解决方案，以帮助您解决各种安全性问题。</li>\n<li><strong>符合标准：</strong> Spring Security 符合各种安全性标准和最佳实践，确保您的应用程序满足行业和法规的要求。</li>\n</ul>\n<p><strong>整合SpringSecurity：</strong></p>\n<p>要更好地控制 Spring Security 的行为，你可以创建一个自定义的 <code>SecurityConfig</code> 类，继承自 <code>WebSecurityConfigurerAdapter</code>。通过覆盖方法，您可以配置认证、授权规则、自定义登录页面、注销等。本项目中创建一个WebSecurityConfig配置类来自定义SpringSecurity配置。</p>\n<h4 id=\"412spring-security-整合-jwt-实现身份认证\">4.1.2、Spring Security 整合 JWT ：实现身份认证</h4>\n<blockquote>\n<p>JWT（JSON Web Token）是一种用于在不同应用之间安全传输信息的开放标准（RFC 7519）。它是一种基于 JSON 的轻量级令牌，由三部分组成：头部（Header）、载荷（Payload）和签名（Signature）。JWT 被广泛用于实现身份验证和授权，<strong>特别适用于前后端分离的应用程序</strong>。</p>\n</blockquote>\n<p><strong>为什么要使用 JWT？</strong></p>\n<p>JWT 提供了一种在客户端和服务器之间传输安全信息的简单方法，具有以下优点：</p>\n<ul>\n<li><strong>无状态性（Stateless）</strong>：JWT 本身包含了所有必要的信息，无需在服务器端存储会话信息，每个请求都可以独立验证。</li>\n<li><strong>灵活性</strong>：JWT 可以存储任意格式的数据，使其成为传递用户信息、权限、角色等的理想选择。</li>\n<li><strong>安全性</strong>：JWT 使用签名进行验证，确保信息在传输过程中不被篡改。</li>\n<li><strong>跨平台和跨语言</strong>：由于 JWT 使用 JSON 格式，它在不同的编程语言和平台之间都可以轻松传递。</li>\n</ul>\n<p><strong>JWT实现认证和授权的原理：</strong></p>\n<ul>\n<li>用户调用登录接口，登录成功后获取到JWT的token；</li>\n<li>之后用户每次调用接口都在http的header中添加一个叫Authorization的头，值为JWT的token；</li>\n<li>后台程序通过对Authorization头中信息的解码及数字签名校验来获取其中的用户信息，从而实现认证和授权。</li>\n</ul>\n<p><strong>实现流程：</strong></p>\n<ul>\n<li>\n<p>修改配置文件<code>application.yml</code>，添加JWT相关配置。包括请求头、加密密钥、过期时间和JWT负载中的开头</p>\n</li>\n<li>\n<p>添加JWT token的工具类，用于生成和解析JWT token的工具类。</p>\n</li>\n<li>\n<p>然后整合SpringSecurity，添加SpringSecurity的配置类；</p>\n<p>配置中相关方法及依赖说明如下：</p>\n<ul>\n<li><strong>filterChain(HttpSecurity httpSecurity)</strong>：用于配置SecurityFilterChain实例，SpringSecurity的核心配置类，可以SpringSecurity进行路径授权配置、过滤器配置等；</li>\n<li><strong>RestfulAccessDeniedHandler</strong>：当用户没有访问权限时的处理器，用于返回JSON格式的处理结果；</li>\n<li><strong>RestAuthenticationEntryPoint</strong>：当未登录或token失效时，返回JSON格式的结果；</li>\n<li><strong>UserDetailsService</strong>：SpringSecurity定义的核心接口，用于根据用户名获取用户信息，需要自行实现；</li>\n<li><strong>UserDetails</strong>：SpringSecurity定义用于封装用户信息的类（主要是用户信息和权限），需要自行实现；</li>\n<li><strong>PasswordEncoder</strong>：SpringSecurity定义的用于对密码进行编码及比对的接口，目前使用的是BCryptPasswordEncoder；</li>\n<li>JwtAuthenticationTokenFilter：在用户名和密码校验前添加的过滤器，如果有jwt的token，会自行根据token信息进行登录。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"42scheduled-定时任务--事件发布订阅统计当日-pv-访问量\">4.2、@Scheduled 定时任务 + 事件发布订阅，统计当日 PV 访问量</h3>\n<blockquote>\n<p>Spring Boot 定时任务是一种机制，允许您在应用程序中执行预定的任务或操作，而无需手动触发。这些任务可以是周期性的、定时的，或者基于特定的触发条件执行。Spring Boot 内部提供了<code>@Scheduled</code>注解，使得创建和管理定时任务变得非常简单。</p>\n</blockquote>\n<p><strong>为什么需要定时任务？</strong></p>\n<ol>\n<li><strong>自动化任务执行：</strong> 定时任务允许您在预定的时间间隔内执行任务，而无需手动触发。这对于需要按照规律执行某些操作的场景非常有用，例如定期清理日志、生成报告等。</li>\n<li><strong>定时数据处理：</strong> 在某些应用中，需要定期处理数据，例如更新缓存、同步数据等。定时任务可以确保这些处理在规定的时间内自动完成。</li>\n<li><strong>后台任务处理：</strong> 有些任务可能是一些较为耗时的后台操作，例如数据备份、邮件发送等。通过定时任务，您可以将这些操作分散到不同的时间段，避免影响应用程序的实时性能。</li>\n<li><strong>周期性报告生成：</strong> 如果您的应用需要生成周期性报告，例如每日、每周或每月的报告，定时任务是一个很好的选择。</li>\n</ol>\n<p>实现流程：</p>\n<ul>\n<li>开启 Spring Boot 内置提供的定时任务，仅需添加在启动类上添加 <code>@EnableScheduling</code> 注解即可。</li>\n<li>创建<code>InitPVRecordScheduledTask</code> 初始化次日文章访问量记录的任务类：\n<ul>\n<li>通过 <code>@Scheduled(cron = &quot;0 0 23 * * ?&quot;)</code> 注解来指定定时任务的 <code>cron</code> 执行表达式，<code>0 0 23 * * ?</code> 代表每晚 23 点执行一次定时任务，逻辑也比较简单，拿到当天的日期，并通过 <code>plusDays(1)</code> 方法获取第二天的日期，然后组装 <code>DO</code> 实体类，执行 <code>insert()</code> 方法插入 <code>pv_date</code> 字段为次日的记录。</li>\n</ul>\n</li>\n<li>统计表中有了记录后，还需要在 <code>StatisticsArticlePVMapper</code> 接口中，封装一个 <em>对指定日期的文章 PV 访问量进行 +1</em> 的方法，方便后续业务中直接调用。</li>\n<li>前置工作都完成后，我们对文章阅读事件进行消费，编辑 <code>ReadArticleSubscriber</code> 事件订阅类，在逻辑代码的最后，添加对<em>当日文章 PV 访问量 +1</em>的逻辑代码。</li>\n<li>\n<h3 id=\"43前后端分离解决跨域问题\">4.3、前后端分离解决跨域问题</h3>\n</li>\n</ul>\n<blockquote>\n<p>这里采用的是在前端采用的跨域解决方案</p>\n</blockquote>\n<p>在<code>vite.config.js</code>中添加：</p>\n<pre><code class=\"language-js\">export default defineConfig({\n  server: {\n    proxy: {\n      '/api': {\n        target: 'http://localhost:8080',\n        changeOrigin: true,\n        rewrite: (path) =&gt; path.replace(/^\\/api/, ''),\n      },\n    }\n  },\n})\n</code></pre>\n<p>在target中声明后端的域名，然后开启changeOrigin，假如前端发起请求的baseUrl应该是<code>http://localhost:5173/api</code>，那么当前端请求后端<code>http://localhost:8080</code>时，那么你发起的请求应该是下面的样子：</p>\n<pre><code>http://localhost:5173/api/userlist\n</code></pre>\n<p>这样前端就是从相同的host 并且相同的port发起的请求，代理通过前缀&quot;/api&quot;匹配的你要转发的请求，转发到<code>http://localhost:8080</code>真正的后端服务，并且把多余的前缀给你替换掉。</p>\n","createTime":"2024-04-27 15:42:12","categoryId":33,"categoryName":"SpringBoot","readNum":49,"tags":[{"id":47,"name":"java","articlesTotal":null},{"id":58,"name":"spring","articlesTotal":null},{"id":59,"name":"springboot","articlesTotal":null}],"preArticle":{"articleId":45,"articleTitle":"Redis"},"nextArticle":{"articleId":43,"articleTitle":"E-Commerce"},"totalWords":2943,"readTime":"约 9 分钟","updateTime":"2024-06-03 10:08:09"}} =================================== 
2024-07-24 19:31:53.589 [http-nio-8088-exec-1] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 1
2024-07-24 19:31:54.308 [http-nio-8088-exec-6] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ## HeaderUserId2ContextFilter，用户 ID：1
2024-07-24 19:31:54.309 [http-nio-8088-exec-6] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 1
2024-07-24 19:31:54.309 [http-nio-8088-exec-6] INFO  c.j.w.f.b.o.aspect.ApiOperationLogAspect - ====== 请求开始: [前台获取博客详情], 入参: , 请求类: BlogSettingsController, 请求方法: findDetail =================================== 
2024-07-24 19:31:54.312 [http-nio-8088-exec-6] INFO  c.j.w.f.b.o.aspect.ApiOperationLogAspect - ====== 请求结束: [前台获取博客详情], 耗时: 3ms, 出参: {"success":true,"message":null,"errorCode":null,"data":{"logo":"http://110.41.141.141:9000/weblog/weblog/9853f8be13cb4f7fae00e3f5233dd688.png","name":"WebLog","author":"Jacob","introduction":"求知若饥，虚心若愚","avatar":"https://webook-aliyun.oss-cn-hangzhou.aliyuncs.com/f5df2d94010149deb1da9c2a2096a9dc.jpg","githubHomepage":"https://github.com/jdw-art","csdnHomepage":"https://www.csdn.net/?spm=1010.2135.3001.4476","giteeHomepage":"","zhihuHomepage":"https://www.zhihu.com/people/54-10-50-93"}} =================================== 
2024-07-24 19:31:54.316 [http-nio-8088-exec-6] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 1
2024-07-24 19:31:54.357 [http-nio-8088-exec-9] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ## HeaderUserId2ContextFilter，用户 ID：1
2024-07-24 19:31:54.357 [http-nio-8088-exec-9] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 1
2024-07-24 19:31:54.359 [http-nio-8088-exec-9] INFO  c.j.w.f.b.o.aspect.ApiOperationLogAspect - ====== 请求开始: [获取首页文章分页数据], 入参: {"current":1,"size":10}, 请求类: ArticleController, 请求方法: findArticlePageList =================================== 
2024-07-24 19:31:54.363 [http-nio-8088-exec-10] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ## HeaderUserId2ContextFilter，用户 ID：1
2024-07-24 19:31:54.363 [http-nio-8088-exec-10] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 1
2024-07-24 19:31:54.364 [http-nio-8088-exec-10] INFO  c.j.w.f.b.o.aspect.ApiOperationLogAspect - ====== 请求开始: [前台获取统计信息], 入参: , 请求类: StatisticsController, 请求方法: findInfo =================================== 
2024-07-24 19:31:54.369 [http-nio-8088-exec-7] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ## HeaderUserId2ContextFilter，用户 ID：1
2024-07-24 19:31:54.369 [http-nio-8088-exec-7] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 1
2024-07-24 19:31:54.369 [http-nio-8088-exec-2] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ## HeaderUserId2ContextFilter，用户 ID：1
2024-07-24 19:31:54.370 [http-nio-8088-exec-2] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 1
2024-07-24 19:31:54.370 [http-nio-8088-exec-2] INFO  c.j.w.f.b.o.aspect.ApiOperationLogAspect - ====== 请求开始: [前台获取标签列表], 入参: , 请求类: TagController, 请求方法: findTagList =================================== 
2024-07-24 19:31:54.371 [http-nio-8088-exec-7] INFO  c.j.w.f.b.o.aspect.ApiOperationLogAspect - ====== 请求开始: [前台获取分类列表], 入参: {"size":10}, 请求类: CategoryController, 请求方法: findCategoryList =================================== 
2024-07-24 19:31:54.372 [http-nio-8088-exec-2] INFO  c.j.w.f.b.o.aspect.ApiOperationLogAspect - ====== 请求结束: [前台获取标签列表], 耗时: 2ms, 出参: {"success":true,"message":null,"errorCode":null,"data":[{"id":47,"name":"java","articlesTotal":13},{"id":48,"name":"脉冲神经网络","articlesTotal":6},{"id":49,"name":"snn","articlesTotal":6},{"id":54,"name":"联想记忆模型","articlesTotal":1},{"id":55,"name":"集合","articlesTotal":1},{"id":56,"name":"并发","articlesTotal":1},{"id":57,"name":"RabbitMQ","articlesTotal":2},{"id":58,"name":"spring","articlesTotal":4},{"id":59,"name":"springboot","articlesTotal":4},{"id":60,"name":"mongodb","articlesTotal":2},{"id":61,"name":"nosql","articlesTotal":1},{"id":62,"name":"redis","articlesTotal":2},{"id":63,"name":"mysql","articlesTotal":1},{"id":64,"name":"jvm","articlesTotal":1},{"id":65,"name":"elasticSearch","articlesTotal":1},{"id":66,"name":"SpringMVC","articlesTotal":1},{"id":67,"name":"计算机网络","articlesTotal":1},{"id":68,"name":"操作系统","articlesTotal":1},{"id":69,"name":"设计模式","articlesTotal":1},{"id":70,"name":"SpringCloud","articlesTotal":2},{"id":71,"name":"微服务","articlesTotal":3},{"id":72,"name":"jmm","articlesTotal":1},{"id":73,"name":"高可用","articlesTotal":2},{"id":74,"name":"系统设计","articlesTotal":2}]} =================================== 
2024-07-24 19:31:54.374 [http-nio-8088-exec-2] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 1
2024-07-24 19:31:54.374 [http-nio-8088-exec-10] INFO  c.j.w.f.b.o.aspect.ApiOperationLogAspect - ====== 请求结束: [前台获取统计信息], 耗时: 10ms, 出参: {"success":true,"message":null,"errorCode":null,"data":{"articleTotalCount":28,"categoryTotalCount":15,"tagTotalCount":24,"pvTotalCount":770}} =================================== 
2024-07-24 19:31:54.375 [http-nio-8088-exec-10] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 1
2024-07-24 19:31:54.379 [http-nio-8088-exec-7] INFO  c.j.w.f.b.o.aspect.ApiOperationLogAspect - ====== 请求结束: [前台获取分类列表], 耗时: 9ms, 出参: {"success":true,"message":null,"errorCode":null,"data":[{"id":29,"name":"Java","articlesTotal":6},{"id":31,"name":"SNN","articlesTotal":6},{"id":33,"name":"SpringBoot","articlesTotal":3},{"id":30,"name":"工具","articlesTotal":2},{"id":34,"name":"Redis","articlesTotal":2},{"id":32,"name":"Spring","articlesTotal":1},{"id":35,"name":"RabbitMQ","articlesTotal":1},{"id":36,"name":"MySQL","articlesTotal":1},{"id":37,"name":"MongoDB","articlesTotal":1},{"id":38,"name":"ElasticSearch","articlesTotal":1}]} =================================== 
2024-07-24 19:31:54.380 [http-nio-8088-exec-7] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 1
2024-07-24 19:31:54.417 [http-nio-8088-exec-9] INFO  c.j.w.f.b.o.aspect.ApiOperationLogAspect - ====== 请求结束: [获取首页文章分页数据], 耗时: 58ms, 出参: {"success":true,"message":null,"errorCode":null,"data":[{"id":43,"cover":"http://110.41.141.141:9000/weblog/weblog/05192a6167704ae8851dbcab6d4ebb7a.jpg","title":"E-Commerce","createDate":"2024-04-27","summary":"E-Commerce项目摘要","category":{"id":33,"name":"SpringBoot","articlesTotal":null},"tags":[{"id":47,"name":"java","articlesTotal":null},{"id":58,"name":"spring","articlesTotal":null},{"id":59,"name":"springboot","articlesTotal":null},{"id":57,"name":"RabbitMQ","articlesTotal":null},{"id":60,"name":"mongodb","articlesTotal":null}],"isTop":true},{"id":44,"cover":"http://110.41.141.141:9000/weblog/weblog/21bfecab22f14cef9536fc55c5ac3d11.png","title":"WebLog","createDate":"2024-04-27","summary":"WebLog项目摘要","category":{"id":33,"name":"SpringBoot","articlesTotal":null},"tags":[{"id":47,"name":"java","articlesTotal":null},{"id":58,"name":"spring","articlesTotal":null},{"id":59,"name":"springboot","articlesTotal":null}],"isTop":true},{"id":59,"cover":"http://110.41.141.141:9000/weblog/245940328a974c3aa35a4fab259c2f93.jpg","title":"负载均衡","createDate":"2024-07-19","summary":"负载均衡","category":{"id":41,"name":"高可用","articlesTotal":null},"tags":[{"id":73,"name":"高可用","articlesTotal":null},{"id":74,"name":"系统设计","articlesTotal":null},{"id":71,"name":"微服务","articlesTotal":null}],"isTop":false},{"id":58,"cover":"http://110.41.141.141:9000/weblog/90cd980f59014947af531833d3d32666.jpg","title":"JMM","createDate":"2024-07-19","summary":"Java内存模型","category":{"id":29,"name":"Java","articlesTotal":null},"tags":[{"id":72,"name":"jmm","articlesTotal":null}],"isTop":false},{"id":57,"cover":"http://110.41.141.141:9000/weblog/14b767a52a0548a29129a64ec9c31b92.png","title":"微服务","createDate":"2024-07-19","summary":"微服务","category":{"id":43,"name":"系统设计","articlesTotal":null},"tags":[{"id":71,"name":"微服务","articlesTotal":null},{"id":70,"name":"SpringCloud","articlesTotal":null},{"id":74,"name":"系统设计","articlesTotal":null},{"id":73,"name":"高可用","articlesTotal":null}],"isTop":false},{"id":56,"cover":"http://110.41.141.141:9000/weblog/065adf0970a84db291e85a56d9927905.jpg","title":"SpringCloud","createDate":"2024-07-19","summary":"Spring Cloud 八股","category":{"id":40,"name":"SpringCloud","articlesTotal":null},"tags":[{"id":70,"name":"SpringCloud","articlesTotal":null},{"id":71,"name":"微服务","articlesTotal":null}],"isTop":false},{"id":55,"cover":"http://110.41.141.141:9000/weblog/031b75962ad54f2f8e6cde5799dbd0f5.jpg","title":"DesignPattern","createDate":"2024-07-19","summary":"设计模式","category":{"id":29,"name":"Java","articlesTotal":null},"tags":[{"id":69,"name":"设计模式","articlesTotal":null}],"isTop":false},{"id":54,"cover":"http://110.41.141.141:9000/weblog/weblog/630032da446240d190e66871b6433f42.jpg","title":"操作系统","createDate":"2024-05-22","summary":"操作系统八股","category":{"id":30,"name":"工具","articlesTotal":null},"tags":[{"id":68,"name":"操作系统","articlesTotal":null}],"isTop":false},{"id":53,"cover":"http://110.41.141.141:9000/weblog/weblog/b483ce35c9e44b9db5df361e2cd1e2af.jpg","title":"计算机网络","createDate":"2024-05-22","summary":"计算机网络八股","category":{"id":30,"name":"工具","articlesTotal":null},"tags":[{"id":67,"name":"计算机网络","articlesTotal":null}],"isTop":false},{"id":51,"cover":"http://110.41.141.141:9000/weblog/weblog/20802574f640434eb207bf01a74b4c0c.jpg","title":"RedisIncrement","createDate":"2024-05-17","summary":"redis图文补充","category":{"id":34,"name":"Redis","articlesTotal":null},"tags":[{"id":62,"name":"redis","articlesTotal":null},{"id":47,"name":"java","articlesTotal":null}],"isTop":false}],"total":28,"size":10,"current":1,"pages":3} =================================== 
2024-07-24 19:31:54.419 [http-nio-8088-exec-9] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 1
2024-07-24 19:31:55.544 [http-nio-8088-exec-3] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ## HeaderUserId2ContextFilter，用户 ID：1
2024-07-24 19:31:55.544 [http-nio-8088-exec-3] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 1
2024-07-24 19:31:55.545 [http-nio-8088-exec-3] INFO  c.j.w.f.b.o.aspect.ApiOperationLogAspect - ====== 请求开始: [前台获取博客详情], 入参: , 请求类: BlogSettingsController, 请求方法: findDetail =================================== 
2024-07-24 19:31:55.547 [http-nio-8088-exec-3] INFO  c.j.w.f.b.o.aspect.ApiOperationLogAspect - ====== 请求结束: [前台获取博客详情], 耗时: 2ms, 出参: {"success":true,"message":null,"errorCode":null,"data":{"logo":"http://110.41.141.141:9000/weblog/weblog/9853f8be13cb4f7fae00e3f5233dd688.png","name":"WebLog","author":"Jacob","introduction":"求知若饥，虚心若愚","avatar":"https://webook-aliyun.oss-cn-hangzhou.aliyuncs.com/f5df2d94010149deb1da9c2a2096a9dc.jpg","githubHomepage":"https://github.com/jdw-art","csdnHomepage":"https://www.csdn.net/?spm=1010.2135.3001.4476","giteeHomepage":"","zhihuHomepage":"https://www.zhihu.com/people/54-10-50-93"}} =================================== 
2024-07-24 19:31:55.547 [http-nio-8088-exec-3] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 1
2024-07-24 19:31:55.582 [http-nio-8088-exec-8] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ## HeaderUserId2ContextFilter，用户 ID：1
2024-07-24 19:31:55.582 [http-nio-8088-exec-8] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 1
2024-07-24 19:31:55.584 [http-nio-8088-exec-8] INFO  c.j.w.f.b.o.aspect.ApiOperationLogAspect - ====== 请求开始: [获取文章详情], 入参: {"articleId":44}, 请求类: ArticleController, 请求方法: findArticleDetail =================================== 
2024-07-24 19:31:55.587 [http-nio-8088-exec-4] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ## HeaderUserId2ContextFilter，用户 ID：1
2024-07-24 19:31:55.588 [http-nio-8088-exec-4] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 1
2024-07-24 19:31:55.588 [http-nio-8088-exec-5] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ## HeaderUserId2ContextFilter，用户 ID：1
2024-07-24 19:31:55.588 [http-nio-8088-exec-5] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 1
2024-07-24 19:31:55.588 [http-nio-8088-exec-4] INFO  c.j.w.f.b.o.aspect.ApiOperationLogAspect - ====== 请求开始: [前台获取统计信息], 入参: , 请求类: StatisticsController, 请求方法: findInfo =================================== 
2024-07-24 19:31:55.589 [http-nio-8088-exec-1] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ## HeaderUserId2ContextFilter，用户 ID：1
2024-07-24 19:31:55.590 [http-nio-8088-exec-1] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 1
2024-07-24 19:31:55.590 [http-nio-8088-exec-5] INFO  c.j.w.f.b.o.aspect.ApiOperationLogAspect - ====== 请求开始: [前台获取分类列表], 入参: {"size":10}, 请求类: CategoryController, 请求方法: findCategoryList =================================== 
2024-07-24 19:31:55.590 [http-nio-8088-exec-1] INFO  c.j.w.f.b.o.aspect.ApiOperationLogAspect - ====== 请求开始: [前台获取标签列表], 入参: , 请求类: TagController, 请求方法: findTagList =================================== 
2024-07-24 19:31:55.593 [http-nio-8088-exec-1] INFO  c.j.w.f.b.o.aspect.ApiOperationLogAspect - ====== 请求结束: [前台获取标签列表], 耗时: 3ms, 出参: {"success":true,"message":null,"errorCode":null,"data":[{"id":47,"name":"java","articlesTotal":13},{"id":48,"name":"脉冲神经网络","articlesTotal":6},{"id":49,"name":"snn","articlesTotal":6},{"id":54,"name":"联想记忆模型","articlesTotal":1},{"id":55,"name":"集合","articlesTotal":1},{"id":56,"name":"并发","articlesTotal":1},{"id":57,"name":"RabbitMQ","articlesTotal":2},{"id":58,"name":"spring","articlesTotal":4},{"id":59,"name":"springboot","articlesTotal":4},{"id":60,"name":"mongodb","articlesTotal":2},{"id":61,"name":"nosql","articlesTotal":1},{"id":62,"name":"redis","articlesTotal":2},{"id":63,"name":"mysql","articlesTotal":1},{"id":64,"name":"jvm","articlesTotal":1},{"id":65,"name":"elasticSearch","articlesTotal":1},{"id":66,"name":"SpringMVC","articlesTotal":1},{"id":67,"name":"计算机网络","articlesTotal":1},{"id":68,"name":"操作系统","articlesTotal":1},{"id":69,"name":"设计模式","articlesTotal":1},{"id":70,"name":"SpringCloud","articlesTotal":2},{"id":71,"name":"微服务","articlesTotal":3},{"id":72,"name":"jmm","articlesTotal":1},{"id":73,"name":"高可用","articlesTotal":2},{"id":74,"name":"系统设计","articlesTotal":2}]} =================================== 
2024-07-24 19:31:55.594 [http-nio-8088-exec-1] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 1
2024-07-24 19:31:55.594 [http-nio-8088-exec-5] INFO  c.j.w.f.b.o.aspect.ApiOperationLogAspect - ====== 请求结束: [前台获取分类列表], 耗时: 4ms, 出参: {"success":true,"message":null,"errorCode":null,"data":[{"id":29,"name":"Java","articlesTotal":6},{"id":31,"name":"SNN","articlesTotal":6},{"id":33,"name":"SpringBoot","articlesTotal":3},{"id":30,"name":"工具","articlesTotal":2},{"id":34,"name":"Redis","articlesTotal":2},{"id":32,"name":"Spring","articlesTotal":1},{"id":35,"name":"RabbitMQ","articlesTotal":1},{"id":36,"name":"MySQL","articlesTotal":1},{"id":37,"name":"MongoDB","articlesTotal":1},{"id":38,"name":"ElasticSearch","articlesTotal":1}]} =================================== 
2024-07-24 19:31:55.596 [http-nio-8088-exec-5] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 1
2024-07-24 19:31:55.604 [http-nio-8088-exec-4] INFO  c.j.w.f.b.o.aspect.ApiOperationLogAspect - ====== 请求结束: [前台获取统计信息], 耗时: 16ms, 出参: {"success":true,"message":null,"errorCode":null,"data":{"articleTotalCount":28,"categoryTotalCount":15,"tagTotalCount":24,"pvTotalCount":770}} =================================== 
2024-07-24 19:31:55.606 [http-nio-8088-exec-4] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 1
2024-07-24 19:31:55.622 [http-nio-8088-exec-8] INFO  c.j.weblog.event.subscriber.ReadArticleSubscriber - ==> threadName: http-nio-8088-exec-8
2024-07-24 19:31:55.622 [http-nio-8088-exec-8] INFO  c.j.weblog.event.subscriber.ReadArticleSubscriber - ==> 文章阅读事件消费成功，articleId: 44
2024-07-24 19:31:55.632 [http-nio-8088-exec-8] INFO  c.j.weblog.event.subscriber.ReadArticleSubscriber - ==> 文章阅读量 +1 操作成功，articleId: 44
2024-07-24 19:31:55.637 [http-nio-8088-exec-8] INFO  c.j.weblog.event.subscriber.ReadArticleSubscriber - ==> 当日文章 PV 访问量 +1 操作成功，date: 2024-07-24
2024-07-24 19:31:55.637 [http-nio-8088-exec-8] INFO  c.j.w.f.b.o.aspect.ApiOperationLogAspect - ====== 请求结束: [获取文章详情], 耗时: 53ms, 出参: {"success":true,"message":null,"errorCode":null,"data":{"title":"WebLog","content":"<blockquote>\n<p><strong>项目简介</strong>：WebLog博客系统，不仅为用户提供了优质的阅读体验，还为博主提供了便捷的文章管理和博客设置功能。无论是在前台浏览博客、查找感兴趣的文章，还是在后台管理系统中编辑和管理博客内容，用户都能够享受到简洁高效的操作界面和流畅的使用体验。</p>\n<p><strong>核心技术</strong>：SpringBoot、MyBatisPlus、SpringSecurity、Guava、Elasticsearch、MinIO</p>\n<p><strong>业务描述</strong>：</p>\n<ul>\n<li>文章管理：整合MarkDown编辑器实现文章发布和更新，用户可以发布、编辑和删除文章，并且可以对文章进行分类和标签。</li>\n<li>分类与标签：文章可以根据内容进行分类和打标签，便于用户快速查找文章。管理员负责对现有的分类和标签进行编辑和删除。</li>\n<li>知识库：除了普通的文章，网站还提供了知识库模块，用户可以在这里分享知识、技巧、经验等内容，形成一个共享的学习资源池。</li>\n<li>评论功能：用户可以对文章提出自己的看法和观点并进行讨论。评论功能可以促进用户之间的交流和互动，增强网站的社区氛围。</li>\n</ul>\n</blockquote>\n<blockquote>\n<p>WebLog博客系统项目，为用户提供了优质的阅读体验，同时为博主提供了便捷的文章管理和博客设置功能。项目采用SpringBoot、MyBatisPlus等核心技术。前台用户可以通过简洁高效的界面浏览博客和查找感兴趣的文章，后台博主可以进行文章的发布、编辑、删除和分类标签管理。此外，还实现了知识库和评论功能，方便用户分享知识和技巧。项目同样也支持搜索和文件存储功能，并通过Guava优化系统性能。这两个项目让我在前后端开发和系统性能提升方面积累了丰富经验。</p>\n</blockquote>\n<h2 id=\"1模块组成\">1、模块组成</h2>\n<ul>\n<li>\n<p>前台博客系统：首页文章展示、文章分类、文章标签、文章归档、系统知识库</p>\n</li>\n<li>\n<p>后台管理系统：</p>\n<ul>\n<li>系统仪表盘：文章数、分类数、标签数、总浏览量、近半年文章发布热点图、一周PV访问量</li>\n<li>文章管理：文章查询、文章编辑、文章删除、文章发布</li>\n<li>分类管理：分类查询、分类新增、分类删除</li>\n<li>标签管理：标签查询、标签新增、标签删除</li>\n<li>知识库管理：知识库查询、知识库编辑、知识库删除、知识库发布</li>\n<li>评论管理：评论查询、评论删除</li>\n<li>博客设置：基础信息设置</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"2数据表分析\">2、数据表分析</h2>\n<p>共13张数据表。</p>\n<ul>\n<li>t_article：文章表</li>\n<li>t_article_category_rel：文章所属分类关联表</li>\n<li>t_article_content：文章内容表</li>\n<li>t_article_tag_rel：文章对应标签关联表</li>\n<li>t_blog_settings：博客设置表</li>\n<li>t_category：文章分类表</li>\n<li>t_comment：评论表</li>\n<li>t_statistics_article_pv：统计表：文章PV访问量</li>\n<li>t_tag：文章标签表</li>\n<li>t_user：用户表</li>\n<li>t_user_role：用户角色表</li>\n<li>t_wiki：知识库表</li>\n<li>t_wiki_catalog：知识库目录表</li>\n</ul>\n<h2 id=\"3业务分析\">3、业务分析</h2>\n<h2 id=\"4技术要点分析\">4、技术要点分析</h2>\n<h3 id=\"41springsecurity整合jwt\">4.1、SpringSecurity整合JWT</h3>\n<h4 id=\"411springsecurity\">4.1.1、SpringSecurity</h4>\n<blockquote>\n<p>Spring Security 是一个广泛应用于 Java 应用程序的安全框架，旨在保护应用程序免受潜在的安全威胁和攻击。作为 Spring 框架的一部分，Spring Security 提供了强大的功能，帮助开发人员实现身份认证、授权、会话管理以及其他与安全相关的任务。</p>\n</blockquote>\n<p><strong>为什么要使用 Spring Security？</strong></p>\n<ul>\n<li><strong>应用程序保护：</strong> 在当今互联网时代，应用程序安全性至关重要。Spring Security 提供了一系列的安全特性，帮助您保护应用程序免受恶意攻击，确保数据和功能不会被未经授权的用户访问。</li>\n<li><strong>一站式解决方案：</strong> Spring Security 提供了一个集中的框架来处理各种安全性问题。从用户认证、授权到会话管理，Spring Security 提供了一个一站式的解决方案，使开发人员能够更容易地处理安全问题。</li>\n<li><strong>多样的认证和授权方式：</strong> Spring Security 允许您以多种方式进行用户认证，包括基本认证、表单认证、OAuth 等。此外，您还可以定义精细的授权规则，确保只有经过授权的用户才能访问特定资源。</li>\n<li><strong>与 Spring 集成：</strong> Spring Security 可与其他 Spring 项目无缝集成，如 Spring Boot、Spring MVC 等。这使得您可以轻松地将安全性集成到现有的 Spring 应用程序中。</li>\n<li><strong>高度可定制：</strong> Spring Security 允许您根据应用程序的特定需求进行定制。您可以创建自定义的认证提供者、访问决策器、过滤器等，以适应不同的安全性要求。</li>\n<li><strong>丰富的社区和文档：</strong> Spring Security 拥有活跃的社区和丰富的文档。您可以在社区中找到许多教程、示例代码和解决方案，以帮助您解决各种安全性问题。</li>\n<li><strong>符合标准：</strong> Spring Security 符合各种安全性标准和最佳实践，确保您的应用程序满足行业和法规的要求。</li>\n</ul>\n<p><strong>整合SpringSecurity：</strong></p>\n<p>要更好地控制 Spring Security 的行为，你可以创建一个自定义的 <code>SecurityConfig</code> 类，继承自 <code>WebSecurityConfigurerAdapter</code>。通过覆盖方法，您可以配置认证、授权规则、自定义登录页面、注销等。本项目中创建一个WebSecurityConfig配置类来自定义SpringSecurity配置。</p>\n<h4 id=\"412spring-security-整合-jwt-实现身份认证\">4.1.2、Spring Security 整合 JWT ：实现身份认证</h4>\n<blockquote>\n<p>JWT（JSON Web Token）是一种用于在不同应用之间安全传输信息的开放标准（RFC 7519）。它是一种基于 JSON 的轻量级令牌，由三部分组成：头部（Header）、载荷（Payload）和签名（Signature）。JWT 被广泛用于实现身份验证和授权，<strong>特别适用于前后端分离的应用程序</strong>。</p>\n</blockquote>\n<p><strong>为什么要使用 JWT？</strong></p>\n<p>JWT 提供了一种在客户端和服务器之间传输安全信息的简单方法，具有以下优点：</p>\n<ul>\n<li><strong>无状态性（Stateless）</strong>：JWT 本身包含了所有必要的信息，无需在服务器端存储会话信息，每个请求都可以独立验证。</li>\n<li><strong>灵活性</strong>：JWT 可以存储任意格式的数据，使其成为传递用户信息、权限、角色等的理想选择。</li>\n<li><strong>安全性</strong>：JWT 使用签名进行验证，确保信息在传输过程中不被篡改。</li>\n<li><strong>跨平台和跨语言</strong>：由于 JWT 使用 JSON 格式，它在不同的编程语言和平台之间都可以轻松传递。</li>\n</ul>\n<p><strong>JWT实现认证和授权的原理：</strong></p>\n<ul>\n<li>用户调用登录接口，登录成功后获取到JWT的token；</li>\n<li>之后用户每次调用接口都在http的header中添加一个叫Authorization的头，值为JWT的token；</li>\n<li>后台程序通过对Authorization头中信息的解码及数字签名校验来获取其中的用户信息，从而实现认证和授权。</li>\n</ul>\n<p><strong>实现流程：</strong></p>\n<ul>\n<li>\n<p>修改配置文件<code>application.yml</code>，添加JWT相关配置。包括请求头、加密密钥、过期时间和JWT负载中的开头</p>\n</li>\n<li>\n<p>添加JWT token的工具类，用于生成和解析JWT token的工具类。</p>\n</li>\n<li>\n<p>然后整合SpringSecurity，添加SpringSecurity的配置类；</p>\n<p>配置中相关方法及依赖说明如下：</p>\n<ul>\n<li><strong>filterChain(HttpSecurity httpSecurity)</strong>：用于配置SecurityFilterChain实例，SpringSecurity的核心配置类，可以SpringSecurity进行路径授权配置、过滤器配置等；</li>\n<li><strong>RestfulAccessDeniedHandler</strong>：当用户没有访问权限时的处理器，用于返回JSON格式的处理结果；</li>\n<li><strong>RestAuthenticationEntryPoint</strong>：当未登录或token失效时，返回JSON格式的结果；</li>\n<li><strong>UserDetailsService</strong>：SpringSecurity定义的核心接口，用于根据用户名获取用户信息，需要自行实现；</li>\n<li><strong>UserDetails</strong>：SpringSecurity定义用于封装用户信息的类（主要是用户信息和权限），需要自行实现；</li>\n<li><strong>PasswordEncoder</strong>：SpringSecurity定义的用于对密码进行编码及比对的接口，目前使用的是BCryptPasswordEncoder；</li>\n<li>JwtAuthenticationTokenFilter：在用户名和密码校验前添加的过滤器，如果有jwt的token，会自行根据token信息进行登录。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"42scheduled-定时任务--事件发布订阅统计当日-pv-访问量\">4.2、@Scheduled 定时任务 + 事件发布订阅，统计当日 PV 访问量</h3>\n<blockquote>\n<p>Spring Boot 定时任务是一种机制，允许您在应用程序中执行预定的任务或操作，而无需手动触发。这些任务可以是周期性的、定时的，或者基于特定的触发条件执行。Spring Boot 内部提供了<code>@Scheduled</code>注解，使得创建和管理定时任务变得非常简单。</p>\n</blockquote>\n<p><strong>为什么需要定时任务？</strong></p>\n<ol>\n<li><strong>自动化任务执行：</strong> 定时任务允许您在预定的时间间隔内执行任务，而无需手动触发。这对于需要按照规律执行某些操作的场景非常有用，例如定期清理日志、生成报告等。</li>\n<li><strong>定时数据处理：</strong> 在某些应用中，需要定期处理数据，例如更新缓存、同步数据等。定时任务可以确保这些处理在规定的时间内自动完成。</li>\n<li><strong>后台任务处理：</strong> 有些任务可能是一些较为耗时的后台操作，例如数据备份、邮件发送等。通过定时任务，您可以将这些操作分散到不同的时间段，避免影响应用程序的实时性能。</li>\n<li><strong>周期性报告生成：</strong> 如果您的应用需要生成周期性报告，例如每日、每周或每月的报告，定时任务是一个很好的选择。</li>\n</ol>\n<p>实现流程：</p>\n<ul>\n<li>开启 Spring Boot 内置提供的定时任务，仅需添加在启动类上添加 <code>@EnableScheduling</code> 注解即可。</li>\n<li>创建<code>InitPVRecordScheduledTask</code> 初始化次日文章访问量记录的任务类：\n<ul>\n<li>通过 <code>@Scheduled(cron = &quot;0 0 23 * * ?&quot;)</code> 注解来指定定时任务的 <code>cron</code> 执行表达式，<code>0 0 23 * * ?</code> 代表每晚 23 点执行一次定时任务，逻辑也比较简单，拿到当天的日期，并通过 <code>plusDays(1)</code> 方法获取第二天的日期，然后组装 <code>DO</code> 实体类，执行 <code>insert()</code> 方法插入 <code>pv_date</code> 字段为次日的记录。</li>\n</ul>\n</li>\n<li>统计表中有了记录后，还需要在 <code>StatisticsArticlePVMapper</code> 接口中，封装一个 <em>对指定日期的文章 PV 访问量进行 +1</em> 的方法，方便后续业务中直接调用。</li>\n<li>前置工作都完成后，我们对文章阅读事件进行消费，编辑 <code>ReadArticleSubscriber</code> 事件订阅类，在逻辑代码的最后，添加对<em>当日文章 PV 访问量 +1</em>的逻辑代码。</li>\n<li>\n<h3 id=\"43前后端分离解决跨域问题\">4.3、前后端分离解决跨域问题</h3>\n</li>\n</ul>\n<blockquote>\n<p>这里采用的是在前端采用的跨域解决方案</p>\n</blockquote>\n<p>在<code>vite.config.js</code>中添加：</p>\n<pre><code class=\"language-js\">export default defineConfig({\n  server: {\n    proxy: {\n      '/api': {\n        target: 'http://localhost:8080',\n        changeOrigin: true,\n        rewrite: (path) =&gt; path.replace(/^\\/api/, ''),\n      },\n    }\n  },\n})\n</code></pre>\n<p>在target中声明后端的域名，然后开启changeOrigin，假如前端发起请求的baseUrl应该是<code>http://localhost:5173/api</code>，那么当前端请求后端<code>http://localhost:8080</code>时，那么你发起的请求应该是下面的样子：</p>\n<pre><code>http://localhost:5173/api/userlist\n</code></pre>\n<p>这样前端就是从相同的host 并且相同的port发起的请求，代理通过前缀&quot;/api&quot;匹配的你要转发的请求，转发到<code>http://localhost:8080</code>真正的后端服务，并且把多余的前缀给你替换掉。</p>\n","createTime":"2024-04-27 15:42:12","categoryId":33,"categoryName":"SpringBoot","readNum":50,"tags":[{"id":47,"name":"java","articlesTotal":null},{"id":58,"name":"spring","articlesTotal":null},{"id":59,"name":"springboot","articlesTotal":null}],"preArticle":{"articleId":45,"articleTitle":"Redis"},"nextArticle":{"articleId":43,"articleTitle":"E-Commerce"},"totalWords":2943,"readTime":"约 9 分钟","updateTime":"2024-06-03 10:08:09"}} =================================== 
2024-07-24 19:31:55.641 [http-nio-8088-exec-8] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 1
2024-07-24 19:31:56.658 [http-nio-8088-exec-6] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ## HeaderUserId2ContextFilter，用户 ID：1
2024-07-24 19:31:56.658 [http-nio-8088-exec-6] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 1
2024-07-24 19:31:56.658 [http-nio-8088-exec-6] INFO  c.j.w.f.b.o.aspect.ApiOperationLogAspect - ====== 请求开始: [前台获取博客详情], 入参: , 请求类: BlogSettingsController, 请求方法: findDetail =================================== 
2024-07-24 19:31:56.661 [http-nio-8088-exec-6] INFO  c.j.w.f.b.o.aspect.ApiOperationLogAspect - ====== 请求结束: [前台获取博客详情], 耗时: 3ms, 出参: {"success":true,"message":null,"errorCode":null,"data":{"logo":"http://110.41.141.141:9000/weblog/weblog/9853f8be13cb4f7fae00e3f5233dd688.png","name":"WebLog","author":"Jacob","introduction":"求知若饥，虚心若愚","avatar":"https://webook-aliyun.oss-cn-hangzhou.aliyuncs.com/f5df2d94010149deb1da9c2a2096a9dc.jpg","githubHomepage":"https://github.com/jdw-art","csdnHomepage":"https://www.csdn.net/?spm=1010.2135.3001.4476","giteeHomepage":"","zhihuHomepage":"https://www.zhihu.com/people/54-10-50-93"}} =================================== 
2024-07-24 19:31:56.663 [http-nio-8088-exec-6] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 1
2024-07-24 19:31:56.694 [http-nio-8088-exec-2] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ## HeaderUserId2ContextFilter，用户 ID：1
2024-07-24 19:31:56.695 [http-nio-8088-exec-2] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 1
2024-07-24 19:31:56.699 [http-nio-8088-exec-2] INFO  c.j.w.f.b.o.aspect.ApiOperationLogAspect - ====== 请求开始: [获取首页文章分页数据], 入参: {"current":1,"size":10}, 请求类: ArticleController, 请求方法: findArticlePageList =================================== 
2024-07-24 19:31:56.699 [http-nio-8088-exec-10] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ## HeaderUserId2ContextFilter，用户 ID：1
2024-07-24 19:31:56.699 [http-nio-8088-exec-9] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ## HeaderUserId2ContextFilter，用户 ID：1
2024-07-24 19:31:56.699 [http-nio-8088-exec-9] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 1
2024-07-24 19:31:56.699 [http-nio-8088-exec-7] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ## HeaderUserId2ContextFilter，用户 ID：1
2024-07-24 19:31:56.699 [http-nio-8088-exec-7] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 1
2024-07-24 19:31:56.699 [http-nio-8088-exec-10] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 1
2024-07-24 19:31:56.700 [http-nio-8088-exec-7] INFO  c.j.w.f.b.o.aspect.ApiOperationLogAspect - ====== 请求开始: [前台获取标签列表], 入参: , 请求类: TagController, 请求方法: findTagList =================================== 
2024-07-24 19:31:56.700 [http-nio-8088-exec-9] INFO  c.j.w.f.b.o.aspect.ApiOperationLogAspect - ====== 请求开始: [前台获取统计信息], 入参: , 请求类: StatisticsController, 请求方法: findInfo =================================== 
2024-07-24 19:31:56.701 [http-nio-8088-exec-10] INFO  c.j.w.f.b.o.aspect.ApiOperationLogAspect - ====== 请求开始: [前台获取分类列表], 入参: {"size":10}, 请求类: CategoryController, 请求方法: findCategoryList =================================== 
2024-07-24 19:31:56.702 [http-nio-8088-exec-7] INFO  c.j.w.f.b.o.aspect.ApiOperationLogAspect - ====== 请求结束: [前台获取标签列表], 耗时: 2ms, 出参: {"success":true,"message":null,"errorCode":null,"data":[{"id":47,"name":"java","articlesTotal":13},{"id":48,"name":"脉冲神经网络","articlesTotal":6},{"id":49,"name":"snn","articlesTotal":6},{"id":54,"name":"联想记忆模型","articlesTotal":1},{"id":55,"name":"集合","articlesTotal":1},{"id":56,"name":"并发","articlesTotal":1},{"id":57,"name":"RabbitMQ","articlesTotal":2},{"id":58,"name":"spring","articlesTotal":4},{"id":59,"name":"springboot","articlesTotal":4},{"id":60,"name":"mongodb","articlesTotal":2},{"id":61,"name":"nosql","articlesTotal":1},{"id":62,"name":"redis","articlesTotal":2},{"id":63,"name":"mysql","articlesTotal":1},{"id":64,"name":"jvm","articlesTotal":1},{"id":65,"name":"elasticSearch","articlesTotal":1},{"id":66,"name":"SpringMVC","articlesTotal":1},{"id":67,"name":"计算机网络","articlesTotal":1},{"id":68,"name":"操作系统","articlesTotal":1},{"id":69,"name":"设计模式","articlesTotal":1},{"id":70,"name":"SpringCloud","articlesTotal":2},{"id":71,"name":"微服务","articlesTotal":3},{"id":72,"name":"jmm","articlesTotal":1},{"id":73,"name":"高可用","articlesTotal":2},{"id":74,"name":"系统设计","articlesTotal":2}]} =================================== 
2024-07-24 19:31:56.703 [http-nio-8088-exec-7] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 1
2024-07-24 19:31:56.704 [http-nio-8088-exec-10] INFO  c.j.w.f.b.o.aspect.ApiOperationLogAspect - ====== 请求结束: [前台获取分类列表], 耗时: 4ms, 出参: {"success":true,"message":null,"errorCode":null,"data":[{"id":29,"name":"Java","articlesTotal":6},{"id":31,"name":"SNN","articlesTotal":6},{"id":33,"name":"SpringBoot","articlesTotal":3},{"id":30,"name":"工具","articlesTotal":2},{"id":34,"name":"Redis","articlesTotal":2},{"id":32,"name":"Spring","articlesTotal":1},{"id":35,"name":"RabbitMQ","articlesTotal":1},{"id":36,"name":"MySQL","articlesTotal":1},{"id":37,"name":"MongoDB","articlesTotal":1},{"id":38,"name":"ElasticSearch","articlesTotal":1}]} =================================== 
2024-07-24 19:31:56.706 [http-nio-8088-exec-10] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 1
2024-07-24 19:31:56.712 [http-nio-8088-exec-9] INFO  c.j.w.f.b.o.aspect.ApiOperationLogAspect - ====== 请求结束: [前台获取统计信息], 耗时: 12ms, 出参: {"success":true,"message":null,"errorCode":null,"data":{"articleTotalCount":28,"categoryTotalCount":15,"tagTotalCount":24,"pvTotalCount":771}} =================================== 
2024-07-24 19:31:56.715 [http-nio-8088-exec-9] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 1
2024-07-24 19:31:56.731 [http-nio-8088-exec-2] INFO  c.j.w.f.b.o.aspect.ApiOperationLogAspect - ====== 请求结束: [获取首页文章分页数据], 耗时: 32ms, 出参: {"success":true,"message":null,"errorCode":null,"data":[{"id":43,"cover":"http://110.41.141.141:9000/weblog/weblog/05192a6167704ae8851dbcab6d4ebb7a.jpg","title":"E-Commerce","createDate":"2024-04-27","summary":"E-Commerce项目摘要","category":{"id":33,"name":"SpringBoot","articlesTotal":null},"tags":[{"id":47,"name":"java","articlesTotal":null},{"id":58,"name":"spring","articlesTotal":null},{"id":59,"name":"springboot","articlesTotal":null},{"id":57,"name":"RabbitMQ","articlesTotal":null},{"id":60,"name":"mongodb","articlesTotal":null}],"isTop":true},{"id":44,"cover":"http://110.41.141.141:9000/weblog/weblog/21bfecab22f14cef9536fc55c5ac3d11.png","title":"WebLog","createDate":"2024-04-27","summary":"WebLog项目摘要","category":{"id":33,"name":"SpringBoot","articlesTotal":null},"tags":[{"id":47,"name":"java","articlesTotal":null},{"id":58,"name":"spring","articlesTotal":null},{"id":59,"name":"springboot","articlesTotal":null}],"isTop":true},{"id":59,"cover":"http://110.41.141.141:9000/weblog/245940328a974c3aa35a4fab259c2f93.jpg","title":"负载均衡","createDate":"2024-07-19","summary":"负载均衡","category":{"id":41,"name":"高可用","articlesTotal":null},"tags":[{"id":73,"name":"高可用","articlesTotal":null},{"id":74,"name":"系统设计","articlesTotal":null},{"id":71,"name":"微服务","articlesTotal":null}],"isTop":false},{"id":58,"cover":"http://110.41.141.141:9000/weblog/90cd980f59014947af531833d3d32666.jpg","title":"JMM","createDate":"2024-07-19","summary":"Java内存模型","category":{"id":29,"name":"Java","articlesTotal":null},"tags":[{"id":72,"name":"jmm","articlesTotal":null}],"isTop":false},{"id":57,"cover":"http://110.41.141.141:9000/weblog/14b767a52a0548a29129a64ec9c31b92.png","title":"微服务","createDate":"2024-07-19","summary":"微服务","category":{"id":43,"name":"系统设计","articlesTotal":null},"tags":[{"id":71,"name":"微服务","articlesTotal":null},{"id":70,"name":"SpringCloud","articlesTotal":null},{"id":74,"name":"系统设计","articlesTotal":null},{"id":73,"name":"高可用","articlesTotal":null}],"isTop":false},{"id":56,"cover":"http://110.41.141.141:9000/weblog/065adf0970a84db291e85a56d9927905.jpg","title":"SpringCloud","createDate":"2024-07-19","summary":"Spring Cloud 八股","category":{"id":40,"name":"SpringCloud","articlesTotal":null},"tags":[{"id":70,"name":"SpringCloud","articlesTotal":null},{"id":71,"name":"微服务","articlesTotal":null}],"isTop":false},{"id":55,"cover":"http://110.41.141.141:9000/weblog/031b75962ad54f2f8e6cde5799dbd0f5.jpg","title":"DesignPattern","createDate":"2024-07-19","summary":"设计模式","category":{"id":29,"name":"Java","articlesTotal":null},"tags":[{"id":69,"name":"设计模式","articlesTotal":null}],"isTop":false},{"id":54,"cover":"http://110.41.141.141:9000/weblog/weblog/630032da446240d190e66871b6433f42.jpg","title":"操作系统","createDate":"2024-05-22","summary":"操作系统八股","category":{"id":30,"name":"工具","articlesTotal":null},"tags":[{"id":68,"name":"操作系统","articlesTotal":null}],"isTop":false},{"id":53,"cover":"http://110.41.141.141:9000/weblog/weblog/b483ce35c9e44b9db5df361e2cd1e2af.jpg","title":"计算机网络","createDate":"2024-05-22","summary":"计算机网络八股","category":{"id":30,"name":"工具","articlesTotal":null},"tags":[{"id":67,"name":"计算机网络","articlesTotal":null}],"isTop":false},{"id":51,"cover":"http://110.41.141.141:9000/weblog/weblog/20802574f640434eb207bf01a74b4c0c.jpg","title":"RedisIncrement","createDate":"2024-05-17","summary":"redis图文补充","category":{"id":34,"name":"Redis","articlesTotal":null},"tags":[{"id":62,"name":"redis","articlesTotal":null},{"id":47,"name":"java","articlesTotal":null}],"isTop":false}],"total":28,"size":10,"current":1,"pages":3} =================================== 
2024-07-24 19:31:56.733 [http-nio-8088-exec-2] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 1
2024-07-24 19:31:58.630 [http-nio-8088-exec-3] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ## HeaderUserId2ContextFilter，用户 ID：1
2024-07-24 19:31:58.631 [http-nio-8088-exec-3] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 1
2024-07-24 19:31:58.631 [http-nio-8088-exec-3] INFO  c.j.w.f.b.o.aspect.ApiOperationLogAspect - ====== 请求开始: [前台获取博客详情], 入参: , 请求类: BlogSettingsController, 请求方法: findDetail =================================== 
2024-07-24 19:31:58.633 [http-nio-8088-exec-3] INFO  c.j.w.f.b.o.aspect.ApiOperationLogAspect - ====== 请求结束: [前台获取博客详情], 耗时: 2ms, 出参: {"success":true,"message":null,"errorCode":null,"data":{"logo":"http://110.41.141.141:9000/weblog/weblog/9853f8be13cb4f7fae00e3f5233dd688.png","name":"WebLog","author":"Jacob","introduction":"求知若饥，虚心若愚","avatar":"https://webook-aliyun.oss-cn-hangzhou.aliyuncs.com/f5df2d94010149deb1da9c2a2096a9dc.jpg","githubHomepage":"https://github.com/jdw-art","csdnHomepage":"https://www.csdn.net/?spm=1010.2135.3001.4476","giteeHomepage":"","zhihuHomepage":"https://www.zhihu.com/people/54-10-50-93"}} =================================== 
2024-07-24 19:31:58.634 [http-nio-8088-exec-3] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 1
2024-07-24 19:31:58.673 [http-nio-8088-exec-1] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ## HeaderUserId2ContextFilter，用户 ID：1
2024-07-24 19:31:58.673 [http-nio-8088-exec-1] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 1
2024-07-24 19:31:58.675 [http-nio-8088-exec-1] INFO  c.j.w.f.b.o.aspect.ApiOperationLogAspect - ====== 请求开始: [获取文章详情], 入参: {"articleId":44}, 请求类: ArticleController, 请求方法: findArticleDetail =================================== 
2024-07-24 19:31:58.682 [http-nio-8088-exec-4] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ## HeaderUserId2ContextFilter，用户 ID：1
2024-07-24 19:31:58.682 [http-nio-8088-exec-8] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ## HeaderUserId2ContextFilter，用户 ID：1
2024-07-24 19:31:58.682 [http-nio-8088-exec-8] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 1
2024-07-24 19:31:58.682 [http-nio-8088-exec-4] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 1
2024-07-24 19:31:58.682 [http-nio-8088-exec-5] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ## HeaderUserId2ContextFilter，用户 ID：1
2024-07-24 19:31:58.682 [http-nio-8088-exec-5] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 1
2024-07-24 19:31:58.683 [http-nio-8088-exec-4] INFO  c.j.w.f.b.o.aspect.ApiOperationLogAspect - ====== 请求开始: [前台获取统计信息], 入参: , 请求类: StatisticsController, 请求方法: findInfo =================================== 
2024-07-24 19:31:58.683 [http-nio-8088-exec-5] INFO  c.j.w.f.b.o.aspect.ApiOperationLogAspect - ====== 请求开始: [前台获取标签列表], 入参: , 请求类: TagController, 请求方法: findTagList =================================== 
2024-07-24 19:31:58.683 [http-nio-8088-exec-8] INFO  c.j.w.f.b.o.aspect.ApiOperationLogAspect - ====== 请求开始: [前台获取分类列表], 入参: {"size":10}, 请求类: CategoryController, 请求方法: findCategoryList =================================== 
2024-07-24 19:31:58.685 [http-nio-8088-exec-5] INFO  c.j.w.f.b.o.aspect.ApiOperationLogAspect - ====== 请求结束: [前台获取标签列表], 耗时: 2ms, 出参: {"success":true,"message":null,"errorCode":null,"data":[{"id":47,"name":"java","articlesTotal":13},{"id":48,"name":"脉冲神经网络","articlesTotal":6},{"id":49,"name":"snn","articlesTotal":6},{"id":54,"name":"联想记忆模型","articlesTotal":1},{"id":55,"name":"集合","articlesTotal":1},{"id":56,"name":"并发","articlesTotal":1},{"id":57,"name":"RabbitMQ","articlesTotal":2},{"id":58,"name":"spring","articlesTotal":4},{"id":59,"name":"springboot","articlesTotal":4},{"id":60,"name":"mongodb","articlesTotal":2},{"id":61,"name":"nosql","articlesTotal":1},{"id":62,"name":"redis","articlesTotal":2},{"id":63,"name":"mysql","articlesTotal":1},{"id":64,"name":"jvm","articlesTotal":1},{"id":65,"name":"elasticSearch","articlesTotal":1},{"id":66,"name":"SpringMVC","articlesTotal":1},{"id":67,"name":"计算机网络","articlesTotal":1},{"id":68,"name":"操作系统","articlesTotal":1},{"id":69,"name":"设计模式","articlesTotal":1},{"id":70,"name":"SpringCloud","articlesTotal":2},{"id":71,"name":"微服务","articlesTotal":3},{"id":72,"name":"jmm","articlesTotal":1},{"id":73,"name":"高可用","articlesTotal":2},{"id":74,"name":"系统设计","articlesTotal":2}]} =================================== 
2024-07-24 19:31:58.686 [http-nio-8088-exec-5] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 1
2024-07-24 19:31:58.687 [http-nio-8088-exec-8] INFO  c.j.w.f.b.o.aspect.ApiOperationLogAspect - ====== 请求结束: [前台获取分类列表], 耗时: 4ms, 出参: {"success":true,"message":null,"errorCode":null,"data":[{"id":29,"name":"Java","articlesTotal":6},{"id":31,"name":"SNN","articlesTotal":6},{"id":33,"name":"SpringBoot","articlesTotal":3},{"id":30,"name":"工具","articlesTotal":2},{"id":34,"name":"Redis","articlesTotal":2},{"id":32,"name":"Spring","articlesTotal":1},{"id":35,"name":"RabbitMQ","articlesTotal":1},{"id":36,"name":"MySQL","articlesTotal":1},{"id":37,"name":"MongoDB","articlesTotal":1},{"id":38,"name":"ElasticSearch","articlesTotal":1}]} =================================== 
2024-07-24 19:31:58.688 [http-nio-8088-exec-8] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 1
2024-07-24 19:31:58.691 [http-nio-8088-exec-4] INFO  c.j.w.f.b.o.aspect.ApiOperationLogAspect - ====== 请求结束: [前台获取统计信息], 耗时: 8ms, 出参: {"success":true,"message":null,"errorCode":null,"data":{"articleTotalCount":28,"categoryTotalCount":15,"tagTotalCount":24,"pvTotalCount":771}} =================================== 
2024-07-24 19:31:58.693 [http-nio-8088-exec-4] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 1
2024-07-24 19:31:58.715 [http-nio-8088-exec-1] INFO  c.j.weblog.event.subscriber.ReadArticleSubscriber - ==> threadName: http-nio-8088-exec-1
2024-07-24 19:31:58.715 [http-nio-8088-exec-1] INFO  c.j.weblog.event.subscriber.ReadArticleSubscriber - ==> 文章阅读事件消费成功，articleId: 44
2024-07-24 19:31:58.724 [http-nio-8088-exec-1] INFO  c.j.weblog.event.subscriber.ReadArticleSubscriber - ==> 文章阅读量 +1 操作成功，articleId: 44
2024-07-24 19:31:58.730 [http-nio-8088-exec-1] INFO  c.j.weblog.event.subscriber.ReadArticleSubscriber - ==> 当日文章 PV 访问量 +1 操作成功，date: 2024-07-24
2024-07-24 19:31:58.731 [http-nio-8088-exec-1] INFO  c.j.w.f.b.o.aspect.ApiOperationLogAspect - ====== 请求结束: [获取文章详情], 耗时: 55ms, 出参: {"success":true,"message":null,"errorCode":null,"data":{"title":"WebLog","content":"<blockquote>\n<p><strong>项目简介</strong>：WebLog博客系统，不仅为用户提供了优质的阅读体验，还为博主提供了便捷的文章管理和博客设置功能。无论是在前台浏览博客、查找感兴趣的文章，还是在后台管理系统中编辑和管理博客内容，用户都能够享受到简洁高效的操作界面和流畅的使用体验。</p>\n<p><strong>核心技术</strong>：SpringBoot、MyBatisPlus、SpringSecurity、Guava、Elasticsearch、MinIO</p>\n<p><strong>业务描述</strong>：</p>\n<ul>\n<li>文章管理：整合MarkDown编辑器实现文章发布和更新，用户可以发布、编辑和删除文章，并且可以对文章进行分类和标签。</li>\n<li>分类与标签：文章可以根据内容进行分类和打标签，便于用户快速查找文章。管理员负责对现有的分类和标签进行编辑和删除。</li>\n<li>知识库：除了普通的文章，网站还提供了知识库模块，用户可以在这里分享知识、技巧、经验等内容，形成一个共享的学习资源池。</li>\n<li>评论功能：用户可以对文章提出自己的看法和观点并进行讨论。评论功能可以促进用户之间的交流和互动，增强网站的社区氛围。</li>\n</ul>\n</blockquote>\n<blockquote>\n<p>WebLog博客系统项目，为用户提供了优质的阅读体验，同时为博主提供了便捷的文章管理和博客设置功能。项目采用SpringBoot、MyBatisPlus等核心技术。前台用户可以通过简洁高效的界面浏览博客和查找感兴趣的文章，后台博主可以进行文章的发布、编辑、删除和分类标签管理。此外，还实现了知识库和评论功能，方便用户分享知识和技巧。项目同样也支持搜索和文件存储功能，并通过Guava优化系统性能。这两个项目让我在前后端开发和系统性能提升方面积累了丰富经验。</p>\n</blockquote>\n<h2 id=\"1模块组成\">1、模块组成</h2>\n<ul>\n<li>\n<p>前台博客系统：首页文章展示、文章分类、文章标签、文章归档、系统知识库</p>\n</li>\n<li>\n<p>后台管理系统：</p>\n<ul>\n<li>系统仪表盘：文章数、分类数、标签数、总浏览量、近半年文章发布热点图、一周PV访问量</li>\n<li>文章管理：文章查询、文章编辑、文章删除、文章发布</li>\n<li>分类管理：分类查询、分类新增、分类删除</li>\n<li>标签管理：标签查询、标签新增、标签删除</li>\n<li>知识库管理：知识库查询、知识库编辑、知识库删除、知识库发布</li>\n<li>评论管理：评论查询、评论删除</li>\n<li>博客设置：基础信息设置</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"2数据表分析\">2、数据表分析</h2>\n<p>共13张数据表。</p>\n<ul>\n<li>t_article：文章表</li>\n<li>t_article_category_rel：文章所属分类关联表</li>\n<li>t_article_content：文章内容表</li>\n<li>t_article_tag_rel：文章对应标签关联表</li>\n<li>t_blog_settings：博客设置表</li>\n<li>t_category：文章分类表</li>\n<li>t_comment：评论表</li>\n<li>t_statistics_article_pv：统计表：文章PV访问量</li>\n<li>t_tag：文章标签表</li>\n<li>t_user：用户表</li>\n<li>t_user_role：用户角色表</li>\n<li>t_wiki：知识库表</li>\n<li>t_wiki_catalog：知识库目录表</li>\n</ul>\n<h2 id=\"3业务分析\">3、业务分析</h2>\n<h2 id=\"4技术要点分析\">4、技术要点分析</h2>\n<h3 id=\"41springsecurity整合jwt\">4.1、SpringSecurity整合JWT</h3>\n<h4 id=\"411springsecurity\">4.1.1、SpringSecurity</h4>\n<blockquote>\n<p>Spring Security 是一个广泛应用于 Java 应用程序的安全框架，旨在保护应用程序免受潜在的安全威胁和攻击。作为 Spring 框架的一部分，Spring Security 提供了强大的功能，帮助开发人员实现身份认证、授权、会话管理以及其他与安全相关的任务。</p>\n</blockquote>\n<p><strong>为什么要使用 Spring Security？</strong></p>\n<ul>\n<li><strong>应用程序保护：</strong> 在当今互联网时代，应用程序安全性至关重要。Spring Security 提供了一系列的安全特性，帮助您保护应用程序免受恶意攻击，确保数据和功能不会被未经授权的用户访问。</li>\n<li><strong>一站式解决方案：</strong> Spring Security 提供了一个集中的框架来处理各种安全性问题。从用户认证、授权到会话管理，Spring Security 提供了一个一站式的解决方案，使开发人员能够更容易地处理安全问题。</li>\n<li><strong>多样的认证和授权方式：</strong> Spring Security 允许您以多种方式进行用户认证，包括基本认证、表单认证、OAuth 等。此外，您还可以定义精细的授权规则，确保只有经过授权的用户才能访问特定资源。</li>\n<li><strong>与 Spring 集成：</strong> Spring Security 可与其他 Spring 项目无缝集成，如 Spring Boot、Spring MVC 等。这使得您可以轻松地将安全性集成到现有的 Spring 应用程序中。</li>\n<li><strong>高度可定制：</strong> Spring Security 允许您根据应用程序的特定需求进行定制。您可以创建自定义的认证提供者、访问决策器、过滤器等，以适应不同的安全性要求。</li>\n<li><strong>丰富的社区和文档：</strong> Spring Security 拥有活跃的社区和丰富的文档。您可以在社区中找到许多教程、示例代码和解决方案，以帮助您解决各种安全性问题。</li>\n<li><strong>符合标准：</strong> Spring Security 符合各种安全性标准和最佳实践，确保您的应用程序满足行业和法规的要求。</li>\n</ul>\n<p><strong>整合SpringSecurity：</strong></p>\n<p>要更好地控制 Spring Security 的行为，你可以创建一个自定义的 <code>SecurityConfig</code> 类，继承自 <code>WebSecurityConfigurerAdapter</code>。通过覆盖方法，您可以配置认证、授权规则、自定义登录页面、注销等。本项目中创建一个WebSecurityConfig配置类来自定义SpringSecurity配置。</p>\n<h4 id=\"412spring-security-整合-jwt-实现身份认证\">4.1.2、Spring Security 整合 JWT ：实现身份认证</h4>\n<blockquote>\n<p>JWT（JSON Web Token）是一种用于在不同应用之间安全传输信息的开放标准（RFC 7519）。它是一种基于 JSON 的轻量级令牌，由三部分组成：头部（Header）、载荷（Payload）和签名（Signature）。JWT 被广泛用于实现身份验证和授权，<strong>特别适用于前后端分离的应用程序</strong>。</p>\n</blockquote>\n<p><strong>为什么要使用 JWT？</strong></p>\n<p>JWT 提供了一种在客户端和服务器之间传输安全信息的简单方法，具有以下优点：</p>\n<ul>\n<li><strong>无状态性（Stateless）</strong>：JWT 本身包含了所有必要的信息，无需在服务器端存储会话信息，每个请求都可以独立验证。</li>\n<li><strong>灵活性</strong>：JWT 可以存储任意格式的数据，使其成为传递用户信息、权限、角色等的理想选择。</li>\n<li><strong>安全性</strong>：JWT 使用签名进行验证，确保信息在传输过程中不被篡改。</li>\n<li><strong>跨平台和跨语言</strong>：由于 JWT 使用 JSON 格式，它在不同的编程语言和平台之间都可以轻松传递。</li>\n</ul>\n<p><strong>JWT实现认证和授权的原理：</strong></p>\n<ul>\n<li>用户调用登录接口，登录成功后获取到JWT的token；</li>\n<li>之后用户每次调用接口都在http的header中添加一个叫Authorization的头，值为JWT的token；</li>\n<li>后台程序通过对Authorization头中信息的解码及数字签名校验来获取其中的用户信息，从而实现认证和授权。</li>\n</ul>\n<p><strong>实现流程：</strong></p>\n<ul>\n<li>\n<p>修改配置文件<code>application.yml</code>，添加JWT相关配置。包括请求头、加密密钥、过期时间和JWT负载中的开头</p>\n</li>\n<li>\n<p>添加JWT token的工具类，用于生成和解析JWT token的工具类。</p>\n</li>\n<li>\n<p>然后整合SpringSecurity，添加SpringSecurity的配置类；</p>\n<p>配置中相关方法及依赖说明如下：</p>\n<ul>\n<li><strong>filterChain(HttpSecurity httpSecurity)</strong>：用于配置SecurityFilterChain实例，SpringSecurity的核心配置类，可以SpringSecurity进行路径授权配置、过滤器配置等；</li>\n<li><strong>RestfulAccessDeniedHandler</strong>：当用户没有访问权限时的处理器，用于返回JSON格式的处理结果；</li>\n<li><strong>RestAuthenticationEntryPoint</strong>：当未登录或token失效时，返回JSON格式的结果；</li>\n<li><strong>UserDetailsService</strong>：SpringSecurity定义的核心接口，用于根据用户名获取用户信息，需要自行实现；</li>\n<li><strong>UserDetails</strong>：SpringSecurity定义用于封装用户信息的类（主要是用户信息和权限），需要自行实现；</li>\n<li><strong>PasswordEncoder</strong>：SpringSecurity定义的用于对密码进行编码及比对的接口，目前使用的是BCryptPasswordEncoder；</li>\n<li>JwtAuthenticationTokenFilter：在用户名和密码校验前添加的过滤器，如果有jwt的token，会自行根据token信息进行登录。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"42scheduled-定时任务--事件发布订阅统计当日-pv-访问量\">4.2、@Scheduled 定时任务 + 事件发布订阅，统计当日 PV 访问量</h3>\n<blockquote>\n<p>Spring Boot 定时任务是一种机制，允许您在应用程序中执行预定的任务或操作，而无需手动触发。这些任务可以是周期性的、定时的，或者基于特定的触发条件执行。Spring Boot 内部提供了<code>@Scheduled</code>注解，使得创建和管理定时任务变得非常简单。</p>\n</blockquote>\n<p><strong>为什么需要定时任务？</strong></p>\n<ol>\n<li><strong>自动化任务执行：</strong> 定时任务允许您在预定的时间间隔内执行任务，而无需手动触发。这对于需要按照规律执行某些操作的场景非常有用，例如定期清理日志、生成报告等。</li>\n<li><strong>定时数据处理：</strong> 在某些应用中，需要定期处理数据，例如更新缓存、同步数据等。定时任务可以确保这些处理在规定的时间内自动完成。</li>\n<li><strong>后台任务处理：</strong> 有些任务可能是一些较为耗时的后台操作，例如数据备份、邮件发送等。通过定时任务，您可以将这些操作分散到不同的时间段，避免影响应用程序的实时性能。</li>\n<li><strong>周期性报告生成：</strong> 如果您的应用需要生成周期性报告，例如每日、每周或每月的报告，定时任务是一个很好的选择。</li>\n</ol>\n<p>实现流程：</p>\n<ul>\n<li>开启 Spring Boot 内置提供的定时任务，仅需添加在启动类上添加 <code>@EnableScheduling</code> 注解即可。</li>\n<li>创建<code>InitPVRecordScheduledTask</code> 初始化次日文章访问量记录的任务类：\n<ul>\n<li>通过 <code>@Scheduled(cron = &quot;0 0 23 * * ?&quot;)</code> 注解来指定定时任务的 <code>cron</code> 执行表达式，<code>0 0 23 * * ?</code> 代表每晚 23 点执行一次定时任务，逻辑也比较简单，拿到当天的日期，并通过 <code>plusDays(1)</code> 方法获取第二天的日期，然后组装 <code>DO</code> 实体类，执行 <code>insert()</code> 方法插入 <code>pv_date</code> 字段为次日的记录。</li>\n</ul>\n</li>\n<li>统计表中有了记录后，还需要在 <code>StatisticsArticlePVMapper</code> 接口中，封装一个 <em>对指定日期的文章 PV 访问量进行 +1</em> 的方法，方便后续业务中直接调用。</li>\n<li>前置工作都完成后，我们对文章阅读事件进行消费，编辑 <code>ReadArticleSubscriber</code> 事件订阅类，在逻辑代码的最后，添加对<em>当日文章 PV 访问量 +1</em>的逻辑代码。</li>\n<li>\n<h3 id=\"43前后端分离解决跨域问题\">4.3、前后端分离解决跨域问题</h3>\n</li>\n</ul>\n<blockquote>\n<p>这里采用的是在前端采用的跨域解决方案</p>\n</blockquote>\n<p>在<code>vite.config.js</code>中添加：</p>\n<pre><code class=\"language-js\">export default defineConfig({\n  server: {\n    proxy: {\n      '/api': {\n        target: 'http://localhost:8080',\n        changeOrigin: true,\n        rewrite: (path) =&gt; path.replace(/^\\/api/, ''),\n      },\n    }\n  },\n})\n</code></pre>\n<p>在target中声明后端的域名，然后开启changeOrigin，假如前端发起请求的baseUrl应该是<code>http://localhost:5173/api</code>，那么当前端请求后端<code>http://localhost:8080</code>时，那么你发起的请求应该是下面的样子：</p>\n<pre><code>http://localhost:5173/api/userlist\n</code></pre>\n<p>这样前端就是从相同的host 并且相同的port发起的请求，代理通过前缀&quot;/api&quot;匹配的你要转发的请求，转发到<code>http://localhost:8080</code>真正的后端服务，并且把多余的前缀给你替换掉。</p>\n","createTime":"2024-04-27 15:42:12","categoryId":33,"categoryName":"SpringBoot","readNum":51,"tags":[{"id":47,"name":"java","articlesTotal":null},{"id":58,"name":"spring","articlesTotal":null},{"id":59,"name":"springboot","articlesTotal":null}],"preArticle":{"articleId":45,"articleTitle":"Redis"},"nextArticle":{"articleId":43,"articleTitle":"E-Commerce"},"totalWords":2943,"readTime":"约 9 分钟","updateTime":"2024-06-03 10:08:09"}} =================================== 
2024-07-24 19:31:58.732 [http-nio-8088-exec-1] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 1
2024-07-24 19:32:07.035 [http-nio-8088-exec-6] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ## HeaderUserId2ContextFilter，用户 ID：1
2024-07-24 19:32:07.035 [http-nio-8088-exec-6] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 1
2024-07-24 19:32:07.036 [http-nio-8088-exec-6] INFO  c.j.w.f.b.o.aspect.ApiOperationLogAspect - ====== 请求开始: [前台获取博客详情], 入参: , 请求类: BlogSettingsController, 请求方法: findDetail =================================== 
2024-07-24 19:32:07.048 [http-nio-8088-exec-6] INFO  c.j.w.f.b.o.aspect.ApiOperationLogAspect - ====== 请求结束: [前台获取博客详情], 耗时: 12ms, 出参: {"success":true,"message":null,"errorCode":null,"data":{"logo":"http://110.41.141.141:9000/weblog/weblog/9853f8be13cb4f7fae00e3f5233dd688.png","name":"WebLog","author":"Jacob","introduction":"求知若饥，虚心若愚","avatar":"https://webook-aliyun.oss-cn-hangzhou.aliyuncs.com/f5df2d94010149deb1da9c2a2096a9dc.jpg","githubHomepage":"https://github.com/jdw-art","csdnHomepage":"https://www.csdn.net/?spm=1010.2135.3001.4476","giteeHomepage":"","zhihuHomepage":"https://www.zhihu.com/people/54-10-50-93"}} =================================== 
2024-07-24 19:32:07.050 [http-nio-8088-exec-6] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 1
2024-07-24 19:32:07.084 [http-nio-8088-exec-2] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ## HeaderUserId2ContextFilter，用户 ID：1
2024-07-24 19:32:07.084 [http-nio-8088-exec-7] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ## HeaderUserId2ContextFilter，用户 ID：1
2024-07-24 19:32:07.084 [http-nio-8088-exec-10] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ## HeaderUserId2ContextFilter，用户 ID：1
2024-07-24 19:32:07.084 [http-nio-8088-exec-7] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 1
2024-07-24 19:32:07.084 [http-nio-8088-exec-10] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 1
2024-07-24 19:32:07.084 [http-nio-8088-exec-9] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ## HeaderUserId2ContextFilter，用户 ID：1
2024-07-24 19:32:07.085 [http-nio-8088-exec-9] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 1
2024-07-24 19:32:07.084 [http-nio-8088-exec-2] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 1
2024-07-24 19:32:07.085 [http-nio-8088-exec-9] INFO  c.j.w.f.b.o.aspect.ApiOperationLogAspect - ====== 请求开始: [前台获取统计信息], 入参: , 请求类: StatisticsController, 请求方法: findInfo =================================== 
2024-07-24 19:32:07.085 [http-nio-8088-exec-2] INFO  c.j.w.f.b.o.aspect.ApiOperationLogAspect - ====== 请求开始: [前台获取标签列表], 入参: , 请求类: TagController, 请求方法: findTagList =================================== 
2024-07-24 19:32:07.086 [http-nio-8088-exec-10] INFO  c.j.w.f.b.o.aspect.ApiOperationLogAspect - ====== 请求开始: [获取首页文章分页数据], 入参: {"current":1,"size":10}, 请求类: ArticleController, 请求方法: findArticlePageList =================================== 
2024-07-24 19:32:07.088 [http-nio-8088-exec-2] INFO  c.j.w.f.b.o.aspect.ApiOperationLogAspect - ====== 请求结束: [前台获取标签列表], 耗时: 3ms, 出参: {"success":true,"message":null,"errorCode":null,"data":[{"id":47,"name":"java","articlesTotal":13},{"id":48,"name":"脉冲神经网络","articlesTotal":6},{"id":49,"name":"snn","articlesTotal":6},{"id":54,"name":"联想记忆模型","articlesTotal":1},{"id":55,"name":"集合","articlesTotal":1},{"id":56,"name":"并发","articlesTotal":1},{"id":57,"name":"RabbitMQ","articlesTotal":2},{"id":58,"name":"spring","articlesTotal":4},{"id":59,"name":"springboot","articlesTotal":4},{"id":60,"name":"mongodb","articlesTotal":2},{"id":61,"name":"nosql","articlesTotal":1},{"id":62,"name":"redis","articlesTotal":2},{"id":63,"name":"mysql","articlesTotal":1},{"id":64,"name":"jvm","articlesTotal":1},{"id":65,"name":"elasticSearch","articlesTotal":1},{"id":66,"name":"SpringMVC","articlesTotal":1},{"id":67,"name":"计算机网络","articlesTotal":1},{"id":68,"name":"操作系统","articlesTotal":1},{"id":69,"name":"设计模式","articlesTotal":1},{"id":70,"name":"SpringCloud","articlesTotal":2},{"id":71,"name":"微服务","articlesTotal":3},{"id":72,"name":"jmm","articlesTotal":1},{"id":73,"name":"高可用","articlesTotal":2},{"id":74,"name":"系统设计","articlesTotal":2}]} =================================== 
2024-07-24 19:32:07.090 [http-nio-8088-exec-2] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 1
2024-07-24 19:32:07.094 [http-nio-8088-exec-7] INFO  c.j.w.f.b.o.aspect.ApiOperationLogAspect - ====== 请求开始: [前台获取分类列表], 入参: {"size":10}, 请求类: CategoryController, 请求方法: findCategoryList =================================== 
2024-07-24 19:32:07.097 [http-nio-8088-exec-9] INFO  c.j.w.f.b.o.aspect.ApiOperationLogAspect - ====== 请求结束: [前台获取统计信息], 耗时: 12ms, 出参: {"success":true,"message":null,"errorCode":null,"data":{"articleTotalCount":28,"categoryTotalCount":15,"tagTotalCount":24,"pvTotalCount":772}} =================================== 
2024-07-24 19:32:07.098 [http-nio-8088-exec-9] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 1
2024-07-24 19:32:07.098 [http-nio-8088-exec-7] INFO  c.j.w.f.b.o.aspect.ApiOperationLogAspect - ====== 请求结束: [前台获取分类列表], 耗时: 5ms, 出参: {"success":true,"message":null,"errorCode":null,"data":[{"id":29,"name":"Java","articlesTotal":6},{"id":31,"name":"SNN","articlesTotal":6},{"id":33,"name":"SpringBoot","articlesTotal":3},{"id":30,"name":"工具","articlesTotal":2},{"id":34,"name":"Redis","articlesTotal":2},{"id":32,"name":"Spring","articlesTotal":1},{"id":35,"name":"RabbitMQ","articlesTotal":1},{"id":36,"name":"MySQL","articlesTotal":1},{"id":37,"name":"MongoDB","articlesTotal":1},{"id":38,"name":"ElasticSearch","articlesTotal":1}]} =================================== 
2024-07-24 19:32:07.100 [http-nio-8088-exec-7] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 1
2024-07-24 19:32:07.125 [http-nio-8088-exec-10] INFO  c.j.w.f.b.o.aspect.ApiOperationLogAspect - ====== 请求结束: [获取首页文章分页数据], 耗时: 39ms, 出参: {"success":true,"message":null,"errorCode":null,"data":[{"id":43,"cover":"http://110.41.141.141:9000/weblog/weblog/05192a6167704ae8851dbcab6d4ebb7a.jpg","title":"E-Commerce","createDate":"2024-04-27","summary":"E-Commerce项目摘要","category":{"id":33,"name":"SpringBoot","articlesTotal":null},"tags":[{"id":47,"name":"java","articlesTotal":null},{"id":58,"name":"spring","articlesTotal":null},{"id":59,"name":"springboot","articlesTotal":null},{"id":57,"name":"RabbitMQ","articlesTotal":null},{"id":60,"name":"mongodb","articlesTotal":null}],"isTop":true},{"id":44,"cover":"http://110.41.141.141:9000/weblog/weblog/21bfecab22f14cef9536fc55c5ac3d11.png","title":"WebLog","createDate":"2024-04-27","summary":"WebLog项目摘要","category":{"id":33,"name":"SpringBoot","articlesTotal":null},"tags":[{"id":47,"name":"java","articlesTotal":null},{"id":58,"name":"spring","articlesTotal":null},{"id":59,"name":"springboot","articlesTotal":null}],"isTop":true},{"id":59,"cover":"http://110.41.141.141:9000/weblog/245940328a974c3aa35a4fab259c2f93.jpg","title":"负载均衡","createDate":"2024-07-19","summary":"负载均衡","category":{"id":41,"name":"高可用","articlesTotal":null},"tags":[{"id":73,"name":"高可用","articlesTotal":null},{"id":74,"name":"系统设计","articlesTotal":null},{"id":71,"name":"微服务","articlesTotal":null}],"isTop":false},{"id":58,"cover":"http://110.41.141.141:9000/weblog/90cd980f59014947af531833d3d32666.jpg","title":"JMM","createDate":"2024-07-19","summary":"Java内存模型","category":{"id":29,"name":"Java","articlesTotal":null},"tags":[{"id":72,"name":"jmm","articlesTotal":null}],"isTop":false},{"id":57,"cover":"http://110.41.141.141:9000/weblog/14b767a52a0548a29129a64ec9c31b92.png","title":"微服务","createDate":"2024-07-19","summary":"微服务","category":{"id":43,"name":"系统设计","articlesTotal":null},"tags":[{"id":71,"name":"微服务","articlesTotal":null},{"id":70,"name":"SpringCloud","articlesTotal":null},{"id":74,"name":"系统设计","articlesTotal":null},{"id":73,"name":"高可用","articlesTotal":null}],"isTop":false},{"id":56,"cover":"http://110.41.141.141:9000/weblog/065adf0970a84db291e85a56d9927905.jpg","title":"SpringCloud","createDate":"2024-07-19","summary":"Spring Cloud 八股","category":{"id":40,"name":"SpringCloud","articlesTotal":null},"tags":[{"id":70,"name":"SpringCloud","articlesTotal":null},{"id":71,"name":"微服务","articlesTotal":null}],"isTop":false},{"id":55,"cover":"http://110.41.141.141:9000/weblog/031b75962ad54f2f8e6cde5799dbd0f5.jpg","title":"DesignPattern","createDate":"2024-07-19","summary":"设计模式","category":{"id":29,"name":"Java","articlesTotal":null},"tags":[{"id":69,"name":"设计模式","articlesTotal":null}],"isTop":false},{"id":54,"cover":"http://110.41.141.141:9000/weblog/weblog/630032da446240d190e66871b6433f42.jpg","title":"操作系统","createDate":"2024-05-22","summary":"操作系统八股","category":{"id":30,"name":"工具","articlesTotal":null},"tags":[{"id":68,"name":"操作系统","articlesTotal":null}],"isTop":false},{"id":53,"cover":"http://110.41.141.141:9000/weblog/weblog/b483ce35c9e44b9db5df361e2cd1e2af.jpg","title":"计算机网络","createDate":"2024-05-22","summary":"计算机网络八股","category":{"id":30,"name":"工具","articlesTotal":null},"tags":[{"id":67,"name":"计算机网络","articlesTotal":null}],"isTop":false},{"id":51,"cover":"http://110.41.141.141:9000/weblog/weblog/20802574f640434eb207bf01a74b4c0c.jpg","title":"RedisIncrement","createDate":"2024-05-17","summary":"redis图文补充","category":{"id":34,"name":"Redis","articlesTotal":null},"tags":[{"id":62,"name":"redis","articlesTotal":null},{"id":47,"name":"java","articlesTotal":null}],"isTop":false}],"total":28,"size":10,"current":1,"pages":3} =================================== 
2024-07-24 19:32:07.126 [http-nio-8088-exec-10] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 1
2024-07-24 19:32:28.138 [http-nio-8088-exec-3] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ## HeaderUserId2ContextFilter，用户 ID：1
2024-07-24 19:32:28.139 [http-nio-8088-exec-3] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 1
2024-07-24 19:32:28.139 [http-nio-8088-exec-3] INFO  c.j.w.f.b.o.aspect.ApiOperationLogAspect - ====== 请求开始: [前台获取博客详情], 入参: , 请求类: BlogSettingsController, 请求方法: findDetail =================================== 
2024-07-24 19:32:28.141 [http-nio-8088-exec-3] INFO  c.j.w.f.b.o.aspect.ApiOperationLogAspect - ====== 请求结束: [前台获取博客详情], 耗时: 2ms, 出参: {"success":true,"message":null,"errorCode":null,"data":{"logo":"http://110.41.141.141:9000/weblog/weblog/9853f8be13cb4f7fae00e3f5233dd688.png","name":"WebLog","author":"Jacob","introduction":"求知若饥，虚心若愚","avatar":"https://webook-aliyun.oss-cn-hangzhou.aliyuncs.com/f5df2d94010149deb1da9c2a2096a9dc.jpg","githubHomepage":"https://github.com/jdw-art","csdnHomepage":"https://www.csdn.net/?spm=1010.2135.3001.4476","giteeHomepage":"","zhihuHomepage":"https://www.zhihu.com/people/54-10-50-93"}} =================================== 
2024-07-24 19:32:28.143 [http-nio-8088-exec-3] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 1
2024-07-24 19:32:28.176 [http-nio-8088-exec-5] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ## HeaderUserId2ContextFilter，用户 ID：1
2024-07-24 19:32:28.176 [http-nio-8088-exec-5] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 1
2024-07-24 19:32:28.180 [http-nio-8088-exec-5] INFO  c.j.w.f.b.o.aspect.ApiOperationLogAspect - ====== 请求开始: [获取首页文章分页数据], 入参: {"current":1,"size":10}, 请求类: ArticleController, 请求方法: findArticlePageList =================================== 
2024-07-24 19:32:28.183 [http-nio-8088-exec-1] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ## HeaderUserId2ContextFilter，用户 ID：1
2024-07-24 19:32:28.183 [http-nio-8088-exec-1] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 1
2024-07-24 19:32:28.184 [http-nio-8088-exec-8] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ## HeaderUserId2ContextFilter，用户 ID：1
2024-07-24 19:32:28.184 [http-nio-8088-exec-8] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 1
2024-07-24 19:32:28.186 [http-nio-8088-exec-1] INFO  c.j.w.f.b.o.aspect.ApiOperationLogAspect - ====== 请求开始: [前台获取分类列表], 入参: {"size":10}, 请求类: CategoryController, 请求方法: findCategoryList =================================== 
2024-07-24 19:32:28.187 [http-nio-8088-exec-4] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ## HeaderUserId2ContextFilter，用户 ID：1
2024-07-24 19:32:28.188 [http-nio-8088-exec-4] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 1
2024-07-24 19:32:28.192 [http-nio-8088-exec-1] INFO  c.j.w.f.b.o.aspect.ApiOperationLogAspect - ====== 请求结束: [前台获取分类列表], 耗时: 7ms, 出参: {"success":true,"message":null,"errorCode":null,"data":[{"id":29,"name":"Java","articlesTotal":6},{"id":31,"name":"SNN","articlesTotal":6},{"id":33,"name":"SpringBoot","articlesTotal":3},{"id":30,"name":"工具","articlesTotal":2},{"id":34,"name":"Redis","articlesTotal":2},{"id":32,"name":"Spring","articlesTotal":1},{"id":35,"name":"RabbitMQ","articlesTotal":1},{"id":36,"name":"MySQL","articlesTotal":1},{"id":37,"name":"MongoDB","articlesTotal":1},{"id":38,"name":"ElasticSearch","articlesTotal":1}]} =================================== 
2024-07-24 19:32:28.194 [http-nio-8088-exec-1] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 1
2024-07-24 19:32:28.194 [http-nio-8088-exec-4] INFO  c.j.w.f.b.o.aspect.ApiOperationLogAspect - ====== 请求开始: [前台获取标签列表], 入参: , 请求类: TagController, 请求方法: findTagList =================================== 
2024-07-24 19:32:28.193 [http-nio-8088-exec-8] INFO  c.j.w.f.b.o.aspect.ApiOperationLogAspect - ====== 请求开始: [前台获取统计信息], 入参: , 请求类: StatisticsController, 请求方法: findInfo =================================== 
2024-07-24 19:32:28.223 [http-nio-8088-exec-4] INFO  c.j.w.f.b.o.aspect.ApiOperationLogAspect - ====== 请求结束: [前台获取标签列表], 耗时: 29ms, 出参: {"success":true,"message":null,"errorCode":null,"data":[{"id":47,"name":"java","articlesTotal":13},{"id":48,"name":"脉冲神经网络","articlesTotal":6},{"id":49,"name":"snn","articlesTotal":6},{"id":54,"name":"联想记忆模型","articlesTotal":1},{"id":55,"name":"集合","articlesTotal":1},{"id":56,"name":"并发","articlesTotal":1},{"id":57,"name":"RabbitMQ","articlesTotal":2},{"id":58,"name":"spring","articlesTotal":4},{"id":59,"name":"springboot","articlesTotal":4},{"id":60,"name":"mongodb","articlesTotal":2},{"id":61,"name":"nosql","articlesTotal":1},{"id":62,"name":"redis","articlesTotal":2},{"id":63,"name":"mysql","articlesTotal":1},{"id":64,"name":"jvm","articlesTotal":1},{"id":65,"name":"elasticSearch","articlesTotal":1},{"id":66,"name":"SpringMVC","articlesTotal":1},{"id":67,"name":"计算机网络","articlesTotal":1},{"id":68,"name":"操作系统","articlesTotal":1},{"id":69,"name":"设计模式","articlesTotal":1},{"id":70,"name":"SpringCloud","articlesTotal":2},{"id":71,"name":"微服务","articlesTotal":3},{"id":72,"name":"jmm","articlesTotal":1},{"id":73,"name":"高可用","articlesTotal":2},{"id":74,"name":"系统设计","articlesTotal":2}]} =================================== 
2024-07-24 19:32:28.227 [http-nio-8088-exec-4] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 1
2024-07-24 19:32:28.233 [http-nio-8088-exec-8] INFO  c.j.w.f.b.o.aspect.ApiOperationLogAspect - ====== 请求结束: [前台获取统计信息], 耗时: 40ms, 出参: {"success":true,"message":null,"errorCode":null,"data":{"articleTotalCount":28,"categoryTotalCount":15,"tagTotalCount":24,"pvTotalCount":772}} =================================== 
2024-07-24 19:32:28.236 [http-nio-8088-exec-8] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 1
2024-07-24 19:32:28.238 [http-nio-8088-exec-5] INFO  c.j.w.f.b.o.aspect.ApiOperationLogAspect - ====== 请求结束: [获取首页文章分页数据], 耗时: 58ms, 出参: {"success":true,"message":null,"errorCode":null,"data":[{"id":43,"cover":"http://110.41.141.141:9000/weblog/weblog/05192a6167704ae8851dbcab6d4ebb7a.jpg","title":"E-Commerce","createDate":"2024-04-27","summary":"E-Commerce项目摘要","category":{"id":33,"name":"SpringBoot","articlesTotal":null},"tags":[{"id":47,"name":"java","articlesTotal":null},{"id":58,"name":"spring","articlesTotal":null},{"id":59,"name":"springboot","articlesTotal":null},{"id":57,"name":"RabbitMQ","articlesTotal":null},{"id":60,"name":"mongodb","articlesTotal":null}],"isTop":true},{"id":44,"cover":"http://110.41.141.141:9000/weblog/weblog/21bfecab22f14cef9536fc55c5ac3d11.png","title":"WebLog","createDate":"2024-04-27","summary":"WebLog项目摘要","category":{"id":33,"name":"SpringBoot","articlesTotal":null},"tags":[{"id":47,"name":"java","articlesTotal":null},{"id":58,"name":"spring","articlesTotal":null},{"id":59,"name":"springboot","articlesTotal":null}],"isTop":true},{"id":59,"cover":"http://110.41.141.141:9000/weblog/245940328a974c3aa35a4fab259c2f93.jpg","title":"负载均衡","createDate":"2024-07-19","summary":"负载均衡","category":{"id":41,"name":"高可用","articlesTotal":null},"tags":[{"id":73,"name":"高可用","articlesTotal":null},{"id":74,"name":"系统设计","articlesTotal":null},{"id":71,"name":"微服务","articlesTotal":null}],"isTop":false},{"id":58,"cover":"http://110.41.141.141:9000/weblog/90cd980f59014947af531833d3d32666.jpg","title":"JMM","createDate":"2024-07-19","summary":"Java内存模型","category":{"id":29,"name":"Java","articlesTotal":null},"tags":[{"id":72,"name":"jmm","articlesTotal":null}],"isTop":false},{"id":57,"cover":"http://110.41.141.141:9000/weblog/14b767a52a0548a29129a64ec9c31b92.png","title":"微服务","createDate":"2024-07-19","summary":"微服务","category":{"id":43,"name":"系统设计","articlesTotal":null},"tags":[{"id":71,"name":"微服务","articlesTotal":null},{"id":70,"name":"SpringCloud","articlesTotal":null},{"id":74,"name":"系统设计","articlesTotal":null},{"id":73,"name":"高可用","articlesTotal":null}],"isTop":false},{"id":56,"cover":"http://110.41.141.141:9000/weblog/065adf0970a84db291e85a56d9927905.jpg","title":"SpringCloud","createDate":"2024-07-19","summary":"Spring Cloud 八股","category":{"id":40,"name":"SpringCloud","articlesTotal":null},"tags":[{"id":70,"name":"SpringCloud","articlesTotal":null},{"id":71,"name":"微服务","articlesTotal":null}],"isTop":false},{"id":55,"cover":"http://110.41.141.141:9000/weblog/031b75962ad54f2f8e6cde5799dbd0f5.jpg","title":"DesignPattern","createDate":"2024-07-19","summary":"设计模式","category":{"id":29,"name":"Java","articlesTotal":null},"tags":[{"id":69,"name":"设计模式","articlesTotal":null}],"isTop":false},{"id":54,"cover":"http://110.41.141.141:9000/weblog/weblog/630032da446240d190e66871b6433f42.jpg","title":"操作系统","createDate":"2024-05-22","summary":"操作系统八股","category":{"id":30,"name":"工具","articlesTotal":null},"tags":[{"id":68,"name":"操作系统","articlesTotal":null}],"isTop":false},{"id":53,"cover":"http://110.41.141.141:9000/weblog/weblog/b483ce35c9e44b9db5df361e2cd1e2af.jpg","title":"计算机网络","createDate":"2024-05-22","summary":"计算机网络八股","category":{"id":30,"name":"工具","articlesTotal":null},"tags":[{"id":67,"name":"计算机网络","articlesTotal":null}],"isTop":false},{"id":51,"cover":"http://110.41.141.141:9000/weblog/weblog/20802574f640434eb207bf01a74b4c0c.jpg","title":"RedisIncrement","createDate":"2024-05-17","summary":"redis图文补充","category":{"id":34,"name":"Redis","articlesTotal":null},"tags":[{"id":62,"name":"redis","articlesTotal":null},{"id":47,"name":"java","articlesTotal":null}],"isTop":false}],"total":28,"size":10,"current":1,"pages":3} =================================== 
2024-07-24 19:32:28.239 [http-nio-8088-exec-5] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 1
2024-07-24 19:32:37.827 [http-nio-8088-exec-6] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ## HeaderUserId2ContextFilter，用户 ID：1
2024-07-24 19:32:37.827 [http-nio-8088-exec-6] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 1
2024-07-24 19:32:37.827 [http-nio-8088-exec-6] INFO  c.j.w.f.b.o.aspect.ApiOperationLogAspect - ====== 请求开始: [前台获取博客详情], 入参: , 请求类: BlogSettingsController, 请求方法: findDetail =================================== 
2024-07-24 19:32:37.830 [http-nio-8088-exec-6] INFO  c.j.w.f.b.o.aspect.ApiOperationLogAspect - ====== 请求结束: [前台获取博客详情], 耗时: 3ms, 出参: {"success":true,"message":null,"errorCode":null,"data":{"logo":"http://110.41.141.141:9000/weblog/weblog/9853f8be13cb4f7fae00e3f5233dd688.png","name":"WebLog","author":"Jacob","introduction":"求知若饥，虚心若愚","avatar":"https://webook-aliyun.oss-cn-hangzhou.aliyuncs.com/f5df2d94010149deb1da9c2a2096a9dc.jpg","githubHomepage":"https://github.com/jdw-art","csdnHomepage":"https://www.csdn.net/?spm=1010.2135.3001.4476","giteeHomepage":"","zhihuHomepage":"https://www.zhihu.com/people/54-10-50-93"}} =================================== 
2024-07-24 19:32:37.831 [http-nio-8088-exec-6] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 1
2024-07-24 19:32:37.880 [http-nio-8088-exec-2] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ## HeaderUserId2ContextFilter，用户 ID：1
2024-07-24 19:32:37.880 [http-nio-8088-exec-2] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 1
2024-07-24 19:32:37.882 [http-nio-8088-exec-2] INFO  c.j.w.f.b.o.aspect.ApiOperationLogAspect - ====== 请求开始: [获取文章详情], 入参: {"articleId":58}, 请求类: ArticleController, 请求方法: findArticleDetail =================================== 
2024-07-24 19:32:37.885 [http-nio-8088-exec-9] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ## HeaderUserId2ContextFilter，用户 ID：1
2024-07-24 19:32:37.885 [http-nio-8088-exec-9] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 1
2024-07-24 19:32:37.886 [http-nio-8088-exec-7] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ## HeaderUserId2ContextFilter，用户 ID：1
2024-07-24 19:32:37.886 [http-nio-8088-exec-7] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 1
2024-07-24 19:32:37.886 [http-nio-8088-exec-9] INFO  c.j.w.f.b.o.aspect.ApiOperationLogAspect - ====== 请求开始: [前台获取分类列表], 入参: {"size":10}, 请求类: CategoryController, 请求方法: findCategoryList =================================== 
2024-07-24 19:32:37.888 [http-nio-8088-exec-7] INFO  c.j.w.f.b.o.aspect.ApiOperationLogAspect - ====== 请求开始: [前台获取统计信息], 入参: , 请求类: StatisticsController, 请求方法: findInfo =================================== 
2024-07-24 19:32:37.890 [http-nio-8088-exec-9] INFO  c.j.w.f.b.o.aspect.ApiOperationLogAspect - ====== 请求结束: [前台获取分类列表], 耗时: 4ms, 出参: {"success":true,"message":null,"errorCode":null,"data":[{"id":29,"name":"Java","articlesTotal":6},{"id":31,"name":"SNN","articlesTotal":6},{"id":33,"name":"SpringBoot","articlesTotal":3},{"id":30,"name":"工具","articlesTotal":2},{"id":34,"name":"Redis","articlesTotal":2},{"id":32,"name":"Spring","articlesTotal":1},{"id":35,"name":"RabbitMQ","articlesTotal":1},{"id":36,"name":"MySQL","articlesTotal":1},{"id":37,"name":"MongoDB","articlesTotal":1},{"id":38,"name":"ElasticSearch","articlesTotal":1}]} =================================== 
2024-07-24 19:32:37.893 [http-nio-8088-exec-9] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 1
2024-07-24 19:32:37.894 [http-nio-8088-exec-9] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ## HeaderUserId2ContextFilter，用户 ID：1
2024-07-24 19:32:37.895 [http-nio-8088-exec-9] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 1
2024-07-24 19:32:37.896 [http-nio-8088-exec-9] INFO  c.j.w.f.b.o.aspect.ApiOperationLogAspect - ====== 请求开始: [前台获取标签列表], 入参: , 请求类: TagController, 请求方法: findTagList =================================== 
2024-07-24 19:32:37.900 [http-nio-8088-exec-9] INFO  c.j.w.f.b.o.aspect.ApiOperationLogAspect - ====== 请求结束: [前台获取标签列表], 耗时: 4ms, 出参: {"success":true,"message":null,"errorCode":null,"data":[{"id":47,"name":"java","articlesTotal":13},{"id":48,"name":"脉冲神经网络","articlesTotal":6},{"id":49,"name":"snn","articlesTotal":6},{"id":54,"name":"联想记忆模型","articlesTotal":1},{"id":55,"name":"集合","articlesTotal":1},{"id":56,"name":"并发","articlesTotal":1},{"id":57,"name":"RabbitMQ","articlesTotal":2},{"id":58,"name":"spring","articlesTotal":4},{"id":59,"name":"springboot","articlesTotal":4},{"id":60,"name":"mongodb","articlesTotal":2},{"id":61,"name":"nosql","articlesTotal":1},{"id":62,"name":"redis","articlesTotal":2},{"id":63,"name":"mysql","articlesTotal":1},{"id":64,"name":"jvm","articlesTotal":1},{"id":65,"name":"elasticSearch","articlesTotal":1},{"id":66,"name":"SpringMVC","articlesTotal":1},{"id":67,"name":"计算机网络","articlesTotal":1},{"id":68,"name":"操作系统","articlesTotal":1},{"id":69,"name":"设计模式","articlesTotal":1},{"id":70,"name":"SpringCloud","articlesTotal":2},{"id":71,"name":"微服务","articlesTotal":3},{"id":72,"name":"jmm","articlesTotal":1},{"id":73,"name":"高可用","articlesTotal":2},{"id":74,"name":"系统设计","articlesTotal":2}]} =================================== 
2024-07-24 19:32:37.901 [http-nio-8088-exec-9] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 1
2024-07-24 19:32:37.904 [http-nio-8088-exec-7] INFO  c.j.w.f.b.o.aspect.ApiOperationLogAspect - ====== 请求结束: [前台获取统计信息], 耗时: 16ms, 出参: {"success":true,"message":null,"errorCode":null,"data":{"articleTotalCount":28,"categoryTotalCount":15,"tagTotalCount":24,"pvTotalCount":772}} =================================== 
2024-07-24 19:32:37.906 [http-nio-8088-exec-7] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 1
2024-07-24 19:32:37.928 [http-nio-8088-exec-2] INFO  c.j.weblog.event.subscriber.ReadArticleSubscriber - ==> threadName: http-nio-8088-exec-2
2024-07-24 19:32:37.928 [http-nio-8088-exec-2] INFO  c.j.weblog.event.subscriber.ReadArticleSubscriber - ==> 文章阅读事件消费成功，articleId: 58
2024-07-24 19:32:37.935 [http-nio-8088-exec-2] INFO  c.j.weblog.event.subscriber.ReadArticleSubscriber - ==> 文章阅读量 +1 操作成功，articleId: 58
2024-07-24 19:32:37.940 [http-nio-8088-exec-2] INFO  c.j.weblog.event.subscriber.ReadArticleSubscriber - ==> 当日文章 PV 访问量 +1 操作成功，date: 2024-07-24
2024-07-24 19:32:37.941 [http-nio-8088-exec-2] INFO  c.j.w.f.b.o.aspect.ApiOperationLogAspect - ====== 请求结束: [获取文章详情], 耗时: 59ms, 出参: {"success":true,"message":null,"errorCode":null,"data":{"title":"JMM","content":"<h2 id=\"1从-cpu-缓存模型说起\">1、从 CPU 缓存模型说起</h2>\n<p><strong>为什么要弄一个 CPU 高速缓存呢？</strong> 类比我们开发网站后台系统使用的缓存（比如 Redis）是为了解决程序处理速度和访问常规关系型数据库速度不对等的问题。 <strong>CPU 缓存则是为了解决 CPU 处理速度和内存处理速度不对等的问题。</strong></p>\n<p>我们甚至可以把 <strong>内存看作外存的高速缓存</strong>，程序运行的时候我们把外存的数据复制到内存，由于内存的处理速度远远高于外存，这样提高了处理速度。</p>\n<p>总结：<strong>CPU Cache 缓存的是内存数据用于解决 CPU 处理速度和内存不匹配的问题，内存缓存的是硬盘数据用于解决硬盘访问速度过慢的问题。</strong></p>\n<p>\n<img src=\"http://110.41.141.141:9000/weblog/e0214d438f8c4a2382c35ca75484dc93.png\">\n</p>\n<p>现代的 CPU Cache 通常分为三层，分别叫 L1,L2,L3 Cache。有些 CPU 可能还有 L4 Cache，这里不做讨论，并不常见</p>\n<p><strong>CPU Cache 的工作方式：</strong> 先复制一份数据到 CPU Cache 中，当 CPU 需要用到的时候就可以直接从 CPU Cache 中读取数据，当运算完成后，再将运算得到的数据写回 Main Memory 中。但是，这样存在 <strong>内存缓存不一致性的问题</strong> ！比如我执行一个 i++ 操作的话，如果两个线程同时执行的话，假设两个线程从 CPU Cache 中读取的 i=1，两个线程做了 i++ 运算完之后再写回 Main Memory 之后 i=2，而正确结果应该是 i=3。</p>\n<p><strong>CPU 为了解决内存缓存不一致性问题可以通过制定缓存一致协议（比如 <a href=\"https://zh.wikipedia.org/wiki/MESI协议\" ref=\"nofollow\" target=\"_blank\">MESI 协议open in new window</a><span><svg xmlns=\"http://www.w3.org/2000/svg\" class=\"inline ml-1\" style=\"color: #aaa;\" aria-hidden=\"true\" focusable=\"false\" x=\"0px\" y=\"0px\" viewBox=\"0 0 100 100\" width=\"15\" height=\"15\" class=\"icon outbound\"><path fill=\"currentColor\" d=\"M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z\"></path> <polygon fill=\"currentColor\" points=\"45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9\"></polygon></svg> <span class=\"sr-only\"></span></span>）或者其他手段来解决。</strong> 这个缓存一致性协议指的是在 CPU 高速缓存与主内存交互的时候需要遵守的原则和规范。不同的 CPU 中，使用的缓存一致性协议通常也会有所不同。</p>\n<p>\n<img src=\"http://110.41.141.141:9000/weblog/b6a57a20dad44d3ea267a3caee24a72a.png\">\n</p>\n<p>我们的程序运行在操作系统之上，操作系统屏蔽了底层硬件的操作细节，将各种硬件资源虚拟化。于是，操作系统也就同样需要解决内存缓存不一致性问题。</p>\n<p>操作系统通过 <strong>内存模型（Memory Model）</strong> 定义一系列规范来解决这个问题。无论是 Windows 系统，还是 Linux 系统，它们都有特定的内存模型。</p>\n<h2 id=\"2指令重排序\">2、指令重排序</h2>\n<p>说完了 CPU 缓存模型，我们再来看看另外一个比较重要的概念 <strong>指令重排序</strong> 。</p>\n<p>为了提升执行速度/性能，计算机在执行程序代码的时候，会对指令进行重排序。</p>\n<p><strong>什么是指令重排序？</strong> 简单来说就是系统在执行代码的时候并不一定是按照你写的代码的顺序依次执行。</p>\n<p>常见的指令重排序有下面 2 种情况：</p>\n<ul>\n<li><strong>编译器优化重排</strong>：编译器（包括 JVM、JIT 编译器等）在不改变单线程程序语义的前提下，重新安排语句的执行顺序。</li>\n<li><strong>指令并行重排</strong>：现代处理器采用了指令级并行技术(Instruction-Level Parallelism，ILP)来将多条指令重叠执行。如果不存在数据依赖性，处理器可以改变语句对应机器指令的执行顺序。</li>\n</ul>\n<p>另外，内存系统也会有“重排序”，但又不是真正意义上的重排序。在 JMM 里表现为主存和本地内存的内容可能不一致，进而导致程序在多线程下执行可能出现问题。</p>\n<p>Java 源代码会经历 <strong>编译器优化重排 —&gt; 指令并行重排 —&gt; 内存系统重排</strong> 的过程，最终才变成操作系统可执行的指令序列。</p>\n<p><strong>指令重排序可以保证串行语义一致，但是没有义务保证多线程间的语义也一致</strong> ，所以在多线程下，指令重排序可能会导致一些问题。</p>\n<p>编译器和处理器的指令重排序的处理方式不一样。对于编译器，通过禁止特定类型的编译器重排序的方式来禁止重排序。对于处理器，通过插入内存屏障（Memory Barrier，或有时叫做内存栅栏，Memory Fence）的方式来禁止特定类型的处理器重排序。指令并行重排和内存系统重排都属于是处理器级别的指令重排序。</p>\n<blockquote>\n<p>内存屏障（Memory Barrier，或有时叫做内存栅栏，Memory Fence）是一种 CPU 指令，用来禁止处理器指令发生重排序（像屏障一样），从而保障指令执行的有序性。另外，为了达到屏障的效果，它也会使处理器写入、读取值之前，将主内存的值写入高速缓存，清空无效队列，从而保障变量的可见性。</p>\n</blockquote>\n<h2 id=\"3jmmjava-memory-model\">3、JMM(Java Memory Model)</h2>\n<h3 id=\"31什么是-jmm为什么需要-jmm\">3.1、什么是 JMM？为什么需要 JMM？</h3>\n<p>Java 是最早尝试提供内存模型的编程语言。由于早期内存模型存在一些缺陷（比如非常容易削弱编译器的优化能力），从 Java5 开始，Java 开始使用新的内存模型 <a href=\"http://www.cs.umd.edu/~pugh/java/memoryModel/CommunityReview.pdf\" ref=\"nofollow\" target=\"_blank\">《JSR-133：Java Memory Model and Thread Specification》open in new window</a><span><svg xmlns=\"http://www.w3.org/2000/svg\" class=\"inline ml-1\" style=\"color: #aaa;\" aria-hidden=\"true\" focusable=\"false\" x=\"0px\" y=\"0px\" viewBox=\"0 0 100 100\" width=\"15\" height=\"15\" class=\"icon outbound\"><path fill=\"currentColor\" d=\"M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z\"></path> <polygon fill=\"currentColor\" points=\"45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9\"></polygon></svg> <span class=\"sr-only\"></span></span> 。</p>\n<p>一般来说，编程语言也可以直接复用操作系统层面的内存模型。不过，不同的操作系统内存模型不同。如果直接复用操作系统层面的内存模型，就可能会导致同样一套代码换了一个操作系统就无法执行了。Java 语言是跨平台的，它需要自己提供一套内存模型以屏蔽系统差异。</p>\n<p>这只是 JMM 存在的其中一个原因。实际上，对于 Java 来说，你可以把 JMM 看作是 Java 定义的并发编程相关的一组规范，除了抽象了线程和主内存之间的关系之外，其还规定了从 Java 源代码到 CPU 可执行指令的这个转化过程要遵守哪些和并发相关的原则和规范，其主要目的是为了简化多线程编程，增强程序可移植性的。</p>\n<p><strong>为什么要遵守这些并发相关的原则和规范呢？</strong> 这是因为并发编程下，像 CPU 多级缓存和指令重排这类设计可能会导致程序运行出现一些问题。就比如说我们上面提到的指令重排序就可能会让多线程程序的执行出现问题，为此，JMM 抽象了 happens-before 原则（后文会详细介绍到）来解决这个指令重排序问题。</p>\n<p>JMM 说白了就是定义了一些规范来解决这些问题，开发者可以利用这些规范更方便地开发多线程程序。对于 Java 开发者说，你不需要了解底层原理，直接使用并发相关的一些关键字和类（比如 <code>volatile</code>、<code>synchronized</code>、各种 <code>Lock</code>）即可开发出并发安全的程序。</p>\n<h3 id=\"32jmm-是如何抽象线程和主内存之间的关系\">3.2、JMM 是如何抽象线程和主内存之间的关系？</h3>\n<p><strong>Java 内存模型（JMM）</strong> 抽象了线程和主内存之间的关系，就比如说线程之间的共享变量必须存储在主内存中。</p>\n<p>在 JDK1.2 之前，Java 的内存模型实现总是从 <strong>主存</strong> （即共享内存）读取变量，是不需要进行特别的注意的。而在当前的 Java 内存模型下，线程可以把变量保存 <strong>本地内存</strong> （比如机器的寄存器）中，而不是直接在主存中进行读写。这就可能造成一个线程在主存中修改了一个变量的值，而另外一个线程还继续使用它在寄存器中的变量值的拷贝，造成数据的不一致。</p>\n<p>这和我们上面讲到的 CPU 缓存模型非常相似。</p>\n<h4 id=\"321什么是主内存什么是本地内存\">3.2.1、什么是主内存？什么是本地内存？</h4>\n<ul>\n<li><strong>主内存</strong>：所有线程创建的实例对象都存放在主内存中，不管该实例对象是成员变量，还是局部变量，类信息、常量、静态变量都是放在主内存中。为了获取更好的运行速度，虚拟机及硬件系统可能会让工作内存优先存储于寄存器和高速缓存中。</li>\n<li><strong>本地内存</strong>：每个线程都有一个私有的本地内存，本地内存存储了该线程以读 / 写共享变量的副本。每个线程只能操作自己本地内存中的变量，无法直接访问其他线程的本地内存。如果线程间需要通信，必须通过主内存来进行。本地内存是 JMM 抽象出来的一个概念，并不真实存在，它涵盖了缓存、写缓冲区、寄存器以及其他的硬件和编译器优化。</li>\n</ul>\n<p>Java 内存模型的抽象示意图如下：</p>\n<p>\n<img src=\"http://110.41.141.141:9000/weblog/27c691d7982841e19ab613b40ceb1453.png\">\n</p>\n<p>从上图来看，线程 1 与线程 2 之间如果要进行通信的话，必须要经历下面 2 个步骤：</p>\n<ol>\n<li>线程 1 把本地内存中修改过的共享变量副本的值同步到主内存中去。</li>\n<li>线程 2 到主存中读取对应的共享变量的值。</li>\n</ol>\n<p>也就是说，JMM 为共享变量提供了可见性的保障。</p>\n<p>不过，多线程下，对主内存中的一个共享变量进行操作有可能诱发线程安全问题。举个例子：</p>\n<ol>\n<li>线程 1 和线程 2 分别对同一个共享变量进行操作，一个执行修改，一个执行读取。</li>\n<li>线程 2 读取到的是线程 1 修改之前的值还是修改后的值并不确定，都有可能，因为线程 1 和线程 2 都是先将共享变量从主内存拷贝到对应线程的工作内存中。</li>\n</ol>\n<p>关于主内存与工作内存直接的具体交互协议，即一个变量如何从主内存拷贝到工作内存，如何从工作内存同步到主内存之间的实现细节，Java 内存模型定义来以下八种同步操作（了解即可，无需死记硬背）：</p>\n<ul>\n<li><strong>锁定（lock）</strong>: 作用于主内存中的变量，将他标记为一个线程独享变量。</li>\n<li><strong>解锁（unlock）</strong>: 作用于主内存中的变量，解除变量的锁定状态，被解除锁定状态的变量才能被其他线程锁定。</li>\n<li><strong>read（读取）</strong>：作用于主内存的变量，它把一个变量的值从主内存传输到线程的工作内存中，以便随后的 load 动作使用。</li>\n<li><strong>load(载入)</strong>：把 read 操作从主内存中得到的变量值放入工作内存的变量的副本中。</li>\n<li><strong>use(使用)</strong>：把工作内存中的一个变量的值传给执行引擎，每当虚拟机遇到一个使用到变量的指令时都会使用该指令。</li>\n<li><strong>assign（赋值）</strong>：作用于工作内存的变量，它把一个从执行引擎接收到的值赋给工作内存的变量，每当虚拟机遇到一个给变量赋值的字节码指令时执行这个操作。</li>\n<li><strong>store（存储）</strong>：作用于工作内存的变量，它把工作内存中一个变量的值传送到主内存中，以便随后的 write 操作使用。</li>\n<li><strong>write（写入）</strong>：作用于主内存的变量，它把 store 操作从工作内存中得到的变量的值放入主内存的变量中。</li>\n</ul>\n<p>除了这 8 种同步操作之外，还规定了下面这些同步规则来保证这些同步操作的正确执行（了解即可，无需死记硬背）：</p>\n<ul>\n<li>不允许一个线程无原因地（没有发生过任何 assign 操作）把数据从线程的工作内存同步回主内存中。</li>\n<li>一个新的变量只能在主内存中 “诞生”，不允许在工作内存中直接使用一个未被初始化（load 或 assign）的变量，换句话说就是对一个变量实施 use 和 store 操作之前，必须先执行过了 assign 和 load 操作。</li>\n<li>一个变量在同一个时刻只允许一条线程对其进行 lock 操作，但 lock 操作可以被同一条线程重复执行多次，多次执行 lock 后，只有执行相同次数的 unlock 操作，变量才会被解锁。</li>\n<li>如果对一个变量执行 lock 操作，将会清空工作内存中此变量的值，在执行引擎使用这个变量前，需要重新执行 load 或 assign 操作初始化变量的值。</li>\n<li>如果一个变量事先没有被 lock 操作锁定，则不允许对它执行 unlock 操作，也不允许去 unlock 一个被其他线程锁定住的变量。</li>\n<li>……</li>\n</ul>\n<h3 id=\"33java-内存区域和-jmm-有何区别\">3.3、Java 内存区域和 JMM 有何区别？</h3>\n<p>这是一个比较常见的问题，很多初学者非常容易搞混。 <strong>Java 内存区域和内存模型是完全不一样的两个东西</strong>：</p>\n<ul>\n<li>JVM 内存结构和 Java 虚拟机的运行时区域相关，定义了 JVM 在运行时如何分区存储程序数据，就比如说堆主要用于存放对象实例。</li>\n<li>Java 内存模型和 Java 的并发编程相关，抽象了线程和主内存之间的关系就比如说线程之间的共享变量必须存储在主内存中，规定了从 Java 源代码到 CPU 可执行指令的这个转化过程要遵守哪些和并发相关的原则和规范，其主要目的是为了简化多线程编程，增强程序可移植性的。</li>\n</ul>\n<h3 id=\"34happens-before-原则是什么\">3.4、happens-before 原则是什么？</h3>\n<p>happens-before 这个概念最早诞生于 Leslie Lamport 于 1978 年发表的论文<a href=\"https://lamport.azurewebsites.net/pubs/time-clocks.pdf\" ref=\"nofollow\" target=\"_blank\">《Time，Clocks and the Ordering of Events in a Distributed System》open in new window</a><span><svg xmlns=\"http://www.w3.org/2000/svg\" class=\"inline ml-1\" style=\"color: #aaa;\" aria-hidden=\"true\" focusable=\"false\" x=\"0px\" y=\"0px\" viewBox=\"0 0 100 100\" width=\"15\" height=\"15\" class=\"icon outbound\"><path fill=\"currentColor\" d=\"M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z\"></path> <polygon fill=\"currentColor\" points=\"45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9\"></polygon></svg> <span class=\"sr-only\"></span></span>。在这篇论文中，Leslie Lamport 提出了<a href=\"https://writings.sh/post/logical-clocks\" ref=\"nofollow\" target=\"_blank\">逻辑时钟open in new window</a><span><svg xmlns=\"http://www.w3.org/2000/svg\" class=\"inline ml-1\" style=\"color: #aaa;\" aria-hidden=\"true\" focusable=\"false\" x=\"0px\" y=\"0px\" viewBox=\"0 0 100 100\" width=\"15\" height=\"15\" class=\"icon outbound\"><path fill=\"currentColor\" d=\"M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z\"></path> <polygon fill=\"currentColor\" points=\"45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9\"></polygon></svg> <span class=\"sr-only\"></span></span>的概念，这也成了第一个逻辑时钟算法 。在分布式环境中，通过一系列规则来定义逻辑时钟的变化，从而能通过逻辑时钟来对分布式系统中的事件的先后顺序进行判断。<strong>逻辑时钟并不度量时间本身，仅区分事件发生的前后顺序，其本质就是定义了一种 happens-before 关系。</strong></p>\n<p>上面提到的 happens-before 这个概念诞生的背景并不是重点，简单了解即可。</p>\n<p>JSR 133 引入了 happens-before 这个概念来描述两个操作之间的内存可见性。</p>\n<p><strong>为什么需要 happens-before 原则？</strong> happens-before 原则的诞生是为了程序员和编译器、处理器之间的平衡。程序员追求的是易于理解和编程的强内存模型，遵守既定规则编码即可。编译器和处理器追求的是较少约束的弱内存模型，让它们尽己所能地去优化性能，让性能最大化。happens-before 原则的设计思想其实非常简单：</p>\n<ul>\n<li>为了对编译器和处理器的约束尽可能少，只要不改变程序的执行结果（单线程程序和正确执行的多线程程序），编译器和处理器怎么进行重排序优化都行。</li>\n<li>对于会改变程序执行结果的重排序，JMM 要求编译器和处理器必须禁止这种重排序。</li>\n</ul>\n<p>\n<img src=\"http://110.41.141.141:9000/weblog/6ac056bc2f894aab866707baa2e054f5.png\">\n</p>\n<p>了解了 happens-before 原则的设计思想，我们再来看看 JSR-133 对 happens-before 原则的定义：</p>\n<ul>\n<li>如果一个操作 happens-before 另一个操作，那么第一个操作的执行结果将对第二个操作可见，并且第一个操作的执行顺序排在第二个操作之前。</li>\n<li>两个操作之间存在 happens-before 关系，并不意味着 Java 平台的具体实现必须要按照 happens-before 关系指定的顺序来执行。如果重排序之后的执行结果，与按 happens-before 关系来执行的结果一致，那么 JMM 也允许这样的重排序。</li>\n</ul>\n<p>我们看下面这段代码：</p>\n<pre><code class=\"language-java\">int userNum = getUserNum();   // 1\nint teacherNum = getTeacherNum();   // 2\nint totalNum = userNum + teacherNum;  // 3\n</code></pre>\n<ul>\n<li>1 happens-before 2</li>\n<li>2 happens-before 3</li>\n<li>1 happens-before 3</li>\n</ul>\n<p>虽然 1 happens-before 2，但对 1 和 2 进行重排序不会影响代码的执行结果，所以 JMM 是允许编译器和处理器执行这种重排序的。但 1 和 2 必须是在 3 执行之前，也就是说 1,2 happens-before 3 。</p>\n<p><strong>happens-before 原则表达的意义其实并不是一个操作发生在另外一个操作的前面，虽然这从程序员的角度上来说也并无大碍。更准确地来说，它更想表达的意义是前一个操作的结果对于后一个操作是可见的，无论这两个操作是否在同一个线程里。</strong></p>\n<p>举个例子：操作 1 happens-before 操作 2，即使操作 1 和操作 2 不在同一个线程内，JMM 也会保证操作 1 的结果对操作 2 是可见的。</p>\n<h3 id=\"35happens-before-常见规则有哪些谈谈你的理解\">3.5、happens-before 常见规则有哪些？谈谈你的理解？</h3>\n<p>happens-before 的规则就 8 条，说多不多，重点了解下面列举的 5 条即可。全记是不可能的，很快就忘记了，意义不大，随时查阅即可。</p>\n<ol>\n<li><strong>程序顺序规则</strong>：一个线程内，按照代码顺序，书写在前面的操作 happens-before 于书写在后面的操作；</li>\n<li><strong>解锁规则</strong>：解锁 happens-before 于加锁；</li>\n<li><strong>volatile 变量规则</strong>：对一个 volatile 变量的写操作 happens-before 于后面对这个 volatile 变量的读操作。说白了就是对 volatile 变量的写操作的结果对于发生于其后的任何操作都是可见的。</li>\n<li><strong>传递规则</strong>：如果 A happens-before B，且 B happens-before C，那么 A happens-before C；</li>\n<li><strong>线程启动规则</strong>：Thread 对象的 <code>start()</code>方法 happens-before 于此线程的每一个动作。</li>\n</ol>\n<p>如果两个操作不满足上述任意一个 happens-before 规则，那么这两个操作就没有顺序的保障，JVM 可以对这两个操作进行重排序。</p>\n<h3 id=\"36happens-before-和-jmm-什么关系\">3.6、happens-before 和 JMM 什么关系？</h3>\n<p>\n<img src=\"http://110.41.141.141:9000/weblog/80e06307474a4e31b2e8c7c9912b4654.png\">\n</p>\n<h2 id=\"4并发编程三个重要特性\">4、并发编程三个重要特性</h2>\n<h3 id=\"41原子性\">4.1、原子性</h3>\n<p>一次操作或者多次操作，要么所有的操作全部都得到执行并且不会受到任何因素的干扰而中断，要么都不执行。</p>\n<p>在 Java 中，可以借助<code>synchronized</code>、各种 <code>Lock</code> 以及各种原子类实现原子性。</p>\n<p><code>synchronized</code> 和各种 <code>Lock</code> 可以保证任一时刻只有一个线程访问该代码块，因此可以保障原子性。各种原子类是利用 CAS (compare and swap) 操作（可能也会用到 <code>volatile</code>或者<code>final</code>关键字）来保证原子操作。</p>\n<h3 id=\"42可见性\">4.2、可见性</h3>\n<p>当一个线程对共享变量进行了修改，那么另外的线程都是立即可以看到修改后的最新值。</p>\n<p>在 Java 中，可以借助<code>synchronized</code>、<code>volatile</code> 以及各种 <code>Lock</code> 实现可见性。</p>\n<p>如果我们将变量声明为 <code>volatile</code> ，这就指示 JVM，这个变量是共享且不稳定的，每次使用它都到主存中进行读取。</p>\n<h3 id=\"43有序性\">4.3、有序性</h3>\n<p>由于指令重排序问题，代码的执行顺序未必就是编写代码时候的顺序。</p>\n<p>我们上面讲重排序的时候也提到过：</p>\n<blockquote>\n<p><strong>指令重排序可以保证串行语义一致，但是没有义务保证多线程间的语义也一致</strong> ，所以在多线程下，指令重排序可能会导致一些问题。</p>\n</blockquote>\n<p>在 Java 中，<code>volatile</code> 关键字可以禁止指令进行重排序优化。</p>\n","createTime":"2024-07-19 22:43:31","categoryId":29,"categoryName":"Java","readNum":2,"tags":[{"id":72,"name":"jmm","articlesTotal":null}],"preArticle":{"articleId":59,"articleTitle":"负载均衡"},"nextArticle":{"articleId":57,"articleTitle":"微服务"},"totalWords":5136,"readTime":"约 17 分钟","updateTime":"2024-07-19 22:48:30"}} =================================== 
2024-07-24 19:32:37.943 [http-nio-8088-exec-2] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 1
2024-07-24 19:33:15.687 [http-nio-8088-exec-3] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ## HeaderUserId2ContextFilter，用户 ID：1
2024-07-24 19:33:15.687 [http-nio-8088-exec-3] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 1
2024-07-24 19:33:15.687 [http-nio-8088-exec-3] INFO  c.j.w.f.b.o.aspect.ApiOperationLogAspect - ====== 请求开始: [前台获取博客详情], 入参: , 请求类: BlogSettingsController, 请求方法: findDetail =================================== 
2024-07-24 19:33:15.690 [http-nio-8088-exec-3] INFO  c.j.w.f.b.o.aspect.ApiOperationLogAspect - ====== 请求结束: [前台获取博客详情], 耗时: 3ms, 出参: {"success":true,"message":null,"errorCode":null,"data":{"logo":"http://110.41.141.141:9000/weblog/weblog/9853f8be13cb4f7fae00e3f5233dd688.png","name":"WebLog","author":"Jacob","introduction":"求知若饥，虚心若愚","avatar":"https://webook-aliyun.oss-cn-hangzhou.aliyuncs.com/f5df2d94010149deb1da9c2a2096a9dc.jpg","githubHomepage":"https://github.com/jdw-art","csdnHomepage":"https://www.csdn.net/?spm=1010.2135.3001.4476","giteeHomepage":"","zhihuHomepage":"https://www.zhihu.com/people/54-10-50-93"}} =================================== 
2024-07-24 19:33:15.691 [http-nio-8088-exec-3] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 1
2024-07-24 19:33:15.723 [http-nio-8088-exec-1] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ## HeaderUserId2ContextFilter，用户 ID：1
2024-07-24 19:33:15.724 [http-nio-8088-exec-1] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 1
2024-07-24 19:33:15.730 [http-nio-8088-exec-8] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ## HeaderUserId2ContextFilter，用户 ID：1
2024-07-24 19:33:15.730 [http-nio-8088-exec-4] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ## HeaderUserId2ContextFilter，用户 ID：1
2024-07-24 19:33:15.730 [http-nio-8088-exec-4] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 1
2024-07-24 19:33:15.730 [http-nio-8088-exec-8] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 1
2024-07-24 19:33:15.730 [http-nio-8088-exec-5] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ## HeaderUserId2ContextFilter，用户 ID：1
2024-07-24 19:33:15.730 [http-nio-8088-exec-5] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 1
2024-07-24 19:33:15.730 [http-nio-8088-exec-1] INFO  c.j.w.f.b.o.aspect.ApiOperationLogAspect - ====== 请求开始: [获取首页文章分页数据], 入参: {"current":1,"size":10}, 请求类: ArticleController, 请求方法: findArticlePageList =================================== 
2024-07-24 19:33:15.730 [http-nio-8088-exec-5] INFO  c.j.w.f.b.o.aspect.ApiOperationLogAspect - ====== 请求开始: [前台获取标签列表], 入参: , 请求类: TagController, 请求方法: findTagList =================================== 
2024-07-24 19:33:15.732 [http-nio-8088-exec-4] INFO  c.j.w.f.b.o.aspect.ApiOperationLogAspect - ====== 请求开始: [前台获取统计信息], 入参: , 请求类: StatisticsController, 请求方法: findInfo =================================== 
2024-07-24 19:33:15.733 [http-nio-8088-exec-8] INFO  c.j.w.f.b.o.aspect.ApiOperationLogAspect - ====== 请求开始: [前台获取分类列表], 入参: {"size":10}, 请求类: CategoryController, 请求方法: findCategoryList =================================== 
2024-07-24 19:33:15.736 [http-nio-8088-exec-5] INFO  c.j.w.f.b.o.aspect.ApiOperationLogAspect - ====== 请求结束: [前台获取标签列表], 耗时: 6ms, 出参: {"success":true,"message":null,"errorCode":null,"data":[{"id":47,"name":"java","articlesTotal":13},{"id":48,"name":"脉冲神经网络","articlesTotal":6},{"id":49,"name":"snn","articlesTotal":6},{"id":54,"name":"联想记忆模型","articlesTotal":1},{"id":55,"name":"集合","articlesTotal":1},{"id":56,"name":"并发","articlesTotal":1},{"id":57,"name":"RabbitMQ","articlesTotal":2},{"id":58,"name":"spring","articlesTotal":4},{"id":59,"name":"springboot","articlesTotal":4},{"id":60,"name":"mongodb","articlesTotal":2},{"id":61,"name":"nosql","articlesTotal":1},{"id":62,"name":"redis","articlesTotal":2},{"id":63,"name":"mysql","articlesTotal":1},{"id":64,"name":"jvm","articlesTotal":1},{"id":65,"name":"elasticSearch","articlesTotal":1},{"id":66,"name":"SpringMVC","articlesTotal":1},{"id":67,"name":"计算机网络","articlesTotal":1},{"id":68,"name":"操作系统","articlesTotal":1},{"id":69,"name":"设计模式","articlesTotal":1},{"id":70,"name":"SpringCloud","articlesTotal":2},{"id":71,"name":"微服务","articlesTotal":3},{"id":72,"name":"jmm","articlesTotal":1},{"id":73,"name":"高可用","articlesTotal":2},{"id":74,"name":"系统设计","articlesTotal":2}]} =================================== 
2024-07-24 19:33:15.737 [http-nio-8088-exec-5] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 1
2024-07-24 19:33:15.739 [http-nio-8088-exec-8] INFO  c.j.w.f.b.o.aspect.ApiOperationLogAspect - ====== 请求结束: [前台获取分类列表], 耗时: 6ms, 出参: {"success":true,"message":null,"errorCode":null,"data":[{"id":29,"name":"Java","articlesTotal":6},{"id":31,"name":"SNN","articlesTotal":6},{"id":33,"name":"SpringBoot","articlesTotal":3},{"id":30,"name":"工具","articlesTotal":2},{"id":34,"name":"Redis","articlesTotal":2},{"id":32,"name":"Spring","articlesTotal":1},{"id":35,"name":"RabbitMQ","articlesTotal":1},{"id":36,"name":"MySQL","articlesTotal":1},{"id":37,"name":"MongoDB","articlesTotal":1},{"id":38,"name":"ElasticSearch","articlesTotal":1}]} =================================== 
2024-07-24 19:33:15.740 [http-nio-8088-exec-8] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 1
2024-07-24 19:33:15.749 [http-nio-8088-exec-4] INFO  c.j.w.f.b.o.aspect.ApiOperationLogAspect - ====== 请求结束: [前台获取统计信息], 耗时: 17ms, 出参: {"success":true,"message":null,"errorCode":null,"data":{"articleTotalCount":28,"categoryTotalCount":15,"tagTotalCount":24,"pvTotalCount":773}} =================================== 
2024-07-24 19:33:15.750 [http-nio-8088-exec-4] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 1
2024-07-24 19:33:15.769 [http-nio-8088-exec-1] INFO  c.j.w.f.b.o.aspect.ApiOperationLogAspect - ====== 请求结束: [获取首页文章分页数据], 耗时: 39ms, 出参: {"success":true,"message":null,"errorCode":null,"data":[{"id":43,"cover":"http://110.41.141.141:9000/weblog/weblog/05192a6167704ae8851dbcab6d4ebb7a.jpg","title":"E-Commerce","createDate":"2024-04-27","summary":"E-Commerce项目摘要","category":{"id":33,"name":"SpringBoot","articlesTotal":null},"tags":[{"id":47,"name":"java","articlesTotal":null},{"id":58,"name":"spring","articlesTotal":null},{"id":59,"name":"springboot","articlesTotal":null},{"id":57,"name":"RabbitMQ","articlesTotal":null},{"id":60,"name":"mongodb","articlesTotal":null}],"isTop":true},{"id":44,"cover":"http://110.41.141.141:9000/weblog/weblog/21bfecab22f14cef9536fc55c5ac3d11.png","title":"WebLog","createDate":"2024-04-27","summary":"WebLog项目摘要","category":{"id":33,"name":"SpringBoot","articlesTotal":null},"tags":[{"id":47,"name":"java","articlesTotal":null},{"id":58,"name":"spring","articlesTotal":null},{"id":59,"name":"springboot","articlesTotal":null}],"isTop":true},{"id":59,"cover":"http://110.41.141.141:9000/weblog/245940328a974c3aa35a4fab259c2f93.jpg","title":"负载均衡","createDate":"2024-07-19","summary":"负载均衡","category":{"id":41,"name":"高可用","articlesTotal":null},"tags":[{"id":73,"name":"高可用","articlesTotal":null},{"id":74,"name":"系统设计","articlesTotal":null},{"id":71,"name":"微服务","articlesTotal":null}],"isTop":false},{"id":58,"cover":"http://110.41.141.141:9000/weblog/90cd980f59014947af531833d3d32666.jpg","title":"JMM","createDate":"2024-07-19","summary":"Java内存模型","category":{"id":29,"name":"Java","articlesTotal":null},"tags":[{"id":72,"name":"jmm","articlesTotal":null}],"isTop":false},{"id":57,"cover":"http://110.41.141.141:9000/weblog/14b767a52a0548a29129a64ec9c31b92.png","title":"微服务","createDate":"2024-07-19","summary":"微服务","category":{"id":43,"name":"系统设计","articlesTotal":null},"tags":[{"id":71,"name":"微服务","articlesTotal":null},{"id":70,"name":"SpringCloud","articlesTotal":null},{"id":74,"name":"系统设计","articlesTotal":null},{"id":73,"name":"高可用","articlesTotal":null}],"isTop":false},{"id":56,"cover":"http://110.41.141.141:9000/weblog/065adf0970a84db291e85a56d9927905.jpg","title":"SpringCloud","createDate":"2024-07-19","summary":"Spring Cloud 八股","category":{"id":40,"name":"SpringCloud","articlesTotal":null},"tags":[{"id":70,"name":"SpringCloud","articlesTotal":null},{"id":71,"name":"微服务","articlesTotal":null}],"isTop":false},{"id":55,"cover":"http://110.41.141.141:9000/weblog/031b75962ad54f2f8e6cde5799dbd0f5.jpg","title":"DesignPattern","createDate":"2024-07-19","summary":"设计模式","category":{"id":29,"name":"Java","articlesTotal":null},"tags":[{"id":69,"name":"设计模式","articlesTotal":null}],"isTop":false},{"id":54,"cover":"http://110.41.141.141:9000/weblog/weblog/630032da446240d190e66871b6433f42.jpg","title":"操作系统","createDate":"2024-05-22","summary":"操作系统八股","category":{"id":30,"name":"工具","articlesTotal":null},"tags":[{"id":68,"name":"操作系统","articlesTotal":null}],"isTop":false},{"id":53,"cover":"http://110.41.141.141:9000/weblog/weblog/b483ce35c9e44b9db5df361e2cd1e2af.jpg","title":"计算机网络","createDate":"2024-05-22","summary":"计算机网络八股","category":{"id":30,"name":"工具","articlesTotal":null},"tags":[{"id":67,"name":"计算机网络","articlesTotal":null}],"isTop":false},{"id":51,"cover":"http://110.41.141.141:9000/weblog/weblog/20802574f640434eb207bf01a74b4c0c.jpg","title":"RedisIncrement","createDate":"2024-05-17","summary":"redis图文补充","category":{"id":34,"name":"Redis","articlesTotal":null},"tags":[{"id":62,"name":"redis","articlesTotal":null},{"id":47,"name":"java","articlesTotal":null}],"isTop":false}],"total":28,"size":10,"current":1,"pages":3} =================================== 
2024-07-24 19:33:15.771 [http-nio-8088-exec-1] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 1
2024-07-24 20:29:47.324 [http-nio-8088-exec-2] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ## HeaderUserId2ContextFilter，用户 ID：1
2024-07-24 20:29:47.338 [http-nio-8088-exec-2] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 1
2024-07-24 20:29:47.400 [http-nio-8088-exec-2] INFO  c.j.w.f.b.o.aspect.ApiOperationLogAspect - ====== 请求开始: [前台获取博客详情], 入参: , 请求类: BlogSettingsController, 请求方法: findDetail =================================== 
2024-07-24 20:29:47.467 [http-nio-8088-exec-5] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ## HeaderUserId2ContextFilter，用户 ID：1
2024-07-24 20:29:47.467 [http-nio-8088-exec-5] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 1
2024-07-24 20:29:47.469 [http-nio-8088-exec-5] INFO  c.j.w.f.b.o.aspect.ApiOperationLogAspect - ====== 请求开始: [前台获取统计信息], 入参: , 请求类: StatisticsController, 请求方法: findInfo =================================== 
2024-07-24 20:29:47.474 [http-nio-8088-exec-8] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ## HeaderUserId2ContextFilter，用户 ID：1
2024-07-24 20:29:47.474 [http-nio-8088-exec-8] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 1
2024-07-24 20:29:47.475 [http-nio-8088-exec-3] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ## HeaderUserId2ContextFilter，用户 ID：1
2024-07-24 20:29:47.475 [http-nio-8088-exec-3] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 1
2024-07-24 20:29:47.474 [http-nio-8088-exec-4] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ## HeaderUserId2ContextFilter，用户 ID：1
2024-07-24 20:29:47.475 [http-nio-8088-exec-4] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 1
2024-07-24 20:29:47.477 [http-nio-8088-exec-4] INFO  c.j.w.f.b.o.aspect.ApiOperationLogAspect - ====== 请求开始: [前台获取标签列表], 入参: , 请求类: TagController, 请求方法: findTagList =================================== 
2024-07-24 20:29:47.580 [http-nio-8088-exec-3] INFO  c.j.w.f.b.o.aspect.ApiOperationLogAspect - ====== 请求开始: [获取首页文章分页数据], 入参: {"current":1,"size":10}, 请求类: ArticleController, 请求方法: findArticlePageList =================================== 
2024-07-24 20:29:47.628 [http-nio-8088-exec-2] INFO  c.j.w.f.b.o.aspect.ApiOperationLogAspect - ====== 请求结束: [前台获取博客详情], 耗时: 234ms, 出参: {"success":true,"message":null,"errorCode":null,"data":{"logo":"http://110.41.141.141:9000/weblog/weblog/9853f8be13cb4f7fae00e3f5233dd688.png","name":"WebLog","author":"Jacob","introduction":"求知若饥，虚心若愚","avatar":"https://webook-aliyun.oss-cn-hangzhou.aliyuncs.com/f5df2d94010149deb1da9c2a2096a9dc.jpg","githubHomepage":"https://github.com/jdw-art","csdnHomepage":"https://www.csdn.net/?spm=1010.2135.3001.4476","giteeHomepage":"","zhihuHomepage":"https://www.zhihu.com/people/54-10-50-93"}} =================================== 
2024-07-24 20:29:47.656 [http-nio-8088-exec-5] INFO  c.j.w.f.b.o.aspect.ApiOperationLogAspect - ====== 请求结束: [前台获取统计信息], 耗时: 187ms, 出参: {"success":true,"message":null,"errorCode":null,"data":{"articleTotalCount":28,"categoryTotalCount":15,"tagTotalCount":24,"pvTotalCount":773}} =================================== 
2024-07-24 20:29:47.678 [http-nio-8088-exec-5] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 1
2024-07-24 20:29:47.682 [http-nio-8088-exec-2] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 1
2024-07-24 20:29:47.712 [http-nio-8088-exec-4] INFO  c.j.w.f.b.o.aspect.ApiOperationLogAspect - ====== 请求结束: [前台获取标签列表], 耗时: 235ms, 出参: {"success":true,"message":null,"errorCode":null,"data":[{"id":47,"name":"java","articlesTotal":13},{"id":48,"name":"脉冲神经网络","articlesTotal":6},{"id":49,"name":"snn","articlesTotal":6},{"id":54,"name":"联想记忆模型","articlesTotal":1},{"id":55,"name":"集合","articlesTotal":1},{"id":56,"name":"并发","articlesTotal":1},{"id":57,"name":"RabbitMQ","articlesTotal":2},{"id":58,"name":"spring","articlesTotal":4},{"id":59,"name":"springboot","articlesTotal":4},{"id":60,"name":"mongodb","articlesTotal":2},{"id":61,"name":"nosql","articlesTotal":1},{"id":62,"name":"redis","articlesTotal":2},{"id":63,"name":"mysql","articlesTotal":1},{"id":64,"name":"jvm","articlesTotal":1},{"id":65,"name":"elasticSearch","articlesTotal":1},{"id":66,"name":"SpringMVC","articlesTotal":1},{"id":67,"name":"计算机网络","articlesTotal":1},{"id":68,"name":"操作系统","articlesTotal":1},{"id":69,"name":"设计模式","articlesTotal":1},{"id":70,"name":"SpringCloud","articlesTotal":2},{"id":71,"name":"微服务","articlesTotal":3},{"id":72,"name":"jmm","articlesTotal":1},{"id":73,"name":"高可用","articlesTotal":2},{"id":74,"name":"系统设计","articlesTotal":2}]} =================================== 
2024-07-24 20:29:47.714 [http-nio-8088-exec-4] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 1
2024-07-24 20:29:47.738 [http-nio-8088-exec-8] INFO  c.j.w.f.b.o.aspect.ApiOperationLogAspect - ====== 请求开始: [前台获取分类列表], 入参: {"size":10}, 请求类: CategoryController, 请求方法: findCategoryList =================================== 
2024-07-24 20:29:47.764 [http-nio-8088-exec-8] INFO  c.j.w.f.b.o.aspect.ApiOperationLogAspect - ====== 请求结束: [前台获取分类列表], 耗时: 27ms, 出参: {"success":true,"message":null,"errorCode":null,"data":[{"id":29,"name":"Java","articlesTotal":6},{"id":31,"name":"SNN","articlesTotal":6},{"id":33,"name":"SpringBoot","articlesTotal":3},{"id":30,"name":"工具","articlesTotal":2},{"id":34,"name":"Redis","articlesTotal":2},{"id":32,"name":"Spring","articlesTotal":1},{"id":35,"name":"RabbitMQ","articlesTotal":1},{"id":36,"name":"MySQL","articlesTotal":1},{"id":37,"name":"MongoDB","articlesTotal":1},{"id":38,"name":"ElasticSearch","articlesTotal":1}]} =================================== 
2024-07-24 20:29:47.768 [http-nio-8088-exec-8] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 1
2024-07-24 20:29:47.920 [http-nio-8088-exec-3] INFO  c.j.w.f.b.o.aspect.ApiOperationLogAspect - ====== 请求结束: [获取首页文章分页数据], 耗时: 347ms, 出参: {"success":true,"message":null,"errorCode":null,"data":[{"id":43,"cover":"http://110.41.141.141:9000/weblog/weblog/05192a6167704ae8851dbcab6d4ebb7a.jpg","title":"E-Commerce","createDate":"2024-04-27","summary":"E-Commerce项目摘要","category":{"id":33,"name":"SpringBoot","articlesTotal":null},"tags":[{"id":47,"name":"java","articlesTotal":null},{"id":58,"name":"spring","articlesTotal":null},{"id":59,"name":"springboot","articlesTotal":null},{"id":57,"name":"RabbitMQ","articlesTotal":null},{"id":60,"name":"mongodb","articlesTotal":null}],"isTop":true},{"id":44,"cover":"http://110.41.141.141:9000/weblog/weblog/21bfecab22f14cef9536fc55c5ac3d11.png","title":"WebLog","createDate":"2024-04-27","summary":"WebLog项目摘要","category":{"id":33,"name":"SpringBoot","articlesTotal":null},"tags":[{"id":47,"name":"java","articlesTotal":null},{"id":58,"name":"spring","articlesTotal":null},{"id":59,"name":"springboot","articlesTotal":null}],"isTop":true},{"id":59,"cover":"http://110.41.141.141:9000/weblog/245940328a974c3aa35a4fab259c2f93.jpg","title":"负载均衡","createDate":"2024-07-19","summary":"负载均衡","category":{"id":41,"name":"高可用","articlesTotal":null},"tags":[{"id":73,"name":"高可用","articlesTotal":null},{"id":74,"name":"系统设计","articlesTotal":null},{"id":71,"name":"微服务","articlesTotal":null}],"isTop":false},{"id":58,"cover":"http://110.41.141.141:9000/weblog/90cd980f59014947af531833d3d32666.jpg","title":"JMM","createDate":"2024-07-19","summary":"Java内存模型","category":{"id":29,"name":"Java","articlesTotal":null},"tags":[{"id":72,"name":"jmm","articlesTotal":null}],"isTop":false},{"id":57,"cover":"http://110.41.141.141:9000/weblog/14b767a52a0548a29129a64ec9c31b92.png","title":"微服务","createDate":"2024-07-19","summary":"微服务","category":{"id":43,"name":"系统设计","articlesTotal":null},"tags":[{"id":71,"name":"微服务","articlesTotal":null},{"id":70,"name":"SpringCloud","articlesTotal":null},{"id":74,"name":"系统设计","articlesTotal":null},{"id":73,"name":"高可用","articlesTotal":null}],"isTop":false},{"id":56,"cover":"http://110.41.141.141:9000/weblog/065adf0970a84db291e85a56d9927905.jpg","title":"SpringCloud","createDate":"2024-07-19","summary":"Spring Cloud 八股","category":{"id":40,"name":"SpringCloud","articlesTotal":null},"tags":[{"id":70,"name":"SpringCloud","articlesTotal":null},{"id":71,"name":"微服务","articlesTotal":null}],"isTop":false},{"id":55,"cover":"http://110.41.141.141:9000/weblog/031b75962ad54f2f8e6cde5799dbd0f5.jpg","title":"DesignPattern","createDate":"2024-07-19","summary":"设计模式","category":{"id":29,"name":"Java","articlesTotal":null},"tags":[{"id":69,"name":"设计模式","articlesTotal":null}],"isTop":false},{"id":54,"cover":"http://110.41.141.141:9000/weblog/weblog/630032da446240d190e66871b6433f42.jpg","title":"操作系统","createDate":"2024-05-22","summary":"操作系统八股","category":{"id":30,"name":"工具","articlesTotal":null},"tags":[{"id":68,"name":"操作系统","articlesTotal":null}],"isTop":false},{"id":53,"cover":"http://110.41.141.141:9000/weblog/weblog/b483ce35c9e44b9db5df361e2cd1e2af.jpg","title":"计算机网络","createDate":"2024-05-22","summary":"计算机网络八股","category":{"id":30,"name":"工具","articlesTotal":null},"tags":[{"id":67,"name":"计算机网络","articlesTotal":null}],"isTop":false},{"id":51,"cover":"http://110.41.141.141:9000/weblog/weblog/20802574f640434eb207bf01a74b4c0c.jpg","title":"RedisIncrement","createDate":"2024-05-17","summary":"redis图文补充","category":{"id":34,"name":"Redis","articlesTotal":null},"tags":[{"id":62,"name":"redis","articlesTotal":null},{"id":47,"name":"java","articlesTotal":null}],"isTop":false}],"total":28,"size":10,"current":1,"pages":3} =================================== 
2024-07-24 20:29:47.931 [http-nio-8088-exec-3] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 1
2024-07-24 20:34:17.467 [http-nio-8088-exec-5] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ## HeaderUserId2ContextFilter，用户 ID：1
2024-07-24 20:34:17.467 [http-nio-8088-exec-5] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 1
2024-07-24 20:34:17.468 [http-nio-8088-exec-5] INFO  c.j.w.f.b.o.aspect.ApiOperationLogAspect - ====== 请求开始: [前台获取博客详情], 入参: , 请求类: BlogSettingsController, 请求方法: findDetail =================================== 
2024-07-24 20:34:17.471 [http-nio-8088-exec-5] INFO  c.j.w.f.b.o.aspect.ApiOperationLogAspect - ====== 请求结束: [前台获取博客详情], 耗时: 3ms, 出参: {"success":true,"message":null,"errorCode":null,"data":{"logo":"http://110.41.141.141:9000/weblog/weblog/9853f8be13cb4f7fae00e3f5233dd688.png","name":"WebLog","author":"Jacob","introduction":"求知若饥，虚心若愚","avatar":"https://webook-aliyun.oss-cn-hangzhou.aliyuncs.com/f5df2d94010149deb1da9c2a2096a9dc.jpg","githubHomepage":"https://github.com/jdw-art","csdnHomepage":"https://www.csdn.net/?spm=1010.2135.3001.4476","giteeHomepage":"","zhihuHomepage":"https://www.zhihu.com/people/54-10-50-93"}} =================================== 
2024-07-24 20:34:17.472 [http-nio-8088-exec-5] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 1
2024-07-24 20:34:17.515 [http-nio-8088-exec-2] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ## HeaderUserId2ContextFilter，用户 ID：1
2024-07-24 20:34:17.515 [http-nio-8088-exec-4] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ## HeaderUserId2ContextFilter，用户 ID：1
2024-07-24 20:34:17.515 [http-nio-8088-exec-4] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 1
2024-07-24 20:34:17.515 [http-nio-8088-exec-8] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ## HeaderUserId2ContextFilter，用户 ID：1
2024-07-24 20:34:17.515 [http-nio-8088-exec-2] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 1
2024-07-24 20:34:17.516 [http-nio-8088-exec-8] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 1
2024-07-24 20:34:17.516 [http-nio-8088-exec-2] INFO  c.j.w.f.b.o.aspect.ApiOperationLogAspect - ====== 请求开始: [前台获取统计信息], 入参: , 请求类: StatisticsController, 请求方法: findInfo =================================== 
2024-07-24 20:34:17.518 [http-nio-8088-exec-8] INFO  c.j.w.f.b.o.aspect.ApiOperationLogAspect - ====== 请求开始: [获取首页文章分页数据], 入参: {"current":1,"size":10}, 请求类: ArticleController, 请求方法: findArticlePageList =================================== 
2024-07-24 20:34:17.518 [http-nio-8088-exec-4] INFO  c.j.w.f.b.o.aspect.ApiOperationLogAspect - ====== 请求开始: [前台获取分类列表], 入参: {"size":10}, 请求类: CategoryController, 请求方法: findCategoryList =================================== 
2024-07-24 20:34:17.520 [http-nio-8088-exec-3] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ## HeaderUserId2ContextFilter，用户 ID：1
2024-07-24 20:34:17.521 [http-nio-8088-exec-3] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 1
2024-07-24 20:34:17.521 [http-nio-8088-exec-3] INFO  c.j.w.f.b.o.aspect.ApiOperationLogAspect - ====== 请求开始: [前台获取标签列表], 入参: , 请求类: TagController, 请求方法: findTagList =================================== 
2024-07-24 20:34:17.522 [http-nio-8088-exec-4] INFO  c.j.w.f.b.o.aspect.ApiOperationLogAspect - ====== 请求结束: [前台获取分类列表], 耗时: 5ms, 出参: {"success":true,"message":null,"errorCode":null,"data":[{"id":29,"name":"Java","articlesTotal":6},{"id":31,"name":"SNN","articlesTotal":6},{"id":33,"name":"SpringBoot","articlesTotal":3},{"id":30,"name":"工具","articlesTotal":2},{"id":34,"name":"Redis","articlesTotal":2},{"id":32,"name":"Spring","articlesTotal":1},{"id":35,"name":"RabbitMQ","articlesTotal":1},{"id":36,"name":"MySQL","articlesTotal":1},{"id":37,"name":"MongoDB","articlesTotal":1},{"id":38,"name":"ElasticSearch","articlesTotal":1}]} =================================== 
2024-07-24 20:34:17.527 [http-nio-8088-exec-2] INFO  c.j.w.f.b.o.aspect.ApiOperationLogAspect - ====== 请求结束: [前台获取统计信息], 耗时: 11ms, 出参: {"success":true,"message":null,"errorCode":null,"data":{"articleTotalCount":28,"categoryTotalCount":15,"tagTotalCount":24,"pvTotalCount":773}} =================================== 
2024-07-24 20:34:17.529 [http-nio-8088-exec-2] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 1
2024-07-24 20:34:17.529 [http-nio-8088-exec-3] INFO  c.j.w.f.b.o.aspect.ApiOperationLogAspect - ====== 请求结束: [前台获取标签列表], 耗时: 8ms, 出参: {"success":true,"message":null,"errorCode":null,"data":[{"id":47,"name":"java","articlesTotal":13},{"id":48,"name":"脉冲神经网络","articlesTotal":6},{"id":49,"name":"snn","articlesTotal":6},{"id":54,"name":"联想记忆模型","articlesTotal":1},{"id":55,"name":"集合","articlesTotal":1},{"id":56,"name":"并发","articlesTotal":1},{"id":57,"name":"RabbitMQ","articlesTotal":2},{"id":58,"name":"spring","articlesTotal":4},{"id":59,"name":"springboot","articlesTotal":4},{"id":60,"name":"mongodb","articlesTotal":2},{"id":61,"name":"nosql","articlesTotal":1},{"id":62,"name":"redis","articlesTotal":2},{"id":63,"name":"mysql","articlesTotal":1},{"id":64,"name":"jvm","articlesTotal":1},{"id":65,"name":"elasticSearch","articlesTotal":1},{"id":66,"name":"SpringMVC","articlesTotal":1},{"id":67,"name":"计算机网络","articlesTotal":1},{"id":68,"name":"操作系统","articlesTotal":1},{"id":69,"name":"设计模式","articlesTotal":1},{"id":70,"name":"SpringCloud","articlesTotal":2},{"id":71,"name":"微服务","articlesTotal":3},{"id":72,"name":"jmm","articlesTotal":1},{"id":73,"name":"高可用","articlesTotal":2},{"id":74,"name":"系统设计","articlesTotal":2}]} =================================== 
2024-07-24 20:34:17.530 [http-nio-8088-exec-3] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 1
2024-07-24 20:34:17.533 [http-nio-8088-exec-4] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 1
2024-07-24 20:34:17.557 [http-nio-8088-exec-8] INFO  c.j.w.f.b.o.aspect.ApiOperationLogAspect - ====== 请求结束: [获取首页文章分页数据], 耗时: 39ms, 出参: {"success":true,"message":null,"errorCode":null,"data":[{"id":43,"cover":"http://110.41.141.141:9000/weblog/weblog/05192a6167704ae8851dbcab6d4ebb7a.jpg","title":"E-Commerce","createDate":"2024-04-27","summary":"E-Commerce项目摘要","category":{"id":33,"name":"SpringBoot","articlesTotal":null},"tags":[{"id":47,"name":"java","articlesTotal":null},{"id":58,"name":"spring","articlesTotal":null},{"id":59,"name":"springboot","articlesTotal":null},{"id":57,"name":"RabbitMQ","articlesTotal":null},{"id":60,"name":"mongodb","articlesTotal":null}],"isTop":true},{"id":44,"cover":"http://110.41.141.141:9000/weblog/weblog/21bfecab22f14cef9536fc55c5ac3d11.png","title":"WebLog","createDate":"2024-04-27","summary":"WebLog项目摘要","category":{"id":33,"name":"SpringBoot","articlesTotal":null},"tags":[{"id":47,"name":"java","articlesTotal":null},{"id":58,"name":"spring","articlesTotal":null},{"id":59,"name":"springboot","articlesTotal":null}],"isTop":true},{"id":59,"cover":"http://110.41.141.141:9000/weblog/245940328a974c3aa35a4fab259c2f93.jpg","title":"负载均衡","createDate":"2024-07-19","summary":"负载均衡","category":{"id":41,"name":"高可用","articlesTotal":null},"tags":[{"id":73,"name":"高可用","articlesTotal":null},{"id":74,"name":"系统设计","articlesTotal":null},{"id":71,"name":"微服务","articlesTotal":null}],"isTop":false},{"id":58,"cover":"http://110.41.141.141:9000/weblog/90cd980f59014947af531833d3d32666.jpg","title":"JMM","createDate":"2024-07-19","summary":"Java内存模型","category":{"id":29,"name":"Java","articlesTotal":null},"tags":[{"id":72,"name":"jmm","articlesTotal":null}],"isTop":false},{"id":57,"cover":"http://110.41.141.141:9000/weblog/14b767a52a0548a29129a64ec9c31b92.png","title":"微服务","createDate":"2024-07-19","summary":"微服务","category":{"id":43,"name":"系统设计","articlesTotal":null},"tags":[{"id":71,"name":"微服务","articlesTotal":null},{"id":70,"name":"SpringCloud","articlesTotal":null},{"id":74,"name":"系统设计","articlesTotal":null},{"id":73,"name":"高可用","articlesTotal":null}],"isTop":false},{"id":56,"cover":"http://110.41.141.141:9000/weblog/065adf0970a84db291e85a56d9927905.jpg","title":"SpringCloud","createDate":"2024-07-19","summary":"Spring Cloud 八股","category":{"id":40,"name":"SpringCloud","articlesTotal":null},"tags":[{"id":70,"name":"SpringCloud","articlesTotal":null},{"id":71,"name":"微服务","articlesTotal":null}],"isTop":false},{"id":55,"cover":"http://110.41.141.141:9000/weblog/031b75962ad54f2f8e6cde5799dbd0f5.jpg","title":"DesignPattern","createDate":"2024-07-19","summary":"设计模式","category":{"id":29,"name":"Java","articlesTotal":null},"tags":[{"id":69,"name":"设计模式","articlesTotal":null}],"isTop":false},{"id":54,"cover":"http://110.41.141.141:9000/weblog/weblog/630032da446240d190e66871b6433f42.jpg","title":"操作系统","createDate":"2024-05-22","summary":"操作系统八股","category":{"id":30,"name":"工具","articlesTotal":null},"tags":[{"id":68,"name":"操作系统","articlesTotal":null}],"isTop":false},{"id":53,"cover":"http://110.41.141.141:9000/weblog/weblog/b483ce35c9e44b9db5df361e2cd1e2af.jpg","title":"计算机网络","createDate":"2024-05-22","summary":"计算机网络八股","category":{"id":30,"name":"工具","articlesTotal":null},"tags":[{"id":67,"name":"计算机网络","articlesTotal":null}],"isTop":false},{"id":51,"cover":"http://110.41.141.141:9000/weblog/weblog/20802574f640434eb207bf01a74b4c0c.jpg","title":"RedisIncrement","createDate":"2024-05-17","summary":"redis图文补充","category":{"id":34,"name":"Redis","articlesTotal":null},"tags":[{"id":62,"name":"redis","articlesTotal":null},{"id":47,"name":"java","articlesTotal":null}],"isTop":false}],"total":28,"size":10,"current":1,"pages":3} =================================== 
2024-07-24 20:34:17.562 [http-nio-8088-exec-8] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 1
2024-07-24 20:34:24.314 [http-nio-8088-exec-1] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ## HeaderUserId2ContextFilter，用户 ID：1
2024-07-24 20:34:24.314 [http-nio-8088-exec-1] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 1
2024-07-24 20:34:24.315 [http-nio-8088-exec-1] INFO  c.j.w.f.b.o.aspect.ApiOperationLogAspect - ====== 请求开始: [前台获取博客详情], 入参: , 请求类: BlogSettingsController, 请求方法: findDetail =================================== 
2024-07-24 20:34:24.318 [http-nio-8088-exec-1] INFO  c.j.w.f.b.o.aspect.ApiOperationLogAspect - ====== 请求结束: [前台获取博客详情], 耗时: 3ms, 出参: {"success":true,"message":null,"errorCode":null,"data":{"logo":"http://110.41.141.141:9000/weblog/weblog/9853f8be13cb4f7fae00e3f5233dd688.png","name":"WebLog","author":"Jacob","introduction":"求知若饥，虚心若愚","avatar":"https://webook-aliyun.oss-cn-hangzhou.aliyuncs.com/f5df2d94010149deb1da9c2a2096a9dc.jpg","githubHomepage":"https://github.com/jdw-art","csdnHomepage":"https://www.csdn.net/?spm=1010.2135.3001.4476","giteeHomepage":"","zhihuHomepage":"https://www.zhihu.com/people/54-10-50-93"}} =================================== 
2024-07-24 20:34:24.322 [http-nio-8088-exec-1] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 1
2024-07-24 20:34:24.386 [http-nio-8088-exec-9] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ## HeaderUserId2ContextFilter，用户 ID：1
2024-07-24 20:34:24.388 [http-nio-8088-exec-9] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 1
2024-07-24 20:34:24.410 [http-nio-8088-exec-10] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ## HeaderUserId2ContextFilter，用户 ID：1
2024-07-24 20:34:24.410 [http-nio-8088-exec-10] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 1
2024-07-24 20:34:24.410 [http-nio-8088-exec-6] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ## HeaderUserId2ContextFilter，用户 ID：1
2024-07-24 20:34:24.411 [http-nio-8088-exec-10] INFO  c.j.w.f.b.o.aspect.ApiOperationLogAspect - ====== 请求开始: [前台获取标签列表], 入参: , 请求类: TagController, 请求方法: findTagList =================================== 
2024-07-24 20:34:24.411 [http-nio-8088-exec-6] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 1
2024-07-24 20:34:24.416 [http-nio-8088-exec-6] INFO  c.j.w.f.b.o.aspect.ApiOperationLogAspect - ====== 请求开始: [前台获取统计信息], 入参: , 请求类: StatisticsController, 请求方法: findInfo =================================== 
2024-07-24 20:34:24.420 [http-nio-8088-exec-10] INFO  c.j.w.f.b.o.aspect.ApiOperationLogAspect - ====== 请求结束: [前台获取标签列表], 耗时: 10ms, 出参: {"success":true,"message":null,"errorCode":null,"data":[{"id":47,"name":"java","articlesTotal":13},{"id":48,"name":"脉冲神经网络","articlesTotal":6},{"id":49,"name":"snn","articlesTotal":6},{"id":54,"name":"联想记忆模型","articlesTotal":1},{"id":55,"name":"集合","articlesTotal":1},{"id":56,"name":"并发","articlesTotal":1},{"id":57,"name":"RabbitMQ","articlesTotal":2},{"id":58,"name":"spring","articlesTotal":4},{"id":59,"name":"springboot","articlesTotal":4},{"id":60,"name":"mongodb","articlesTotal":2},{"id":61,"name":"nosql","articlesTotal":1},{"id":62,"name":"redis","articlesTotal":2},{"id":63,"name":"mysql","articlesTotal":1},{"id":64,"name":"jvm","articlesTotal":1},{"id":65,"name":"elasticSearch","articlesTotal":1},{"id":66,"name":"SpringMVC","articlesTotal":1},{"id":67,"name":"计算机网络","articlesTotal":1},{"id":68,"name":"操作系统","articlesTotal":1},{"id":69,"name":"设计模式","articlesTotal":1},{"id":70,"name":"SpringCloud","articlesTotal":2},{"id":71,"name":"微服务","articlesTotal":3},{"id":72,"name":"jmm","articlesTotal":1},{"id":73,"name":"高可用","articlesTotal":2},{"id":74,"name":"系统设计","articlesTotal":2}]} =================================== 
2024-07-24 20:34:24.422 [http-nio-8088-exec-10] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 1
2024-07-24 20:34:24.438 [http-nio-8088-exec-6] INFO  c.j.w.f.b.o.aspect.ApiOperationLogAspect - ====== 请求结束: [前台获取统计信息], 耗时: 22ms, 出参: {"success":true,"message":null,"errorCode":null,"data":{"articleTotalCount":28,"categoryTotalCount":15,"tagTotalCount":24,"pvTotalCount":773}} =================================== 
2024-07-24 20:34:24.440 [http-nio-8088-exec-6] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 1
2024-07-24 20:34:24.462 [http-nio-8088-exec-9] INFO  c.j.w.f.b.o.aspect.ApiOperationLogAspect - ====== 请求开始: [获取首页文章分页数据], 入参: {"current":1,"size":10}, 请求类: ArticleController, 请求方法: findArticlePageList =================================== 
2024-07-24 20:34:24.469 [http-nio-8088-exec-7] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ## HeaderUserId2ContextFilter，用户 ID：1
2024-07-24 20:34:24.469 [http-nio-8088-exec-7] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 1
2024-07-24 20:34:24.473 [http-nio-8088-exec-7] INFO  c.j.w.f.b.o.aspect.ApiOperationLogAspect - ====== 请求开始: [前台获取分类列表], 入参: {"size":10}, 请求类: CategoryController, 请求方法: findCategoryList =================================== 
2024-07-24 20:34:24.488 [http-nio-8088-exec-7] INFO  c.j.w.f.b.o.aspect.ApiOperationLogAspect - ====== 请求结束: [前台获取分类列表], 耗时: 16ms, 出参: {"success":true,"message":null,"errorCode":null,"data":[{"id":29,"name":"Java","articlesTotal":6},{"id":31,"name":"SNN","articlesTotal":6},{"id":33,"name":"SpringBoot","articlesTotal":3},{"id":30,"name":"工具","articlesTotal":2},{"id":34,"name":"Redis","articlesTotal":2},{"id":32,"name":"Spring","articlesTotal":1},{"id":35,"name":"RabbitMQ","articlesTotal":1},{"id":36,"name":"MySQL","articlesTotal":1},{"id":37,"name":"MongoDB","articlesTotal":1},{"id":38,"name":"ElasticSearch","articlesTotal":1}]} =================================== 
2024-07-24 20:34:24.494 [http-nio-8088-exec-7] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 1
2024-07-24 20:34:24.519 [http-nio-8088-exec-9] INFO  c.j.w.f.b.o.aspect.ApiOperationLogAspect - ====== 请求结束: [获取首页文章分页数据], 耗时: 72ms, 出参: {"success":true,"message":null,"errorCode":null,"data":[{"id":43,"cover":"http://110.41.141.141:9000/weblog/weblog/05192a6167704ae8851dbcab6d4ebb7a.jpg","title":"E-Commerce","createDate":"2024-04-27","summary":"E-Commerce项目摘要","category":{"id":33,"name":"SpringBoot","articlesTotal":null},"tags":[{"id":47,"name":"java","articlesTotal":null},{"id":58,"name":"spring","articlesTotal":null},{"id":59,"name":"springboot","articlesTotal":null},{"id":57,"name":"RabbitMQ","articlesTotal":null},{"id":60,"name":"mongodb","articlesTotal":null}],"isTop":true},{"id":44,"cover":"http://110.41.141.141:9000/weblog/weblog/21bfecab22f14cef9536fc55c5ac3d11.png","title":"WebLog","createDate":"2024-04-27","summary":"WebLog项目摘要","category":{"id":33,"name":"SpringBoot","articlesTotal":null},"tags":[{"id":47,"name":"java","articlesTotal":null},{"id":58,"name":"spring","articlesTotal":null},{"id":59,"name":"springboot","articlesTotal":null}],"isTop":true},{"id":59,"cover":"http://110.41.141.141:9000/weblog/245940328a974c3aa35a4fab259c2f93.jpg","title":"负载均衡","createDate":"2024-07-19","summary":"负载均衡","category":{"id":41,"name":"高可用","articlesTotal":null},"tags":[{"id":73,"name":"高可用","articlesTotal":null},{"id":74,"name":"系统设计","articlesTotal":null},{"id":71,"name":"微服务","articlesTotal":null}],"isTop":false},{"id":58,"cover":"http://110.41.141.141:9000/weblog/90cd980f59014947af531833d3d32666.jpg","title":"JMM","createDate":"2024-07-19","summary":"Java内存模型","category":{"id":29,"name":"Java","articlesTotal":null},"tags":[{"id":72,"name":"jmm","articlesTotal":null}],"isTop":false},{"id":57,"cover":"http://110.41.141.141:9000/weblog/14b767a52a0548a29129a64ec9c31b92.png","title":"微服务","createDate":"2024-07-19","summary":"微服务","category":{"id":43,"name":"系统设计","articlesTotal":null},"tags":[{"id":71,"name":"微服务","articlesTotal":null},{"id":70,"name":"SpringCloud","articlesTotal":null},{"id":74,"name":"系统设计","articlesTotal":null},{"id":73,"name":"高可用","articlesTotal":null}],"isTop":false},{"id":56,"cover":"http://110.41.141.141:9000/weblog/065adf0970a84db291e85a56d9927905.jpg","title":"SpringCloud","createDate":"2024-07-19","summary":"Spring Cloud 八股","category":{"id":40,"name":"SpringCloud","articlesTotal":null},"tags":[{"id":70,"name":"SpringCloud","articlesTotal":null},{"id":71,"name":"微服务","articlesTotal":null}],"isTop":false},{"id":55,"cover":"http://110.41.141.141:9000/weblog/031b75962ad54f2f8e6cde5799dbd0f5.jpg","title":"DesignPattern","createDate":"2024-07-19","summary":"设计模式","category":{"id":29,"name":"Java","articlesTotal":null},"tags":[{"id":69,"name":"设计模式","articlesTotal":null}],"isTop":false},{"id":54,"cover":"http://110.41.141.141:9000/weblog/weblog/630032da446240d190e66871b6433f42.jpg","title":"操作系统","createDate":"2024-05-22","summary":"操作系统八股","category":{"id":30,"name":"工具","articlesTotal":null},"tags":[{"id":68,"name":"操作系统","articlesTotal":null}],"isTop":false},{"id":53,"cover":"http://110.41.141.141:9000/weblog/weblog/b483ce35c9e44b9db5df361e2cd1e2af.jpg","title":"计算机网络","createDate":"2024-05-22","summary":"计算机网络八股","category":{"id":30,"name":"工具","articlesTotal":null},"tags":[{"id":67,"name":"计算机网络","articlesTotal":null}],"isTop":false},{"id":51,"cover":"http://110.41.141.141:9000/weblog/weblog/20802574f640434eb207bf01a74b4c0c.jpg","title":"RedisIncrement","createDate":"2024-05-17","summary":"redis图文补充","category":{"id":34,"name":"Redis","articlesTotal":null},"tags":[{"id":62,"name":"redis","articlesTotal":null},{"id":47,"name":"java","articlesTotal":null}],"isTop":false}],"total":28,"size":10,"current":1,"pages":3} =================================== 
2024-07-24 20:34:24.520 [http-nio-8088-exec-9] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 1
2024-07-24 20:39:44.426 [http-nio-8088-exec-8] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ## HeaderUserId2ContextFilter，用户 ID：1
2024-07-24 20:39:44.426 [http-nio-8088-exec-8] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 1
2024-07-24 20:39:44.427 [http-nio-8088-exec-8] INFO  c.j.w.f.b.o.aspect.ApiOperationLogAspect - ====== 请求开始: [前台获取博客详情], 入参: , 请求类: BlogSettingsController, 请求方法: findDetail =================================== 
2024-07-24 20:39:44.435 [http-nio-8088-exec-8] INFO  c.j.w.f.b.o.aspect.ApiOperationLogAspect - ====== 请求结束: [前台获取博客详情], 耗时: 8ms, 出参: {"success":true,"message":null,"errorCode":null,"data":{"logo":"http://110.41.141.141:9000/weblog/weblog/9853f8be13cb4f7fae00e3f5233dd688.png","name":"WebLog","author":"Jacob","introduction":"求知若饥，虚心若愚","avatar":"https://webook-aliyun.oss-cn-hangzhou.aliyuncs.com/f5df2d94010149deb1da9c2a2096a9dc.jpg","githubHomepage":"https://github.com/jdw-art","csdnHomepage":"https://www.csdn.net/?spm=1010.2135.3001.4476","giteeHomepage":"","zhihuHomepage":"https://www.zhihu.com/people/54-10-50-93"}} =================================== 
2024-07-24 20:39:44.437 [http-nio-8088-exec-8] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 1
2024-07-24 20:39:44.525 [http-nio-8088-exec-1] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ## HeaderUserId2ContextFilter，用户 ID：1
2024-07-24 20:39:44.525 [http-nio-8088-exec-1] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 1
2024-07-24 20:39:44.528 [http-nio-8088-exec-1] INFO  c.j.w.f.b.o.aspect.ApiOperationLogAspect - ====== 请求开始: [获取首页文章分页数据], 入参: {"current":1,"size":10}, 请求类: ArticleController, 请求方法: findArticlePageList =================================== 
2024-07-24 20:39:44.530 [http-nio-8088-exec-6] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ## HeaderUserId2ContextFilter，用户 ID：1
2024-07-24 20:39:44.530 [http-nio-8088-exec-6] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 1
2024-07-24 20:39:44.531 [http-nio-8088-exec-6] INFO  c.j.w.f.b.o.aspect.ApiOperationLogAspect - ====== 请求开始: [前台获取标签列表], 入参: , 请求类: TagController, 请求方法: findTagList =================================== 
2024-07-24 20:39:44.531 [http-nio-8088-exec-10] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ## HeaderUserId2ContextFilter，用户 ID：1
2024-07-24 20:39:44.532 [http-nio-8088-exec-10] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 1
2024-07-24 20:39:44.533 [http-nio-8088-exec-10] INFO  c.j.w.f.b.o.aspect.ApiOperationLogAspect - ====== 请求开始: [前台获取统计信息], 入参: , 请求类: StatisticsController, 请求方法: findInfo =================================== 
2024-07-24 20:39:44.534 [http-nio-8088-exec-7] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ## HeaderUserId2ContextFilter，用户 ID：1
2024-07-24 20:39:44.534 [http-nio-8088-exec-7] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 1
2024-07-24 20:39:44.538 [http-nio-8088-exec-6] INFO  c.j.w.f.b.o.aspect.ApiOperationLogAspect - ====== 请求结束: [前台获取标签列表], 耗时: 6ms, 出参: {"success":true,"message":null,"errorCode":null,"data":[{"id":47,"name":"java","articlesTotal":13},{"id":48,"name":"脉冲神经网络","articlesTotal":6},{"id":49,"name":"snn","articlesTotal":6},{"id":54,"name":"联想记忆模型","articlesTotal":1},{"id":55,"name":"集合","articlesTotal":1},{"id":56,"name":"并发","articlesTotal":1},{"id":57,"name":"RabbitMQ","articlesTotal":2},{"id":58,"name":"spring","articlesTotal":4},{"id":59,"name":"springboot","articlesTotal":4},{"id":60,"name":"mongodb","articlesTotal":2},{"id":61,"name":"nosql","articlesTotal":1},{"id":62,"name":"redis","articlesTotal":2},{"id":63,"name":"mysql","articlesTotal":1},{"id":64,"name":"jvm","articlesTotal":1},{"id":65,"name":"elasticSearch","articlesTotal":1},{"id":66,"name":"SpringMVC","articlesTotal":1},{"id":67,"name":"计算机网络","articlesTotal":1},{"id":68,"name":"操作系统","articlesTotal":1},{"id":69,"name":"设计模式","articlesTotal":1},{"id":70,"name":"SpringCloud","articlesTotal":2},{"id":71,"name":"微服务","articlesTotal":3},{"id":72,"name":"jmm","articlesTotal":1},{"id":73,"name":"高可用","articlesTotal":2},{"id":74,"name":"系统设计","articlesTotal":2}]} =================================== 
2024-07-24 20:39:44.538 [http-nio-8088-exec-7] INFO  c.j.w.f.b.o.aspect.ApiOperationLogAspect - ====== 请求开始: [前台获取分类列表], 入参: {"size":10}, 请求类: CategoryController, 请求方法: findCategoryList =================================== 
2024-07-24 20:39:44.539 [http-nio-8088-exec-6] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 1
2024-07-24 20:39:44.545 [http-nio-8088-exec-7] INFO  c.j.w.f.b.o.aspect.ApiOperationLogAspect - ====== 请求结束: [前台获取分类列表], 耗时: 7ms, 出参: {"success":true,"message":null,"errorCode":null,"data":[{"id":29,"name":"Java","articlesTotal":6},{"id":31,"name":"SNN","articlesTotal":6},{"id":33,"name":"SpringBoot","articlesTotal":3},{"id":30,"name":"工具","articlesTotal":2},{"id":34,"name":"Redis","articlesTotal":2},{"id":32,"name":"Spring","articlesTotal":1},{"id":35,"name":"RabbitMQ","articlesTotal":1},{"id":36,"name":"MySQL","articlesTotal":1},{"id":37,"name":"MongoDB","articlesTotal":1},{"id":38,"name":"ElasticSearch","articlesTotal":1}]} =================================== 
2024-07-24 20:39:44.548 [http-nio-8088-exec-7] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 1
2024-07-24 20:39:44.549 [http-nio-8088-exec-10] INFO  c.j.w.f.b.o.aspect.ApiOperationLogAspect - ====== 请求结束: [前台获取统计信息], 耗时: 16ms, 出参: {"success":true,"message":null,"errorCode":null,"data":{"articleTotalCount":28,"categoryTotalCount":15,"tagTotalCount":24,"pvTotalCount":773}} =================================== 
2024-07-24 20:39:44.550 [http-nio-8088-exec-10] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 1
2024-07-24 20:39:44.585 [http-nio-8088-exec-1] INFO  c.j.w.f.b.o.aspect.ApiOperationLogAspect - ====== 请求结束: [获取首页文章分页数据], 耗时: 57ms, 出参: {"success":true,"message":null,"errorCode":null,"data":[{"id":43,"cover":"http://110.41.141.141:9000/weblog/weblog/05192a6167704ae8851dbcab6d4ebb7a.jpg","title":"E-Commerce","createDate":"2024-04-27","summary":"E-Commerce项目摘要","category":{"id":33,"name":"SpringBoot","articlesTotal":null},"tags":[{"id":47,"name":"java","articlesTotal":null},{"id":58,"name":"spring","articlesTotal":null},{"id":59,"name":"springboot","articlesTotal":null},{"id":57,"name":"RabbitMQ","articlesTotal":null},{"id":60,"name":"mongodb","articlesTotal":null}],"isTop":true},{"id":44,"cover":"http://110.41.141.141:9000/weblog/weblog/21bfecab22f14cef9536fc55c5ac3d11.png","title":"WebLog","createDate":"2024-04-27","summary":"WebLog项目摘要","category":{"id":33,"name":"SpringBoot","articlesTotal":null},"tags":[{"id":47,"name":"java","articlesTotal":null},{"id":58,"name":"spring","articlesTotal":null},{"id":59,"name":"springboot","articlesTotal":null}],"isTop":true},{"id":59,"cover":"http://110.41.141.141:9000/weblog/245940328a974c3aa35a4fab259c2f93.jpg","title":"负载均衡","createDate":"2024-07-19","summary":"负载均衡","category":{"id":41,"name":"高可用","articlesTotal":null},"tags":[{"id":73,"name":"高可用","articlesTotal":null},{"id":74,"name":"系统设计","articlesTotal":null},{"id":71,"name":"微服务","articlesTotal":null}],"isTop":false},{"id":58,"cover":"http://110.41.141.141:9000/weblog/90cd980f59014947af531833d3d32666.jpg","title":"JMM","createDate":"2024-07-19","summary":"Java内存模型","category":{"id":29,"name":"Java","articlesTotal":null},"tags":[{"id":72,"name":"jmm","articlesTotal":null}],"isTop":false},{"id":57,"cover":"http://110.41.141.141:9000/weblog/14b767a52a0548a29129a64ec9c31b92.png","title":"微服务","createDate":"2024-07-19","summary":"微服务","category":{"id":43,"name":"系统设计","articlesTotal":null},"tags":[{"id":71,"name":"微服务","articlesTotal":null},{"id":70,"name":"SpringCloud","articlesTotal":null},{"id":74,"name":"系统设计","articlesTotal":null},{"id":73,"name":"高可用","articlesTotal":null}],"isTop":false},{"id":56,"cover":"http://110.41.141.141:9000/weblog/065adf0970a84db291e85a56d9927905.jpg","title":"SpringCloud","createDate":"2024-07-19","summary":"Spring Cloud 八股","category":{"id":40,"name":"SpringCloud","articlesTotal":null},"tags":[{"id":70,"name":"SpringCloud","articlesTotal":null},{"id":71,"name":"微服务","articlesTotal":null}],"isTop":false},{"id":55,"cover":"http://110.41.141.141:9000/weblog/031b75962ad54f2f8e6cde5799dbd0f5.jpg","title":"DesignPattern","createDate":"2024-07-19","summary":"设计模式","category":{"id":29,"name":"Java","articlesTotal":null},"tags":[{"id":69,"name":"设计模式","articlesTotal":null}],"isTop":false},{"id":54,"cover":"http://110.41.141.141:9000/weblog/weblog/630032da446240d190e66871b6433f42.jpg","title":"操作系统","createDate":"2024-05-22","summary":"操作系统八股","category":{"id":30,"name":"工具","articlesTotal":null},"tags":[{"id":68,"name":"操作系统","articlesTotal":null}],"isTop":false},{"id":53,"cover":"http://110.41.141.141:9000/weblog/weblog/b483ce35c9e44b9db5df361e2cd1e2af.jpg","title":"计算机网络","createDate":"2024-05-22","summary":"计算机网络八股","category":{"id":30,"name":"工具","articlesTotal":null},"tags":[{"id":67,"name":"计算机网络","articlesTotal":null}],"isTop":false},{"id":51,"cover":"http://110.41.141.141:9000/weblog/weblog/20802574f640434eb207bf01a74b4c0c.jpg","title":"RedisIncrement","createDate":"2024-05-17","summary":"redis图文补充","category":{"id":34,"name":"Redis","articlesTotal":null},"tags":[{"id":62,"name":"redis","articlesTotal":null},{"id":47,"name":"java","articlesTotal":null}],"isTop":false}],"total":28,"size":10,"current":1,"pages":3} =================================== 
2024-07-24 20:39:44.589 [http-nio-8088-exec-1] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 1
2024-07-24 20:45:57.456 [http-nio-8088-exec-2] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ## HeaderUserId2ContextFilter，用户 ID：1
2024-07-24 20:45:57.456 [http-nio-8088-exec-2] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 1
2024-07-24 20:45:57.457 [http-nio-8088-exec-2] INFO  c.j.w.f.b.o.aspect.ApiOperationLogAspect - ====== 请求开始: [前台获取博客详情], 入参: , 请求类: BlogSettingsController, 请求方法: findDetail =================================== 
2024-07-24 20:45:57.461 [http-nio-8088-exec-2] INFO  c.j.w.f.b.o.aspect.ApiOperationLogAspect - ====== 请求结束: [前台获取博客详情], 耗时: 4ms, 出参: {"success":true,"message":null,"errorCode":null,"data":{"logo":"http://110.41.141.141:9000/weblog/weblog/9853f8be13cb4f7fae00e3f5233dd688.png","name":"WebLog","author":"Jacob","introduction":"求知若饥，虚心若愚","avatar":"https://webook-aliyun.oss-cn-hangzhou.aliyuncs.com/f5df2d94010149deb1da9c2a2096a9dc.jpg","githubHomepage":"https://github.com/jdw-art","csdnHomepage":"https://www.csdn.net/?spm=1010.2135.3001.4476","giteeHomepage":"","zhihuHomepage":"https://www.zhihu.com/people/54-10-50-93"}} =================================== 
2024-07-24 20:45:57.463 [http-nio-8088-exec-2] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 1
2024-07-24 20:45:57.569 [http-nio-8088-exec-8] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ## HeaderUserId2ContextFilter，用户 ID：1
2024-07-24 20:45:57.570 [http-nio-8088-exec-8] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 1
2024-07-24 20:45:57.574 [http-nio-8088-exec-7] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ## HeaderUserId2ContextFilter，用户 ID：1
2024-07-24 20:45:57.574 [http-nio-8088-exec-8] INFO  c.j.w.f.b.o.aspect.ApiOperationLogAspect - ====== 请求开始: [获取首页文章分页数据], 入参: {"current":1,"size":10}, 请求类: ArticleController, 请求方法: findArticlePageList =================================== 
2024-07-24 20:45:57.575 [http-nio-8088-exec-7] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 1
2024-07-24 20:45:57.574 [http-nio-8088-exec-6] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ## HeaderUserId2ContextFilter，用户 ID：1
2024-07-24 20:45:57.575 [http-nio-8088-exec-6] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 1
2024-07-24 20:45:57.576 [http-nio-8088-exec-6] INFO  c.j.w.f.b.o.aspect.ApiOperationLogAspect - ====== 请求开始: [前台获取统计信息], 入参: , 请求类: StatisticsController, 请求方法: findInfo =================================== 
2024-07-24 20:45:57.577 [http-nio-8088-exec-7] INFO  c.j.w.f.b.o.aspect.ApiOperationLogAspect - ====== 请求开始: [前台获取分类列表], 入参: {"size":10}, 请求类: CategoryController, 请求方法: findCategoryList =================================== 
2024-07-24 20:45:57.582 [http-nio-8088-exec-10] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ## HeaderUserId2ContextFilter，用户 ID：1
2024-07-24 20:45:57.582 [http-nio-8088-exec-10] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ===== 设置 userId 到 ThreadLocal 中， 用户 ID: 1
2024-07-24 20:45:57.583 [http-nio-8088-exec-10] INFO  c.j.w.f.b.o.aspect.ApiOperationLogAspect - ====== 请求开始: [前台获取标签列表], 入参: , 请求类: TagController, 请求方法: findTagList =================================== 
2024-07-24 20:45:57.583 [http-nio-8088-exec-7] INFO  c.j.w.f.b.o.aspect.ApiOperationLogAspect - ====== 请求结束: [前台获取分类列表], 耗时: 6ms, 出参: {"success":true,"message":null,"errorCode":null,"data":[{"id":29,"name":"Java","articlesTotal":6},{"id":31,"name":"SNN","articlesTotal":6},{"id":33,"name":"SpringBoot","articlesTotal":3},{"id":30,"name":"工具","articlesTotal":2},{"id":34,"name":"Redis","articlesTotal":2},{"id":32,"name":"Spring","articlesTotal":1},{"id":35,"name":"RabbitMQ","articlesTotal":1},{"id":36,"name":"MySQL","articlesTotal":1},{"id":37,"name":"MongoDB","articlesTotal":1},{"id":38,"name":"ElasticSearch","articlesTotal":1}]} =================================== 
2024-07-24 20:45:57.585 [http-nio-8088-exec-7] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 1
2024-07-24 20:45:57.590 [http-nio-8088-exec-10] INFO  c.j.w.f.b.o.aspect.ApiOperationLogAspect - ====== 请求结束: [前台获取标签列表], 耗时: 7ms, 出参: {"success":true,"message":null,"errorCode":null,"data":[{"id":47,"name":"java","articlesTotal":13},{"id":48,"name":"脉冲神经网络","articlesTotal":6},{"id":49,"name":"snn","articlesTotal":6},{"id":54,"name":"联想记忆模型","articlesTotal":1},{"id":55,"name":"集合","articlesTotal":1},{"id":56,"name":"并发","articlesTotal":1},{"id":57,"name":"RabbitMQ","articlesTotal":2},{"id":58,"name":"spring","articlesTotal":4},{"id":59,"name":"springboot","articlesTotal":4},{"id":60,"name":"mongodb","articlesTotal":2},{"id":61,"name":"nosql","articlesTotal":1},{"id":62,"name":"redis","articlesTotal":2},{"id":63,"name":"mysql","articlesTotal":1},{"id":64,"name":"jvm","articlesTotal":1},{"id":65,"name":"elasticSearch","articlesTotal":1},{"id":66,"name":"SpringMVC","articlesTotal":1},{"id":67,"name":"计算机网络","articlesTotal":1},{"id":68,"name":"操作系统","articlesTotal":1},{"id":69,"name":"设计模式","articlesTotal":1},{"id":70,"name":"SpringCloud","articlesTotal":2},{"id":71,"name":"微服务","articlesTotal":3},{"id":72,"name":"jmm","articlesTotal":1},{"id":73,"name":"高可用","articlesTotal":2},{"id":74,"name":"系统设计","articlesTotal":2}]} =================================== 
2024-07-24 20:45:57.595 [http-nio-8088-exec-6] INFO  c.j.w.f.b.o.aspect.ApiOperationLogAspect - ====== 请求结束: [前台获取统计信息], 耗时: 19ms, 出参: {"success":true,"message":null,"errorCode":null,"data":{"articleTotalCount":28,"categoryTotalCount":15,"tagTotalCount":24,"pvTotalCount":773}} =================================== 
2024-07-24 20:45:57.597 [http-nio-8088-exec-6] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 1
2024-07-24 20:45:57.601 [http-nio-8088-exec-10] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 1
2024-07-24 20:45:57.624 [http-nio-8088-exec-8] INFO  c.j.w.f.b.o.aspect.ApiOperationLogAspect - ====== 请求结束: [获取首页文章分页数据], 耗时: 49ms, 出参: {"success":true,"message":null,"errorCode":null,"data":[{"id":43,"cover":"http://110.41.141.141:9000/weblog/weblog/05192a6167704ae8851dbcab6d4ebb7a.jpg","title":"E-Commerce","createDate":"2024-04-27","summary":"E-Commerce项目摘要","category":{"id":33,"name":"SpringBoot","articlesTotal":null},"tags":[{"id":47,"name":"java","articlesTotal":null},{"id":58,"name":"spring","articlesTotal":null},{"id":59,"name":"springboot","articlesTotal":null},{"id":57,"name":"RabbitMQ","articlesTotal":null},{"id":60,"name":"mongodb","articlesTotal":null}],"isTop":true},{"id":44,"cover":"http://110.41.141.141:9000/weblog/weblog/21bfecab22f14cef9536fc55c5ac3d11.png","title":"WebLog","createDate":"2024-04-27","summary":"WebLog项目摘要","category":{"id":33,"name":"SpringBoot","articlesTotal":null},"tags":[{"id":47,"name":"java","articlesTotal":null},{"id":58,"name":"spring","articlesTotal":null},{"id":59,"name":"springboot","articlesTotal":null}],"isTop":true},{"id":59,"cover":"http://110.41.141.141:9000/weblog/245940328a974c3aa35a4fab259c2f93.jpg","title":"负载均衡","createDate":"2024-07-19","summary":"负载均衡","category":{"id":41,"name":"高可用","articlesTotal":null},"tags":[{"id":73,"name":"高可用","articlesTotal":null},{"id":74,"name":"系统设计","articlesTotal":null},{"id":71,"name":"微服务","articlesTotal":null}],"isTop":false},{"id":58,"cover":"http://110.41.141.141:9000/weblog/90cd980f59014947af531833d3d32666.jpg","title":"JMM","createDate":"2024-07-19","summary":"Java内存模型","category":{"id":29,"name":"Java","articlesTotal":null},"tags":[{"id":72,"name":"jmm","articlesTotal":null}],"isTop":false},{"id":57,"cover":"http://110.41.141.141:9000/weblog/14b767a52a0548a29129a64ec9c31b92.png","title":"微服务","createDate":"2024-07-19","summary":"微服务","category":{"id":43,"name":"系统设计","articlesTotal":null},"tags":[{"id":71,"name":"微服务","articlesTotal":null},{"id":70,"name":"SpringCloud","articlesTotal":null},{"id":74,"name":"系统设计","articlesTotal":null},{"id":73,"name":"高可用","articlesTotal":null}],"isTop":false},{"id":56,"cover":"http://110.41.141.141:9000/weblog/065adf0970a84db291e85a56d9927905.jpg","title":"SpringCloud","createDate":"2024-07-19","summary":"Spring Cloud 八股","category":{"id":40,"name":"SpringCloud","articlesTotal":null},"tags":[{"id":70,"name":"SpringCloud","articlesTotal":null},{"id":71,"name":"微服务","articlesTotal":null}],"isTop":false},{"id":55,"cover":"http://110.41.141.141:9000/weblog/031b75962ad54f2f8e6cde5799dbd0f5.jpg","title":"DesignPattern","createDate":"2024-07-19","summary":"设计模式","category":{"id":29,"name":"Java","articlesTotal":null},"tags":[{"id":69,"name":"设计模式","articlesTotal":null}],"isTop":false},{"id":54,"cover":"http://110.41.141.141:9000/weblog/weblog/630032da446240d190e66871b6433f42.jpg","title":"操作系统","createDate":"2024-05-22","summary":"操作系统八股","category":{"id":30,"name":"工具","articlesTotal":null},"tags":[{"id":68,"name":"操作系统","articlesTotal":null}],"isTop":false},{"id":53,"cover":"http://110.41.141.141:9000/weblog/weblog/b483ce35c9e44b9db5df361e2cd1e2af.jpg","title":"计算机网络","createDate":"2024-05-22","summary":"计算机网络八股","category":{"id":30,"name":"工具","articlesTotal":null},"tags":[{"id":67,"name":"计算机网络","articlesTotal":null}],"isTop":false},{"id":51,"cover":"http://110.41.141.141:9000/weblog/weblog/20802574f640434eb207bf01a74b4c0c.jpg","title":"RedisIncrement","createDate":"2024-05-17","summary":"redis图文补充","category":{"id":34,"name":"Redis","articlesTotal":null},"tags":[{"id":62,"name":"redis","articlesTotal":null},{"id":47,"name":"java","articlesTotal":null}],"isTop":false}],"total":28,"size":10,"current":1,"pages":3} =================================== 
2024-07-24 20:45:57.632 [http-nio-8088-exec-8] INFO  c.j.w.f.b.c.filter.HeaderUserId2ContextFilter - ===== 删除 ThreadLocal， userId: 1
